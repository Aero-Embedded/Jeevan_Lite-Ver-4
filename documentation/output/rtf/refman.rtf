{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\info 
{\title {\comment Jeevan Lite  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1.0 \par
}}Jeevan Lite}
{\comment Generated by doxygen 1.9.8.}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt Jeevan Lite}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version 1.0\par\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\par \pard\plain 
\pard\plain \s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Aerobiosys Innovations jeevan Lite Project\par \pard\plain 
{\tc\tcl1 \v Aerobiosys Innovations jeevan Lite Project}
{\xe \v Aerobiosys Innovations jeevan Lite Project}
{\bkmkstart AAAAAAACHC}
{\bkmkend AAAAAAACHC}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{\bkmkstart AAAAAAACHD}
{\bkmkend AAAAAAACHD}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Introduction
\par}
{\tc\tcl2 \v Introduction}
Welcome to the documentation for Jeevan Lite Project. This project is designed to showcase a variety of functionalities of the STM32F407 microcontroller, focusing on peripheral initialization, system timebase management, and basic I/O operations like controlling LEDs and reading button states.\par}
{\bkmkstart AAAAAAACHE}
{\bkmkend AAAAAAACHE}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Project Overview
\par}
{\tc\tcl2 \v Project Overview}
The project encompasses several Modes of ventilation, each dedicated to a specific aspect of the microcontroller's capabilities:{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BSP}  (Board Support Package): Manages the basic input/output functionalities, including motor control, Valve control, and interfacing sensors.\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FPU}  (Floating Point Unit): Handles the enabling of the microcontroller's floating point unit.\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Timebase:}  Responsible for time-related operations, providing functionalities for system tick count and delay mechanisms.\par}
\par
\par}
{\bkmkstart AAAAAAACHF}
{\bkmkend AAAAAAACHF}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Module Details
\par}
{\tc\tcl2 \v Module Details}
{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BSP}  Module:{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Functions: Blower control,proportional valve control,expiratory valve control.\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Features: Control the motherboard LED and read the Sensor values.\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FPU}  Module:{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Function: fpu_enable.\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Feature: Enable the Floating Point Unit for floating-point operations.\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Timebase}  Module:{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Functions: timebase_init, get_tick, delay.\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Features: Initialize the system tick timer, provide system tick count, and implement delay functionality.\par}
}
\par
\par}
{\bkmkstart AAAAAAACHG}
{\bkmkend AAAAAAACHG}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Usage
\par}
{\tc\tcl2 \v Usage}
Each module is designed to be independent yet cohesive when combined in an application. The main function demonstrates the use of these modules by integrating them to create a simple application that toggles an LED based on a button's state, while also utilizing system ticks for time management.\par}
{\bkmkstart AAAAAAACHH}
{\bkmkend AAAAAAACHH}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Author
\par}
{\tc\tcl2 \v Author}
{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Developed by Sarathkumar\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Date: 01/04/2024\par}
\par
\par}
{\bkmkstart AAAAAAACHI}
{\bkmkend AAAAAAACHI}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Additional Notes
\par}
{\tc\tcl2 \v Additional Notes}
This project is to make ventilator product in the STM32F407 microcontroller. It aims to provide a starting point for more complex projects and to demonstrate good practices in embedded software development, including code modularity and documentation. \par}
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Topic Index\par \pard\plain 
{\tc \v Topic Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Topics\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all topics with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
CMSIS\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKW \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Stm32f4xx_system\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKX \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
STM32F4xx_System_Private_Includes\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
STM32F4xx_System_Private_TypesDefinitions\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
STM32F4xx_System_Private_Defines\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
STM32F4xx_System_Private_Macros\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
STM32F4xx_System_Private_Variables\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
STM32F4xx_System_Private_FunctionPrototypes\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
STM32F4xx_System_Private_Functions\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Data Structure Index\par \pard\plain 
{\tc \v Data Structure Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Data Structures\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the data structures with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b ADC_Pheriperal} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Alert_count} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure Variables used to determine the alert })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ALERT_RANGE} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure extract alert range for each type of alert })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b aprv_mode_blower_control} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABML \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b aprv_mode_Parameter} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABMR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Aprv_PEEP_average} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABNE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Aprv_PIP_average} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABNI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BACKUP_PC_CMV_mode_parameter} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABNM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b bipap_Flags} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABNZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b bipap_mode_blower_control} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b bipap_mode_Parameter} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b bipap_peep_average} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b bipap_pip_average} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Bluetooth_parameter} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure Representing uart data reception buffer })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Calibration} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Common_Mode_parameter} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure contains common variables to check the alert })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b controlsys} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure Representing members used for pid })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b cpap_average} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CPAP_DAC_SIGNAL} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Cpap_Flags} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Cpap_mode_blower_control} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b cpap_mode_Parameter} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b GRAPH_PACKET_SEND} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure Representing Graph values for modes. data send to bluetooth })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b HFNC_Mode_Parameter} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure Representing {\b HFNC_Mode_Parameter} variables. it includes OXYGEN Flow rate and oxygen level })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b INSTANTANEOUS_VALUE} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure main patient Graph values })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b KALMAN_CONSTANTS} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kalman Filter Initial Conditions })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABUE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b NEBULISER_FLAGS} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABUI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b old_flags} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure representing the final variables after the new changes. It stores the value of the last set value to identify and modify a certain operation })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABUO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b OVER_ALL_DAC_SIGNAL} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABVM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Oxygen_parameter} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure Representing O2 DAC values for modes. it includes OXYGEN sensor offset values,maximum values and also Oxygen dac values })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABXR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PC_CMV_mode_parameter} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure Representing PCCMV Mode parameter variables. it includes expiration time ,rise time percentage variables })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABXZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PC_SIMV_mode_parameter} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure Representing PCSIMV Mode parameter variables. it includes expiration time ,rise time percentage variables })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABYL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b pcsimv} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PEEP_maintain_parameter} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure contains peep related variables })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PIP_average_parameter} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure contains pip related variables })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b pip_control_Task} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The structure contains PIP control within the core logic variables })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Pressure_mode_blower_control} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The structure contains blower dac signals for PIP and peep })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACAF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Psv_Flags} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACAN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Psv_mode_blower_control} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACAS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b psv_mode_Parameter} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACBA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b psv_peep_average} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACBN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b psv_pip_average} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACBR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b RECEIVE_GRAPH_PACKET} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure Representing Mode parameter values for modes. data receive from tab })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACBW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b sampled_Parameter_1} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACCP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b sampled_Parameter_2} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACCW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b sampled_Parameter_3} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACDN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b sampled_Parameter_4} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACEA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SENSOR} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sensor - Structure })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACEK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Service} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACEX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TIME_base_parameter} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure contains time based variables })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACFF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b VC_CMV_mode_parameter} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure Representing VCCMV Mode parameter variables. it includes expiration time ,rise time percentage variables })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACFL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b VC_SIMV_mode_parameter} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure Representing VCSIMV Mode parameter variables. it includes expiration time ,rise time percentage variables })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACFV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b vcsimv} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACGM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b volume_control_Task} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure Controls volume and flow achieved status })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACGP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Volume_mode_blower_control} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure control Blower Character. })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACGU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Index\par \pard\plain 
{\tc \v File Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
File List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all documented files with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/{\b FreeRTOSConfig.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/{\b main.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
: Header for main.c file. This file contains the common defines of the application })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/{\b stm32f4xx_hal_conf.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/{\b stm32f4xx_it.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file contains the headers of the interrupt handlers })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/ALERT/{\b Alert.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of an indicator for abnormal status of the ventilator })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/APRV/{\b APRV.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/BACKUP_PC_CMV/{\b Backup_Pc_cmv.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/BIPAP/{\b BiPap.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/Bluetooth/{\b Bluetooth_Data_Split.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of split Blue-tooth data })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/Bluetooth/{\b Bluetooth_Graph.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of Blue-tooth data reception and transmission })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/CALIBRATION/{\b Calibration.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/CPAP/{\b Cpap.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/Expiratory_Valve_Control/{\b Expiratory_Valve_Control_Pressure_Mode.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of Expiratory_Valve_Control_Pressure_Mode Concept })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/Expiratory_Valve_Control/{\b Expiratory_Valve_Control_Volume_Mode.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/HFNC/{\b HFNC.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of HFNC Feature })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/NEBULISER/{\b Nebuliser.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/OTHERS/{\b Common_Parameter.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of Finding average of PIP,peep })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/OTHERS/{\b Macros.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/OTHERS/{\b Mode_Initial_Flag_Set.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of Initial setup before starting the mode })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/OTHERS/{\b Problems_Happen.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/OTHERS/{\b Two_Milli_Second_Task.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of time based concept })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/OXYGEN_BLENDING/{\b Oxygen_Blending.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of Oxygen_Blending Concept })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/PC-SIMV/{\b Pc_Simv_Assist_OFF.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/PC-SIMV/{\b Pc_Simv_Assist_ON.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of Pc_Simv_Assist_ON mode })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/PC_CMV/{\b Pc_cmv.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of PCCMV mode })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/PIP_CONTROL/{\b PIP_Control.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration to control a PIP })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/PSV/{\b PSV.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/Sampled_Parameter/{\b Sampled_Parameter.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/READ_SENSORS_VALUES/{\b Sensor_Read.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of All sensor data's reading area })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/{\b ads1115.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of ADS1115 Module Configuration })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/{\b constants.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/{\b controlsys.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of control system })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/{\b database.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of Graph variables })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/{\b enum.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/{\b mpx5010.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of 5010 Pressure sensor Configuration })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/{\b mpx5010dp.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of mpx5010dp O2 pressure sensor integration })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/{\b mpx7002.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of mpx7002 Sensor integration })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/{\b oom202.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of Oxygen_Sensor_Integeration })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/{\b sensor.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/{\b utilities.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/{\b wsen10101.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of Worth sensor integration })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_OFFSET/{\b Sensor_Offset.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of Sensor offset calculation })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SERVICE/{\b Service.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SUCTION/{\b SUCTION.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/TASK_CREATE_&_PERIPHERALS_INIT/{\b Task_Create.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/VC-SIMV/{\b Vc_Simv_Assist_OFF.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/VC-SIMV/{\b Vc_Simv_Assist_ON.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of VCSIMV ASSSIT ONmode })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/VC_CMV/{\b Vc_Cmv.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of VCCMV mode })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/VOLUME_CONTROL/{\b Volume_control.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of inspiration time Volume control mode })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/{\b stm32f4xx_hal_msp.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file provides code for the MSP Initialization and de-Initialization codes })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/{\b stm32f4xx_hal_timebase_tim.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HAL time base based on the hardware TIM })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/{\b stm32f4xx_it.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interrupt {\b Service} Routines })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/{\b syscalls.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
STM32CubeIDE Minimal System calls file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/{\b sysmem.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
STM32CubeIDE System Memory calls file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/{\b system_stm32f4xx.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CMSIS Cortex-M4 Device Peripheral Access Layer System Source File })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/ALERT/{\b Alert.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of an indicator for abnormal status of the ventilator })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/Bluetooth/{\b Bluetooth_Data_Split.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of split Blue-tooth data })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/Bluetooth/{\b Bluetooth_Graph.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of Blue-tooth data reception and transmission })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/Expiratory_Valve_Control/{\b Expiratory_Valve_Control_Pressure_Mode.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of Expiratory_Valve_Control_Pressure_Mode Concept })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/HFNC/{\b HFNC.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of HFNC Feature })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/OTHERS/{\b Mode_Initial_Flag_Set.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of Initial setup before starting the mode })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/OTHERS/{\b Two_Milli_Second_Task.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of time based concept })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/OXYGEN_BLENDING/{\b Oxygen_Blending.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of Oxygen_Blending Concept })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/PC-SIMV/{\b Pc_Simv_Assist_ON.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of Pc_Simv_Assist_ON mode })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/PC_CMV/{\b Pc_cmv.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of PCCMV mode })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/PIP_CONTROL/{\b PIP_Control.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation to control a PIP })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/SENSORS/READ_SENSORS_VALUES/{\b Sensor_Read.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of All sensor data's reading area })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/SENSORS/SENSORS_INTERFACE/{\b ads1115.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of ADS1115 Module Configuration })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABET \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/SENSORS/SENSORS_INTERFACE/{\b controlsys.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PID control is used to regulate the oxygen blending process effectively. })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/SENSORS/SENSORS_INTERFACE/{\b database.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialization of graph values })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/SENSORS/SENSORS_INTERFACE/{\b digital_filters.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of Sensor Filter })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/SENSORS/SENSORS_INTERFACE/{\b mpx5010.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of 5010 Pressure sensor Configuration })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/SENSORS/SENSORS_INTERFACE/{\b mpx5010dp.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of mpx5010dp O2 pressure sensor integration })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/SENSORS/SENSORS_INTERFACE/{\b mpx7002.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of mpx7002 Sensor integration })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/SENSORS/SENSORS_INTERFACE/{\b OOM202.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of Envitec O2 sensor integration })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/SENSORS/SENSORS_INTERFACE/{\b wsen10101.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of Worth sensor integration })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/SENSORS/SENSORS_OFFSET/{\b Sensor_Offset.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of Sensor offset calculation })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/VC-SIMV/{\b Vc_Simv_Assist_ON.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of VC SIMV ASSSIT ON mode })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/VC_CMV/{\b Vc_Cmv.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of VCCMV mode })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABHM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/VOLUME_CONTROL/{\b Volume_Control.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of inspiration time Volume control mode })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Topic Documentation{\tc \v Topic Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CMSIS\par \pard\plain 
{\tc\tcl2 \v CMSIS}
{\xe \v CMSIS}
{\bkmkstart AAAAAAABKW}
{\bkmkend AAAAAAABKW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Stm32f4xx_system}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\par \pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Stm32f4xx_system\par \pard\plain 
{\tc\tcl3 \v Stm32f4xx_system}
{\xe \v Stm32f4xx_system}
{\bkmkstart AAAAAAABKX}
{\bkmkend AAAAAAABKX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b STM32F4xx_System_Private_Includes}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b STM32F4xx_System_Private_TypesDefinitions}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b STM32F4xx_System_Private_Defines}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b STM32F4xx_System_Private_Macros}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b STM32F4xx_System_Private_Variables}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b STM32F4xx_System_Private_FunctionPrototypes}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b STM32F4xx_System_Private_Functions}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\par \pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
STM32F4xx_System_Private_Includes\par \pard\plain 
{\tc\tcl4 \v STM32F4xx_System_Private_Includes}
{\xe \v STM32F4xx_System_Private_Includes}
{\bkmkstart AAAAAAABKY}
{\bkmkend AAAAAAABKY}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HSE_VALUE}\~ ((uint32_t)25000000)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HSI_VALUE}\~ ((uint32_t)16000000)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v HSE_VALUE\:STM32F4xx_System_Private_Includes}
{\xe \v STM32F4xx_System_Private_Includes\:HSE_VALUE}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HSE_VALUE\~ ((uint32_t)25000000)}}
\par
{\bkmkstart AAAAAAABKZ}
{\bkmkend AAAAAAABKZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default value of the External oscillator in Hz \par
}}
{\xe \v HSI_VALUE\:STM32F4xx_System_Private_Includes}
{\xe \v STM32F4xx_System_Private_Includes\:HSI_VALUE}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HSI_VALUE\~ ((uint32_t)16000000)}}
\par
{\bkmkstart AAAAAAABLA}
{\bkmkend AAAAAAABLA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Value of the Internal oscillator in Hz \par
}}
\par \pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
STM32F4xx_System_Private_TypesDefinitions\par \pard\plain 
{\tc\tcl4 \v STM32F4xx_System_Private_TypesDefinitions}
{\xe \v STM32F4xx_System_Private_TypesDefinitions}
{\bkmkstart AAAAAAABLB}
{\bkmkend AAAAAAABLB}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\par \pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
STM32F4xx_System_Private_Defines\par \pard\plain 
{\tc\tcl4 \v STM32F4xx_System_Private_Defines}
{\xe \v STM32F4xx_System_Private_Defines}
{\bkmkstart AAAAAAABLC}
{\bkmkend AAAAAAABLC}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\par \pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
STM32F4xx_System_Private_Macros\par \pard\plain 
{\tc\tcl4 \v STM32F4xx_System_Private_Macros}
{\xe \v STM32F4xx_System_Private_Macros}
{\bkmkstart AAAAAAABLD}
{\bkmkend AAAAAAABLD}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\par \pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
STM32F4xx_System_Private_Variables\par \pard\plain 
{\tc\tcl4 \v STM32F4xx_System_Private_Variables}
{\xe \v STM32F4xx_System_Private_Variables}
{\bkmkstart AAAAAAABLE}
{\bkmkend AAAAAAABLE}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b SystemCoreClock} = 16000000{\bkmkstart AAAAAAABLF}
{\bkmkend AAAAAAABLF}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const uint8_t {\b AHBPrescTable} [16] = \{0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9\}{\bkmkstart AAAAAAABLG}
{\bkmkend AAAAAAABLG}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const uint8_t {\b APBPrescTable} [8] = \{0, 0, 0, 0, 1, 2, 3, 4\}{\bkmkstart AAAAAAABLH}
{\bkmkend AAAAAAABLH}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\par \pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
STM32F4xx_System_Private_FunctionPrototypes\par \pard\plain 
{\tc\tcl4 \v STM32F4xx_System_Private_FunctionPrototypes}
{\xe \v STM32F4xx_System_Private_FunctionPrototypes}
{\bkmkstart AAAAAAABLI}
{\bkmkend AAAAAAABLI}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\par \pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
STM32F4xx_System_Private_Functions\par \pard\plain 
{\tc\tcl4 \v STM32F4xx_System_Private_Functions}
{\xe \v STM32F4xx_System_Private_Functions}
{\bkmkstart AAAAAAABLJ}
{\bkmkend AAAAAAABLJ}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SystemInit} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setup the microcontroller system Initialize the FPU setting, vector table location and External memory configuration. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SystemCoreClockUpdate} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update SystemCoreClock variable according to Clock Register Values. The SystemCoreClock variable contains the core clock (HCLK), it can be used by the user application to setup the SysTick timer or configure other parameters. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v SystemCoreClockUpdate\:STM32F4xx_System_Private_Functions}
{\xe \v STM32F4xx_System_Private_Functions\:SystemCoreClockUpdate}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SystemCoreClockUpdate (void )}}
\par
{\bkmkstart AAAAAAABLK}
{\bkmkend AAAAAAABLK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update SystemCoreClock variable according to Clock Register Values. The SystemCoreClock variable contains the core clock (HCLK), it can be used by the user application to setup the SysTick timer or configure other parameters. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Each time the core clock (HCLK) changes, this function must be called to update SystemCoreClock variable value. Otherwise, any configuration based on this variable will be incorrect. \par
- The system frequency computed by this function is not the real frequency in the chip. It is calculated based on the predefined constant and the selected clock source:\par
}}{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
If SYSCLK source is HSI, SystemCoreClock will contain the {\b HSI_VALUE(*)}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
If SYSCLK source is HSE, SystemCoreClock will contain the {\b HSE_VALUE(**)}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
If SYSCLK source is PLL, SystemCoreClock will contain the {\b HSE_VALUE(**)} or {\b HSI_VALUE(*)} multiplied/divided by the PLL factors.\par}
(*) HSI_VALUE is a constant defined in {\b stm32f4xx_hal_conf.h} file (default value 16 MHz) but the real value may vary depending on the variations in voltage and temperature. \par
(**) HSE_VALUE is a constant defined in {\b stm32f4xx_hal_conf.h} file (its value depends on the application requirements), user has to ensure that HSE_VALUE is same as the real frequency of the crystal used. Otherwise, this function may have wrong result.\par
{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
The result of this function could be not correct when using fractional value for HSE crystal.\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Return values\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None} \cell }{\cell }
{\row }
}
}}
{\xe \v SystemInit\:STM32F4xx_System_Private_Functions}
{\xe \v STM32F4xx_System_Private_Functions\:SystemInit}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SystemInit (void )}}
\par
{\bkmkstart AAAAAAABLL}
{\bkmkend AAAAAAABLL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setup the microcontroller system Initialize the FPU setting, vector table location and External memory configuration. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Return values\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None} \cell }{\cell }
{\row }
}
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Data Structure Documentation{\tc \v Data Structure Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ADC_Pheriperal Struct Reference\par \pard\plain 
{\tc\tcl2 \v ADC_Pheriperal}
{\xe \v ADC_Pheriperal}
{\bkmkstart AAAAAAABLM}
{\bkmkend AAAAAAABLM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b AdcData} [3]{\bkmkstart AAAAAAABLN}
{\bkmkend AAAAAAABLN}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/TASK_CREATE_&_PERIPHERALS_INIT/Task_Create.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Alert_count Struct Reference\par \pard\plain 
{\tc\tcl2 \v Alert_count}
{\xe \v Alert_count}
{\bkmkstart AAAAAAABLO}
{\bkmkend AAAAAAABLO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure Variables used to determine the alert. }}\par
{
{\f2 #include <Alert.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b PIP_Alert_Count}{\bkmkstart AAAAAAABLP}
{\bkmkend AAAAAAABLP}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b PEEP_Alert_Count}{\bkmkstart AAAAAAABLQ}
{\bkmkend AAAAAAABLQ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Tidal_Volume_Alert_Count}{\bkmkstart AAAAAAABLR}
{\bkmkend AAAAAAABLR}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b FIO2_Supply_Alert_Count}{\bkmkstart AAAAAAABLS}
{\bkmkend AAAAAAABLS}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b FIO2_Alert_Count}{\bkmkstart AAAAAAABLT}
{\bkmkend AAAAAAABLT}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Leak_Alert_Count}{\bkmkstart AAAAAAABLU}
{\bkmkend AAAAAAABLU}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b Patient_Circuit_disconnected_Alert_Count}{\bkmkstart AAAAAAABLV}
{\bkmkend AAAAAAABLV}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b Proximal_Flow_Sensor_reversed_Alert_Count}{\bkmkstart AAAAAAABLW}
{\bkmkend AAAAAAABLW}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure Variables used to determine the alert. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/ALERT/{\b Alert.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ALERT_RANGE Struct Reference\par \pard\plain 
{\tc\tcl2 \v ALERT_RANGE}
{\xe \v ALERT_RANGE}
{\bkmkstart AAAAAAABLX}
{\bkmkend AAAAAAABLX}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure extract alert range for each type of alert. }}\par
{
{\f2 #include <Alert.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b _RANGE_PIP_MIN_Val}{\bkmkstart AAAAAAABLY}
{\bkmkend AAAAAAABLY}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b _RANGE_PIP_MAX_Val}{\bkmkstart AAAAAAABLZ}
{\bkmkend AAAAAAABLZ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b _RANGE_VT_MIN_Val}{\bkmkstart AAAAAAABMA}
{\bkmkend AAAAAAABMA}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b _RANGE_VT_MAX_Val}{\bkmkstart AAAAAAABMB}
{\bkmkend AAAAAAABMB}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b _RANGE_RR_MIN_Val}{\bkmkstart AAAAAAABMC}
{\bkmkend AAAAAAABMC}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b _RANGE_RR_MAX_Val}{\bkmkstart AAAAAAABMD}
{\bkmkend AAAAAAABMD}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b _RANGE_MINT_VOL_MIN_Val}{\bkmkstart AAAAAAABME}
{\bkmkend AAAAAAABME}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b _RANGE_MINT_VOL_MAX_Val}{\bkmkstart AAAAAAABMF}
{\bkmkend AAAAAAABMF}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b _RANGE_SPO2_MIN_Val}{\bkmkstart AAAAAAABMG}
{\bkmkend AAAAAAABMG}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b _RANGE_PULSE_MIN_Val}{\bkmkstart AAAAAAABMH}
{\bkmkend AAAAAAABMH}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b _RANGE_PULSE_MAX_Val}{\bkmkstart AAAAAAABMI}
{\bkmkend AAAAAAABMI}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b _RANGE_Leak}{\bkmkstart AAAAAAABMJ}
{\bkmkend AAAAAAABMJ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b _RANGE_NC1}{\bkmkstart AAAAAAABMK}
{\bkmkend AAAAAAABMK}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure extract alert range for each type of alert. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/ALERT/{\b Alert.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
aprv_mode_blower_control Struct Reference\par \pard\plain 
{\tc\tcl2 \v aprv_mode_blower_control}
{\xe \v aprv_mode_blower_control}
{\bkmkstart AAAAAAABML}
{\bkmkend AAAAAAABML}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b BLOWER_DAC_VAL}{\bkmkstart AAAAAAABMM}
{\bkmkend AAAAAAABMM}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b LAST_BLOWER_DAC_VAL}{\bkmkstart AAAAAAABMN}
{\bkmkend AAAAAAABMN}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b BLOWER_ENDING_DAC_SIGNAL}{\bkmkstart AAAAAAABMO}
{\bkmkend AAAAAAABMO}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b Blower_Signal_Voltage}{\bkmkstart AAAAAAABMP}
{\bkmkend AAAAAAABMP}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b BLOWER_VOLTAGE_SIGNAL}{\bkmkstart AAAAAAABMQ}
{\bkmkend AAAAAAABMQ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/APRV/APRV.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
aprv_mode_Parameter Struct Reference\par \pard\plain 
{\tc\tcl2 \v aprv_mode_Parameter}
{\xe \v aprv_mode_Parameter}
{\bkmkstart AAAAAAABMR}
{\bkmkend AAAAAAABMR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b P_HIGH}{\bkmkstart AAAAAAABMS}
{\bkmkend AAAAAAABMS}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b P_LOW}{\bkmkstart AAAAAAABMT}
{\bkmkend AAAAAAABMT}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b T_HIGH}{\bkmkstart AAAAAAABMU}
{\bkmkend AAAAAAABMU}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b T_LOW}{\bkmkstart AAAAAAABMV}
{\bkmkend AAAAAAABMV}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b T_HIGH_VAL}{\bkmkstart AAAAAAABMW}
{\bkmkend AAAAAAABMW}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b T_LOW_VAL}{\bkmkstart AAAAAAABMX}
{\bkmkend AAAAAAABMX}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b T_LOW_VAL_COUNTER}{\bkmkstart AAAAAAABMY}
{\bkmkend AAAAAAABMY}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b T_HIGH_VAL_COUNTER}{\bkmkstart AAAAAAABMZ}
{\bkmkend AAAAAAABMZ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b FIO2_VAL}{\bkmkstart AAAAAAABNA}
{\bkmkend AAAAAAABNA}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b TRIG_TYPE}{\bkmkstart AAAAAAABNB}
{\bkmkend AAAAAAABNB}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b TRIG_LMT}{\bkmkstart AAAAAAABNC}
{\bkmkend AAAAAAABNC}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b TRIG_TIME}{\bkmkstart AAAAAAABND}
{\bkmkend AAAAAAABND}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/APRV/APRV.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Aprv_PEEP_average Struct Reference\par \pard\plain 
{\tc\tcl2 \v Aprv_PEEP_average}
{\xe \v Aprv_PEEP_average}
{\bkmkstart AAAAAAABNE}
{\bkmkend AAAAAAABNE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b PEEP_Cumulative_Val}{\bkmkstart AAAAAAABNF}
{\bkmkend AAAAAAABNF}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b PEEP_Event_Count}{\bkmkstart AAAAAAABNG}
{\bkmkend AAAAAAABNG}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b PEEP_AVG_VAL}{\bkmkstart AAAAAAABNH}
{\bkmkend AAAAAAABNH}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/APRV/APRV.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Aprv_PIP_average Struct Reference\par \pard\plain 
{\tc\tcl2 \v Aprv_PIP_average}
{\xe \v Aprv_PIP_average}
{\bkmkstart AAAAAAABNI}
{\bkmkend AAAAAAABNI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b PIP_Cumulative_Val}{\bkmkstart AAAAAAABNJ}
{\bkmkend AAAAAAABNJ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b PIP_Event_Count}{\bkmkstart AAAAAAABNK}
{\bkmkend AAAAAAABNK}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b PIP_AVG_VAL}{\bkmkstart AAAAAAABNL}
{\bkmkend AAAAAAABNL}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/APRV/APRV.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BACKUP_PC_CMV_mode_parameter Struct Reference\par \pard\plain 
{\tc\tcl2 \v BACKUP_PC_CMV_mode_parameter}
{\xe \v BACKUP_PC_CMV_mode_parameter}
{\bkmkstart AAAAAAABNM}
{\bkmkend AAAAAAABNM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b PIP_Val}{\bkmkstart AAAAAAABNN}
{\bkmkend AAAAAAABNN}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b PEEP_Val}{\bkmkstart AAAAAAABNO}
{\bkmkend AAAAAAABNO}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b RESPIRATORY_RATE_Val}{\bkmkstart AAAAAAABNP}
{\bkmkend AAAAAAABNP}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b FIO2_Val}{\bkmkstart AAAAAAABNQ}
{\bkmkend AAAAAAABNQ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b RISE_TIME_MS_Val}{\bkmkstart AAAAAAABNR}
{\bkmkend AAAAAAABNR}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b INSPIRATION_TIME}{\bkmkstart AAAAAAABNS}
{\bkmkend AAAAAAABNS}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b EXPIRATION_TIME}{\bkmkstart AAAAAAABNT}
{\bkmkend AAAAAAABNT}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Inspiration_Time_Ratio}{\bkmkstart AAAAAAABNU}
{\bkmkend AAAAAAABNU}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Expiration_Time_Ratio}{\bkmkstart AAAAAAABNV}
{\bkmkend AAAAAAABNV}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Rise_Time}{\bkmkstart AAAAAAABNW}
{\bkmkend AAAAAAABNW}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Rise_Time_percentage}{\bkmkstart AAAAAAABNX}
{\bkmkend AAAAAAABNX}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b TRIG_TIME}{\bkmkstart AAAAAAABNY}
{\bkmkend AAAAAAABNY}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/BACKUP_PC_CMV/Backup_Pc_cmv.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
bipap_Flags Struct Reference\par \pard\plain 
{\tc\tcl2 \v bipap_Flags}
{\xe \v bipap_Flags}
{\bkmkstart AAAAAAABNZ}
{\bkmkend AAAAAAABNZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b BIPAP_EPAP_Settle_Time}{\bkmkstart AAAAAAABOA}
{\bkmkend AAAAAAABOA}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b Blower_Wait_Time_Milli_Second}{\bkmkstart AAAAAAABOB}
{\bkmkend AAAAAAABOB}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b Trigger_Check_Wait_Time}{\bkmkstart AAAAAAABOC}
{\bkmkend AAAAAAABOC}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b _INSPIRATION_TIME}{\bkmkstart AAAAAAABOD}
{\bkmkend AAAAAAABOD}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/BIPAP/BiPap.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
bipap_mode_blower_control Struct Reference\par \pard\plain 
{\tc\tcl2 \v bipap_mode_blower_control}
{\xe \v bipap_mode_blower_control}
{\bkmkstart AAAAAAABOE}
{\bkmkend AAAAAAABOE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b BLOWER_DAC_VAL}{\bkmkstart AAAAAAABOF}
{\bkmkend AAAAAAABOF}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b LAST_BLOWER_DAC_VAL}{\bkmkstart AAAAAAABOG}
{\bkmkend AAAAAAABOG}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b BLOWER_ENDING_DAC_SIGNAL}{\bkmkstart AAAAAAABOH}
{\bkmkend AAAAAAABOH}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b EPAP_BLOWER_DAC_VAL}{\bkmkstart AAAAAAABOI}
{\bkmkend AAAAAAABOI}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b LAST_EPAP_BLOWER_DAC_VAL}{\bkmkstart AAAAAAABOJ}
{\bkmkend AAAAAAABOJ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b Blower_Signal_Voltage}{\bkmkstart AAAAAAABOK}
{\bkmkend AAAAAAABOK}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b BLOWER_VOLTAGE_SIGNAL}{\bkmkstart AAAAAAABOL}
{\bkmkend AAAAAAABOL}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/BIPAP/BiPap.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
bipap_mode_Parameter Struct Reference\par \pard\plain 
{\tc\tcl2 \v bipap_mode_Parameter}
{\xe \v bipap_mode_Parameter}
{\bkmkstart AAAAAAABOM}
{\bkmkend AAAAAAABOM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b IPAP_Val}{\bkmkstart AAAAAAABON}
{\bkmkend AAAAAAABON}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b EPAP_Val}{\bkmkstart AAAAAAABOO}
{\bkmkend AAAAAAABOO}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b TRIG_TYPE}{\bkmkstart AAAAAAABOP}
{\bkmkend AAAAAAABOP}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b TRIG_LMT}{\bkmkstart AAAAAAABOQ}
{\bkmkend AAAAAAABOQ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b TRIG_TIME}{\bkmkstart AAAAAAABOR}
{\bkmkend AAAAAAABOR}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b CALC_TRIG_VAL}{\bkmkstart AAAAAAABOS}
{\bkmkend AAAAAAABOS}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b TOLERANCE_EWAVE}{\bkmkstart AAAAAAABOT}
{\bkmkend AAAAAAABOT}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b TRIG_WINDOW}{\bkmkstart AAAAAAABOU}
{\bkmkend AAAAAAABOU}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b APNEA_TIME}{\bkmkstart AAAAAAABOV}
{\bkmkend AAAAAAABOV}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b _IPAP_TIME}{\bkmkstart AAAAAAABOW}
{\bkmkend AAAAAAABOW}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b _EPAP_TIME}{\bkmkstart AAAAAAABOX}
{\bkmkend AAAAAAABOX}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b APNEA_COUNTER}{\bkmkstart AAAAAAABOY}
{\bkmkend AAAAAAABOY}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b IPAP_TIME}{\bkmkstart AAAAAAABOZ}
{\bkmkend AAAAAAABOZ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b EPAP_TIME}{\bkmkstart AAAAAAABPA}
{\bkmkend AAAAAAABPA}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b RESPIRATORY_RATE_Val}{\bkmkstart AAAAAAABPB}
{\bkmkend AAAAAAABPB}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b IPAP_COUNTER}{\bkmkstart AAAAAAABPC}
{\bkmkend AAAAAAABPC}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b EPAP_COUNTER}{\bkmkstart AAAAAAABPD}
{\bkmkend AAAAAAABPD}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b VENT_TYPE}{\bkmkstart AAAAAAABPE}
{\bkmkend AAAAAAABPE}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b BIPAP_O2_Val}{\bkmkstart AAAAAAABPF}
{\bkmkend AAAAAAABPF}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/BIPAP/BiPap.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
bipap_peep_average Struct Reference\par \pard\plain 
{\tc\tcl2 \v bipap_peep_average}
{\xe \v bipap_peep_average}
{\bkmkstart AAAAAAABPG}
{\bkmkend AAAAAAABPG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b EPAP_Cumulative_Val}{\bkmkstart AAAAAAABPH}
{\bkmkend AAAAAAABPH}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b EPAP_Event_Count}{\bkmkstart AAAAAAABPI}
{\bkmkend AAAAAAABPI}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b EPAP_AVG_VAL}{\bkmkstart AAAAAAABPJ}
{\bkmkend AAAAAAABPJ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b BIPAP_O2_Event_Count}{\bkmkstart AAAAAAABPK}
{\bkmkend AAAAAAABPK}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/BIPAP/BiPap.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
bipap_pip_average Struct Reference\par \pard\plain 
{\tc\tcl2 \v bipap_pip_average}
{\xe \v bipap_pip_average}
{\bkmkstart AAAAAAABPL}
{\bkmkend AAAAAAABPL}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Maximum_IPAP_Acheived}{\bkmkstart AAAAAAABPM}
{\bkmkend AAAAAAABPM}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b IPAP_Cumulative_Val}{\bkmkstart AAAAAAABPN}
{\bkmkend AAAAAAABPN}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b IPAP_Event_Count}{\bkmkstart AAAAAAABPO}
{\bkmkend AAAAAAABPO}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b IPAP_AVG_VAL}{\bkmkstart AAAAAAABPP}
{\bkmkend AAAAAAABPP}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/BIPAP/BiPap.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Bluetooth_parameter Struct Reference\par \pard\plain 
{\tc\tcl2 \v Bluetooth_parameter}
{\xe \v Bluetooth_parameter}
{\bkmkstart AAAAAAABPQ}
{\bkmkend AAAAAAABPQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure Representing uart data reception buffer. }}\par
{
{\f2 #include <Bluetooth_Graph.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b Bluetooth_Transmit_Delay}{\bkmkstart AAAAAAABPR}
{\bkmkend AAAAAAABPR}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
uart task transmitting delay. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Bluetooth_RX_BUF} [20]{\bkmkstart AAAAAAABPS}
{\bkmkend AAAAAAABPS}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
uart receive array. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b UART_RX_BUF_CURR} [20]{\bkmkstart AAAAAAABPT}
{\bkmkend AAAAAAABPT}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
uart receive array for rearrange the data. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure Representing uart data reception buffer. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/Bluetooth/{\b Bluetooth_Graph.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Calibration Struct Reference\par \pard\plain 
{\tc\tcl2 \v Calibration}
{\xe \v Calibration}
{\bkmkstart AAAAAAABPU}
{\bkmkend AAAAAAABPU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b BLOWER}{\bkmkstart AAAAAAABPV}
{\bkmkend AAAAAAABPV}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b PRESSURE_SENSOR}{\bkmkstart AAAAAAABPW}
{\bkmkend AAAAAAABPW}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b FLOW_SENSOR_7002}{\bkmkstart AAAAAAABPX}
{\bkmkend AAAAAAABPX}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b VALVE_LEAK_TEST}{\bkmkstart AAAAAAABPY}
{\bkmkend AAAAAAABPY}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b O2_CHECK}{\bkmkstart AAAAAAABPZ}
{\bkmkend AAAAAAABPZ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b ALARAM_TEST}{\bkmkstart AAAAAAABQA}
{\bkmkend AAAAAAABQA}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b BATTERY_TEST}{\bkmkstart AAAAAAABQB}
{\bkmkend AAAAAAABQB}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b SENSOR_OFFSET_TEST}{\bkmkstart AAAAAAABQC}
{\bkmkend AAAAAAABQC}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b O2_SENSOR_100_PER_TEST}{\bkmkstart AAAAAAABQD}
{\bkmkend AAAAAAABQD}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/CALIBRATION/Calibration.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Common_Mode_parameter Struct Reference\par \pard\plain 
{\tc\tcl2 \v Common_Mode_parameter}
{\xe \v Common_Mode_parameter}
{\bkmkstart AAAAAAABQE}
{\bkmkend AAAAAAABQE}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure contains common variables to check the alert. }}\par
{
{\f2 #include <Common_Parameter.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b _PIP_Val}{\bkmkstart AAAAAAABQF}
{\bkmkend AAAAAAABQF}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b _PEEP_Val}{\bkmkstart AAAAAAABQG}
{\bkmkend AAAAAAABQG}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b _RESPIRATORY_RATE_Val}{\bkmkstart AAAAAAABQH}
{\bkmkend AAAAAAABQH}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b _FIO2_Val}{\bkmkstart AAAAAAABQI}
{\bkmkend AAAAAAABQI}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b _VOLUME_Val}{\bkmkstart AAAAAAABQJ}
{\bkmkend AAAAAAABQJ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b _FLOW_RATE}{\bkmkstart AAAAAAABQK}
{\bkmkend AAAAAAABQK}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b TOLERANCE_EWAVE}{\bkmkstart AAAAAAABQL}
{\bkmkend AAAAAAABQL}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b TRIG_WINDOW}{\bkmkstart AAAAAAABQM}
{\bkmkend AAAAAAABQM}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b TRIG_LMT}{\bkmkstart AAAAAAABQN}
{\bkmkend AAAAAAABQN}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b TRIG_TIME}{\bkmkstart AAAAAAABQO}
{\bkmkend AAAAAAABQO}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure contains common variables to check the alert. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/OTHERS/{\b Common_Parameter.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
controlsys Struct Reference\par \pard\plain 
{\tc\tcl2 \v controlsys}
{\xe \v controlsys}
{\bkmkstart AAAAAAABQP}
{\bkmkend AAAAAAABQP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure Representing members used for pid. }}\par
{
{\f2 #include <controlsys.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b Kp}{\bkmkstart AAAAAAABQQ}
{\bkmkend AAAAAAABQQ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b Ki}{\bkmkstart AAAAAAABQR}
{\bkmkend AAAAAAABQR}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b Kd}{\bkmkstart AAAAAAABQS}
{\bkmkend AAAAAAABQS}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b tau}{\bkmkstart AAAAAAABQT}
{\bkmkend AAAAAAABQT}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b a1}{\bkmkstart AAAAAAABQU}
{\bkmkend AAAAAAABQU}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b a2}{\bkmkstart AAAAAAABQV}
{\bkmkend AAAAAAABQV}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b b1}{\bkmkstart AAAAAAABQW}
{\bkmkend AAAAAAABQW}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b b2}{\bkmkstart AAAAAAABQX}
{\bkmkend AAAAAAABQX}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b T}{\bkmkstart AAAAAAABQY}
{\bkmkend AAAAAAABQY}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b area}{\bkmkstart AAAAAAABQZ}
{\bkmkend AAAAAAABQZ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b prevdif}{\bkmkstart AAAAAAABRA}
{\bkmkend AAAAAAABRA}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b rate}{\bkmkstart AAAAAAABRB}
{\bkmkend AAAAAAABRB}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b prevmea}{\bkmkstart AAAAAAABRC}
{\bkmkend AAAAAAABRC}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b out}{\bkmkstart AAAAAAABRD}
{\bkmkend AAAAAAABRD}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure Representing members used for pid. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/{\b controlsys.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
cpap_average Struct Reference\par \pard\plain 
{\tc\tcl2 \v cpap_average}
{\xe \v cpap_average}
{\bkmkstart AAAAAAABRE}
{\bkmkend AAAAAAABRE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b CPAP_Cumulative_Val}{\bkmkstart AAAAAAABRF}
{\bkmkend AAAAAAABRF}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b CPAP_Event_Count}{\bkmkstart AAAAAAABRG}
{\bkmkend AAAAAAABRG}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b CPAP_O2_Event_Count}{\bkmkstart AAAAAAABRH}
{\bkmkend AAAAAAABRH}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b CPAP_AVG_VAL}{\bkmkstart AAAAAAABRI}
{\bkmkend AAAAAAABRI}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/CPAP/Cpap.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CPAP_DAC_SIGNAL Struct Reference\par \pard\plain 
{\tc\tcl2 \v CPAP_DAC_SIGNAL}
{\xe \v CPAP_DAC_SIGNAL}
{\bkmkstart AAAAAAABRJ}
{\bkmkend AAAAAAABRJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b APNEA_DAC_VALUE_5}{\bkmkstart AAAAAAABRK}
{\bkmkend AAAAAAABRK}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b APNEA_DAC_VALUE_6}{\bkmkstart AAAAAAABRL}
{\bkmkend AAAAAAABRL}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b APNEA_DAC_VALUE_7}{\bkmkstart AAAAAAABRM}
{\bkmkend AAAAAAABRM}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b APNEA_DAC_VALUE_8}{\bkmkstart AAAAAAABRN}
{\bkmkend AAAAAAABRN}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b APNEA_DAC_VALUE_9}{\bkmkstart AAAAAAABRO}
{\bkmkend AAAAAAABRO}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b APNEA_DAC_VALUE_10}{\bkmkstart AAAAAAABRP}
{\bkmkend AAAAAAABRP}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b APNEA_DAC_VALUE_11}{\bkmkstart AAAAAAABRQ}
{\bkmkend AAAAAAABRQ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b APNEA_DAC_VALUE_12}{\bkmkstart AAAAAAABRR}
{\bkmkend AAAAAAABRR}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b APNEA_DAC_VALUE_13}{\bkmkstart AAAAAAABRS}
{\bkmkend AAAAAAABRS}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b APNEA_DAC_VALUE_14}{\bkmkstart AAAAAAABRT}
{\bkmkend AAAAAAABRT}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b APNEA_DAC_VALUE_15}{\bkmkstart AAAAAAABRU}
{\bkmkend AAAAAAABRU}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b APNEA_DAC_VALUE_16}{\bkmkstart AAAAAAABRV}
{\bkmkend AAAAAAABRV}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b APNEA_DAC_VALUE_17}{\bkmkstart AAAAAAABRW}
{\bkmkend AAAAAAABRW}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b APNEA_DAC_VALUE_18}{\bkmkstart AAAAAAABRX}
{\bkmkend AAAAAAABRX}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b APNEA_DAC_VALUE_19}{\bkmkstart AAAAAAABRY}
{\bkmkend AAAAAAABRY}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b APNEA_DAC_VALUE_20}{\bkmkstart AAAAAAABRZ}
{\bkmkend AAAAAAABRZ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b APNEA_DAC_VALUE_21}{\bkmkstart AAAAAAABSA}
{\bkmkend AAAAAAABSA}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b APNEA_DAC_VALUE_22}{\bkmkstart AAAAAAABSB}
{\bkmkend AAAAAAABSB}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b APNEA_DAC_VALUE_23}{\bkmkstart AAAAAAABSC}
{\bkmkend AAAAAAABSC}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b APNEA_DAC_VALUE_24}{\bkmkstart AAAAAAABSD}
{\bkmkend AAAAAAABSD}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b APNEA_DAC_VALUE_25}{\bkmkstart AAAAAAABSE}
{\bkmkend AAAAAAABSE}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b APNEA_DAC_VALUE_26}{\bkmkstart AAAAAAABSF}
{\bkmkend AAAAAAABSF}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b APNEA_DAC_VALUE_27}{\bkmkstart AAAAAAABSG}
{\bkmkend AAAAAAABSG}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b APNEA_DAC_VALUE_28}{\bkmkstart AAAAAAABSH}
{\bkmkend AAAAAAABSH}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b APNEA_DAC_VALUE_29}{\bkmkstart AAAAAAABSI}
{\bkmkend AAAAAAABSI}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b APNEA_DAC_VALUE_30}{\bkmkstart AAAAAAABSJ}
{\bkmkend AAAAAAABSJ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b APNEA_DAC_VALUE_31}{\bkmkstart AAAAAAABSK}
{\bkmkend AAAAAAABSK}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b APNEA_DAC_VALUE_32}{\bkmkstart AAAAAAABSL}
{\bkmkend AAAAAAABSL}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b APNEA_DAC_VALUE_33}{\bkmkstart AAAAAAABSM}
{\bkmkend AAAAAAABSM}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b APNEA_DAC_VALUE_34}{\bkmkstart AAAAAAABSN}
{\bkmkend AAAAAAABSN}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b APNEA_DAC_VALUE_35}{\bkmkstart AAAAAAABSO}
{\bkmkend AAAAAAABSO}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/PC-SIMV/Pc_Simv_Assist_OFF.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Cpap_Flags Struct Reference\par \pard\plain 
{\tc\tcl2 \v Cpap_Flags}
{\xe \v Cpap_Flags}
{\bkmkstart AAAAAAABSP}
{\bkmkend AAAAAAABSP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b CPAP_Settle_Time}{\bkmkstart AAAAAAABSQ}
{\bkmkend AAAAAAABSQ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b Blower_Wait_Time_Milli_Second}{\bkmkstart AAAAAAABSR}
{\bkmkend AAAAAAABSR}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b Trigger_Check_Wait_Time}{\bkmkstart AAAAAAABSS}
{\bkmkend AAAAAAABSS}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b _INSPIRATION_TIME}{\bkmkstart AAAAAAABST}
{\bkmkend AAAAAAABST}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/CPAP/Cpap.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Cpap_mode_blower_control Struct Reference\par \pard\plain 
{\tc\tcl2 \v Cpap_mode_blower_control}
{\xe \v Cpap_mode_blower_control}
{\bkmkstart AAAAAAABSU}
{\bkmkend AAAAAAABSU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b BLOWER_DAC_VAL}{\bkmkstart AAAAAAABSV}
{\bkmkend AAAAAAABSV}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b CPAP_BLOWER_DAC_VAL}{\bkmkstart AAAAAAABSW}
{\bkmkend AAAAAAABSW}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b LAST_CPAP_BLOWER_DAC_VAL}{\bkmkstart AAAAAAABSX}
{\bkmkend AAAAAAABSX}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b Blower_Signal_Voltage}{\bkmkstart AAAAAAABSY}
{\bkmkend AAAAAAABSY}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b BLOWER_VOLTAGE_SIGNAL}{\bkmkstart AAAAAAABSZ}
{\bkmkend AAAAAAABSZ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/CPAP/Cpap.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
cpap_mode_Parameter Struct Reference\par \pard\plain 
{\tc\tcl2 \v cpap_mode_Parameter}
{\xe \v cpap_mode_Parameter}
{\bkmkstart AAAAAAABTA}
{\bkmkend AAAAAAABTA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b CPAP_Val}{\bkmkstart AAAAAAABTB}
{\bkmkend AAAAAAABTB}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b TRIG_TYPE}{\bkmkstart AAAAAAABTC}
{\bkmkend AAAAAAABTC}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b TRIG_LMT}{\bkmkstart AAAAAAABTD}
{\bkmkend AAAAAAABTD}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b TRIG_TIME}{\bkmkstart AAAAAAABTE}
{\bkmkend AAAAAAABTE}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b CALC_TRIG_VAL}{\bkmkstart AAAAAAABTF}
{\bkmkend AAAAAAABTF}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b TOLERANCE_EWAVE}{\bkmkstart AAAAAAABTG}
{\bkmkend AAAAAAABTG}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b TRIG_WINDOW}{\bkmkstart AAAAAAABTH}
{\bkmkend AAAAAAABTH}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b APNEA_TIME}{\bkmkstart AAAAAAABTI}
{\bkmkend AAAAAAABTI}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b APNEA_COUNTER}{\bkmkstart AAAAAAABTJ}
{\bkmkend AAAAAAABTJ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b CPAP_O2_Val}{\bkmkstart AAAAAAABTK}
{\bkmkend AAAAAAABTK}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b VENT_TYPE}{\bkmkstart AAAAAAABTL}
{\bkmkend AAAAAAABTL}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/CPAP/Cpap.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
GRAPH_PACKET_SEND Struct Reference\par \pard\plain 
{\tc\tcl2 \v GRAPH_PACKET_SEND}
{\xe \v GRAPH_PACKET_SEND}
{\bkmkstart AAAAAAABTM}
{\bkmkend AAAAAAABTM}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure Representing Graph values for modes. data send to bluetooth. }}\par
{
{\f2 #include <Bluetooth_Graph.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b _header}{\bkmkstart AAAAAAABTN}
{\bkmkend AAAAAAABTN}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
data header. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b _length}{\bkmkstart AAAAAAABTO}
{\bkmkend AAAAAAABTO}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
data length. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b _Pressure_Val}{\bkmkstart AAAAAAABTP}
{\bkmkend AAAAAAABTP}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
data PIP value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int16_t {\b _Flow_Val}{\bkmkstart AAAAAAABTQ}
{\bkmkend AAAAAAABTQ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flow value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int16_t {\b _Volume_Val}{\bkmkstart AAAAAAABTR}
{\bkmkend AAAAAAABTR}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
volume value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b _Status}{\bkmkstart AAAAAAABTS}
{\bkmkend AAAAAAABTS}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
status value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b _CRC8}{\bkmkstart AAAAAAABTT}
{\bkmkend AAAAAAABTT}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
crc value. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure Representing Graph values for modes. data send to bluetooth. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/Bluetooth/{\b Bluetooth_Graph.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HFNC_Mode_Parameter Struct Reference\par \pard\plain 
{\tc\tcl2 \v HFNC_Mode_Parameter}
{\xe \v HFNC_Mode_Parameter}
{\bkmkstart AAAAAAABTU}
{\bkmkend AAAAAAABTU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure Representing {\b HFNC_Mode_Parameter} variables. it includes OXYGEN Flow rate and oxygen level. }}\par
{
{\f2 #include <HFNC.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b _Flow_Rate}{\bkmkstart AAAAAAABTV}
{\bkmkend AAAAAAABTV}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
flow rate value variable. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b _FIO2_Val}{\bkmkstart AAAAAAABTW}
{\bkmkend AAAAAAABTW}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fio2 value variable. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure Representing {\b HFNC_Mode_Parameter} variables. it includes OXYGEN Flow rate and oxygen level. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/HFNC/{\b HFNC.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
INSTANTANEOUS_VALUE Struct Reference\par \pard\plain 
{\tc\tcl2 \v INSTANTANEOUS_VALUE}
{\xe \v INSTANTANEOUS_VALUE}
{\bkmkstart AAAAAAABTX}
{\bkmkend AAAAAAABTX}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure main patient Graph values. }}\par
{
{\f2 #include <database.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b pressure}{\bkmkstart AAAAAAABTY}
{\bkmkend AAAAAAABTY}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
pressure graph value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b flow}{\bkmkstart AAAAAAABTZ}
{\bkmkend AAAAAAABTZ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flow graph value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b volume}{\bkmkstart AAAAAAABUA}
{\bkmkend AAAAAAABUA}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
volume graph value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int8_t {\b oxygen}{\bkmkstart AAAAAAABUB}
{\bkmkend AAAAAAABUB}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Achieved oxygen value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b oxygen_flow}{\bkmkstart AAAAAAABUC}
{\bkmkend AAAAAAABUC}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
oxygen flow value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int16_t {\b Maximum_oxygen_flow}{\bkmkstart AAAAAAABUD}
{\bkmkend AAAAAAABUD}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
maximum oxygen flow value. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure main patient Graph values. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/{\b database.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
KALMAN_CONSTANTS Struct Reference\par \pard\plain 
{\tc\tcl2 \v KALMAN_CONSTANTS}
{\xe \v KALMAN_CONSTANTS}
{\bkmkstart AAAAAAABUE}
{\bkmkend AAAAAAABUE}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kalman Filter Initial Conditions. }}\par
{
{\f2 #include <utilities.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b error_measurement}{\bkmkstart AAAAAAABUF}
{\bkmkend AAAAAAABUF}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b error_estimate}{\bkmkstart AAAAAAABUG}
{\bkmkend AAAAAAABUG}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b process_variance}{\bkmkstart AAAAAAABUH}
{\bkmkend AAAAAAABUH}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kalman Filter Initial Conditions. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
error_measurement: Measurement Uncertainty error_estimate: Estimation Uncertainty - Can be initialized with the same value as error_measurement since the Kalman filter will adjust its value. process_variance: Process Variance - usually a small number between 0.001 and 1 \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/utilities.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
NEBULISER_FLAGS Struct Reference\par \pard\plain 
{\tc\tcl2 \v NEBULISER_FLAGS}
{\xe \v NEBULISER_FLAGS}
{\bkmkstart AAAAAAABUI}
{\bkmkend AAAAAAABUI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b NEBULISER_ON_Val}{\bkmkstart AAAAAAABUJ}
{\bkmkend AAAAAAABUJ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b NEBULISER_SYNC_ON_Val}{\bkmkstart AAAAAAABUK}
{\bkmkend AAAAAAABUK}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b NEBULISER_TIME}{\bkmkstart AAAAAAABUL}
{\bkmkend AAAAAAABUL}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b NEBULISER_TIMER}{\bkmkstart AAAAAAABUM}
{\bkmkend AAAAAAABUM}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b SUCTION}{\bkmkstart AAAAAAABUN}
{\bkmkend AAAAAAABUN}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/NEBULISER/Nebuliser.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
old_flags Struct Reference\par \pard\plain 
{\tc\tcl2 \v old_flags}
{\xe \v old_flags}
{\bkmkstart AAAAAAABUO}
{\bkmkend AAAAAAABUO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure representing the final variables after the new changes. It stores the value of the last set value to identify and modify a certain operation. }}\par
{
{\f2 #include <Mode_Initial_Flag_Set.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Last_PEEP_Val_PC_CMV_BACKUP}{\bkmkstart AAAAAAABUP}
{\bkmkend AAAAAAABUP}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Last_PIP_Val_PC_CMV_BACKUP}{\bkmkstart AAAAAAABUQ}
{\bkmkend AAAAAAABUQ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Last_Rise_Time_PC_CMV_BACKUP}{\bkmkstart AAAAAAABUR}
{\bkmkend AAAAAAABUR}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Last_O2_Val_PC_CMV_BACKUP}{\bkmkstart AAAAAAABUS}
{\bkmkend AAAAAAABUS}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Last_RR_Val_PC_CMV_BACKUP}{\bkmkstart AAAAAAABUT}
{\bkmkend AAAAAAABUT}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Last_I_Val_PC_CMV_BACKUP}{\bkmkstart AAAAAAABUU}
{\bkmkend AAAAAAABUU}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Last_E_Val_PC_CMV_BACKUP}{\bkmkstart AAAAAAABUV}
{\bkmkend AAAAAAABUV}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b Last_Ramp_Time_PC_CMV_BACKUP}{\bkmkstart AAAAAAABUW}
{\bkmkend AAAAAAABUW}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b Last_Volume_Val_VC_CMV_BACKUP}{\bkmkstart AAAAAAABUX}
{\bkmkend AAAAAAABUX}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Last_PEEP_Val_VC_CMV_BACKUP}{\bkmkstart AAAAAAABUY}
{\bkmkend AAAAAAABUY}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Last_FLOW_Val_VC_CMV_BACKUP}{\bkmkstart AAAAAAABUZ}
{\bkmkend AAAAAAABUZ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Last_O2_Val_VC_CMV_BACKUP}{\bkmkstart AAAAAAABVA}
{\bkmkend AAAAAAABVA}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Last_RR_Val_VC_CMV_BACKUP}{\bkmkstart AAAAAAABVB}
{\bkmkend AAAAAAABVB}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Last_I_Val_VC_CMV_BACKUP}{\bkmkstart AAAAAAABVC}
{\bkmkend AAAAAAABVC}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Last_E_Val_VC_CMV_BACKUP}{\bkmkstart AAAAAAABVD}
{\bkmkend AAAAAAABVD}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b LAST_BLOWER_ENDING_DAC_SIGNAL}{\bkmkstart AAAAAAABVE}
{\bkmkend AAAAAAABVE}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b LAST_PIP_Control_Task_Delay}{\bkmkstart AAAAAAABVF}
{\bkmkend AAAAAAABVF}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b LAST_Increase_Each_DAC_SET_CONST}{\bkmkstart AAAAAAABVG}
{\bkmkend AAAAAAABVG}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b LAST_Need_PID_Task_Delay}{\bkmkstart AAAAAAABVH}
{\bkmkend AAAAAAABVH}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b LAST_Tune_PID_Task_Delay}{\bkmkstart AAAAAAABVI}
{\bkmkend AAAAAAABVI}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b LAST_Low_PIP_Count}{\bkmkstart AAAAAAABVJ}
{\bkmkend AAAAAAABVJ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b LAST_Early_Acheived_Ramp_Time_Percentage}{\bkmkstart AAAAAAABVK}
{\bkmkend AAAAAAABVK}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b last_vent_type}{\bkmkstart AAAAAAABVL}
{\bkmkend AAAAAAABVL}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure representing the final variables after the new changes. It stores the value of the last set value to identify and modify a certain operation. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/OTHERS/{\b Mode_Initial_Flag_Set.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
OVER_ALL_DAC_SIGNAL Struct Reference\par \pard\plain 
{\tc\tcl2 \v OVER_ALL_DAC_SIGNAL}
{\xe \v OVER_ALL_DAC_SIGNAL}
{\bkmkstart AAAAAAABVM}
{\bkmkend AAAAAAABVM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_5}{\bkmkstart AAAAAAABVN}
{\bkmkend AAAAAAABVN}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_6}{\bkmkstart AAAAAAABVO}
{\bkmkend AAAAAAABVO}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_7}{\bkmkstart AAAAAAABVP}
{\bkmkend AAAAAAABVP}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_8}{\bkmkstart AAAAAAABVQ}
{\bkmkend AAAAAAABVQ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_9}{\bkmkstart AAAAAAABVR}
{\bkmkend AAAAAAABVR}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_10}{\bkmkstart AAAAAAABVS}
{\bkmkend AAAAAAABVS}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_11}{\bkmkstart AAAAAAABVT}
{\bkmkend AAAAAAABVT}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_12}{\bkmkstart AAAAAAABVU}
{\bkmkend AAAAAAABVU}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_13}{\bkmkstart AAAAAAABVV}
{\bkmkend AAAAAAABVV}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_14}{\bkmkstart AAAAAAABVW}
{\bkmkend AAAAAAABVW}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_15}{\bkmkstart AAAAAAABVX}
{\bkmkend AAAAAAABVX}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_16}{\bkmkstart AAAAAAABVY}
{\bkmkend AAAAAAABVY}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_17}{\bkmkstart AAAAAAABVZ}
{\bkmkend AAAAAAABVZ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_18}{\bkmkstart AAAAAAABWA}
{\bkmkend AAAAAAABWA}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_19}{\bkmkstart AAAAAAABWB}
{\bkmkend AAAAAAABWB}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_20}{\bkmkstart AAAAAAABWC}
{\bkmkend AAAAAAABWC}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_21}{\bkmkstart AAAAAAABWD}
{\bkmkend AAAAAAABWD}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_22}{\bkmkstart AAAAAAABWE}
{\bkmkend AAAAAAABWE}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_23}{\bkmkstart AAAAAAABWF}
{\bkmkend AAAAAAABWF}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_24}{\bkmkstart AAAAAAABWG}
{\bkmkend AAAAAAABWG}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_25}{\bkmkstart AAAAAAABWH}
{\bkmkend AAAAAAABWH}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_26}{\bkmkstart AAAAAAABWI}
{\bkmkend AAAAAAABWI}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_27}{\bkmkstart AAAAAAABWJ}
{\bkmkend AAAAAAABWJ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_28}{\bkmkstart AAAAAAABWK}
{\bkmkend AAAAAAABWK}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_29}{\bkmkstart AAAAAAABWL}
{\bkmkend AAAAAAABWL}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_30}{\bkmkstart AAAAAAABWM}
{\bkmkend AAAAAAABWM}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_31}{\bkmkstart AAAAAAABWN}
{\bkmkend AAAAAAABWN}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_32}{\bkmkstart AAAAAAABWO}
{\bkmkend AAAAAAABWO}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_33}{\bkmkstart AAAAAAABWP}
{\bkmkend AAAAAAABWP}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_34}{\bkmkstart AAAAAAABWQ}
{\bkmkend AAAAAAABWQ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_35}{\bkmkstart AAAAAAABWR}
{\bkmkend AAAAAAABWR}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_36}{\bkmkstart AAAAAAABWS}
{\bkmkend AAAAAAABWS}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_37}{\bkmkstart AAAAAAABWT}
{\bkmkend AAAAAAABWT}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_38}{\bkmkstart AAAAAAABWU}
{\bkmkend AAAAAAABWU}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_39}{\bkmkstart AAAAAAABWV}
{\bkmkend AAAAAAABWV}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_40}{\bkmkstart AAAAAAABWW}
{\bkmkend AAAAAAABWW}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_41}{\bkmkstart AAAAAAABWX}
{\bkmkend AAAAAAABWX}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_42}{\bkmkstart AAAAAAABWY}
{\bkmkend AAAAAAABWY}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_43}{\bkmkstart AAAAAAABWZ}
{\bkmkend AAAAAAABWZ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_44}{\bkmkstart AAAAAAABXA}
{\bkmkend AAAAAAABXA}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_45}{\bkmkstart AAAAAAABXB}
{\bkmkend AAAAAAABXB}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_46}{\bkmkstart AAAAAAABXC}
{\bkmkend AAAAAAABXC}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_47}{\bkmkstart AAAAAAABXD}
{\bkmkend AAAAAAABXD}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_48}{\bkmkstart AAAAAAABXE}
{\bkmkend AAAAAAABXE}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_49}{\bkmkstart AAAAAAABXF}
{\bkmkend AAAAAAABXF}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_50}{\bkmkstart AAAAAAABXG}
{\bkmkend AAAAAAABXG}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_51}{\bkmkstart AAAAAAABXH}
{\bkmkend AAAAAAABXH}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_52}{\bkmkstart AAAAAAABXI}
{\bkmkend AAAAAAABXI}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_53}{\bkmkstart AAAAAAABXJ}
{\bkmkend AAAAAAABXJ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_54}{\bkmkstart AAAAAAABXK}
{\bkmkend AAAAAAABXK}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_55}{\bkmkstart AAAAAAABXL}
{\bkmkend AAAAAAABXL}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_56}{\bkmkstart AAAAAAABXM}
{\bkmkend AAAAAAABXM}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_57}{\bkmkstart AAAAAAABXN}
{\bkmkend AAAAAAABXN}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_58}{\bkmkstart AAAAAAABXO}
{\bkmkend AAAAAAABXO}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_59}{\bkmkstart AAAAAAABXP}
{\bkmkend AAAAAAABXP}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_60}{\bkmkstart AAAAAAABXQ}
{\bkmkend AAAAAAABXQ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/PC-SIMV/Pc_Simv_Assist_OFF.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Oxygen_parameter Struct Reference\par \pard\plain 
{\tc\tcl2 \v Oxygen_parameter}
{\xe \v Oxygen_parameter}
{\bkmkstart AAAAAAABXR}
{\bkmkend AAAAAAABXR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure Representing O2 DAC values for modes. it includes OXYGEN sensor offset values,maximum values and also Oxygen dac values. }}\par
{
{\f2 #include <Oxygen_Blending.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b OXYGEN_OFFSET_VAL}{\bkmkstart AAAAAAABXS}
{\bkmkend AAAAAAABXS}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Envitec sensor offset value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b OXYGEN_MAXIMUM_VAL}{\bkmkstart AAAAAAABXT}
{\bkmkend AAAAAAABXT}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Envitec sensor Maximum value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Achieved_Oxygen}{\bkmkstart AAAAAAABXU}
{\bkmkend AAAAAAABXU}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Envitec Achieved O2value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b O2_DAC}{\bkmkstart AAAAAAABXV}
{\bkmkend AAAAAAABXV}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Et tube modes O2 dac value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b CPAP_O2_DAC}{\bkmkstart AAAAAAABXW}
{\bkmkend AAAAAAABXW}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cpap mode O2 dac value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b PSV_O2_DAC}{\bkmkstart AAAAAAABXX}
{\bkmkend AAAAAAABXX}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Psv mode O2 dac value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b BIPAP_O2_DAC}{\bkmkstart AAAAAAABXY}
{\bkmkend AAAAAAABXY}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bipap mode O2 dac value. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure Representing O2 DAC values for modes. it includes OXYGEN sensor offset values,maximum values and also Oxygen dac values. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/OXYGEN_BLENDING/{\b Oxygen_Blending.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PC_CMV_mode_parameter Struct Reference\par \pard\plain 
{\tc\tcl2 \v PC_CMV_mode_parameter}
{\xe \v PC_CMV_mode_parameter}
{\bkmkstart AAAAAAABXZ}
{\bkmkend AAAAAAABXZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure Representing PCCMV Mode parameter variables. it includes expiration time ,rise time percentage variables. }}\par
{
{\f2 #include <Pc_cmv.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b PIP_Val}{\bkmkstart AAAAAAABYA}
{\bkmkend AAAAAAABYA}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PIP Parameter. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b PEEP_Val}{\bkmkstart AAAAAAABYB}
{\bkmkend AAAAAAABYB}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PEEP Parameter. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b RESPIRATORY_RATE_Val}{\bkmkstart AAAAAAABYC}
{\bkmkend AAAAAAABYC}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RR Parameter. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b FIO2_Val}{\bkmkstart AAAAAAABYD}
{\bkmkend AAAAAAABYD}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FIO2 Parameter. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b RISE_TIME_MS_Val}{\bkmkstart AAAAAAABYE}
{\bkmkend AAAAAAABYE}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RISE TIME CALCULATED VALUE. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b INSPIRATION_TIME}{\bkmkstart AAAAAAABYF}
{\bkmkend AAAAAAABYF}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
INSPIRATION TIME Parameter. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b EXPIRATION_TIME}{\bkmkstart AAAAAAABYG}
{\bkmkend AAAAAAABYG}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EXPIRATION TIME Parameter. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Inspiration_Time_Ratio}{\bkmkstart AAAAAAABYH}
{\bkmkend AAAAAAABYH}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
INSPIRATION TIME RATIO Calculated value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Expiration_Time_Ratio}{\bkmkstart AAAAAAABYI}
{\bkmkend AAAAAAABYI}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EXPIRATION TIME RATIO Calculated value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Rise_Time}{\bkmkstart AAAAAAABYJ}
{\bkmkend AAAAAAABYJ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RISE TIME Parameter. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Rise_Time_percentage}{\bkmkstart AAAAAAABYK}
{\bkmkend AAAAAAABYK}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ACHIEVED RISETIME PERCENTAGE. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure Representing PCCMV Mode parameter variables. it includes expiration time ,rise time percentage variables. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/PC_CMV/{\b Pc_cmv.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PC_SIMV_mode_parameter Struct Reference\par \pard\plain 
{\tc\tcl2 \v PC_SIMV_mode_parameter}
{\xe \v PC_SIMV_mode_parameter}
{\bkmkstart AAAAAAABYL}
{\bkmkend AAAAAAABYL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure Representing PCSIMV Mode parameter variables. it includes expiration time ,rise time percentage variables. }}\par
{
{\f2 #include <Pc_Simv_Assist_ON.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b PIP_Val}{\bkmkstart AAAAAAABYM}
{\bkmkend AAAAAAABYM}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PIP.Parameter. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b PEEP_Val}{\bkmkstart AAAAAAABYN}
{\bkmkend AAAAAAABYN}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PEEP Parameter. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b RESPIRATORY_RATE_Val}{\bkmkstart AAAAAAABYO}
{\bkmkend AAAAAAABYO}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RR Parameter. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b FIO2_Val}{\bkmkstart AAAAAAABYP}
{\bkmkend AAAAAAABYP}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FIO2 Parameter. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b RISE_TIME_MS_Val}{\bkmkstart AAAAAAABYQ}
{\bkmkend AAAAAAABYQ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RISE TIME CALCULATED VALUE. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b INSPIRATION_TIME}{\bkmkstart AAAAAAABYR}
{\bkmkend AAAAAAABYR}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
INSPIRATION TIME Parameter. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b EXPIRATION_TIME}{\bkmkstart AAAAAAABYS}
{\bkmkend AAAAAAABYS}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EXPIRATION TIME Parameter. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Inspiration_Time_Ratio}{\bkmkstart AAAAAAABYT}
{\bkmkend AAAAAAABYT}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
INSPIRATION TIME RATIO Calculated value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Expiration_Time_Ratio}{\bkmkstart AAAAAAABYU}
{\bkmkend AAAAAAABYU}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EXPIRATION TIME RATIO Calculated value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Rise_Time}{\bkmkstart AAAAAAABYV}
{\bkmkend AAAAAAABYV}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RISE TIME Parameter. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b TRIG_TYPE}{\bkmkstart AAAAAAABYW}
{\bkmkend AAAAAAABYW}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
pressure trigger or flow trigger }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b TRIG_LMT}{\bkmkstart AAAAAAABYX}
{\bkmkend AAAAAAABYX}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
trigger limit }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b TRIG_TIME}{\bkmkstart AAAAAAABYY}
{\bkmkend AAAAAAABYY}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
trigger time }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b CALC_TRIG_VAL}{\bkmkstart AAAAAAABYZ}
{\bkmkend AAAAAAABYZ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
trigger time calculated }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b TOLERANCE_EWAVE}{\bkmkstart AAAAAAABZA}
{\bkmkend AAAAAAABZA}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
tolerance of expiration time }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b TRIG_WINDOW}{\bkmkstart AAAAAAABZB}
{\bkmkend AAAAAAABZB}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
calculated value trigger window }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Assist_Control}{\bkmkstart AAAAAAABZC}
{\bkmkend AAAAAAABZC}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
assist control on/off }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Rise_Time_percentage}{\bkmkstart AAAAAAABZD}
{\bkmkend AAAAAAABZD}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ACHIEVED RISETIME PERCENTAGE. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure Representing PCSIMV Mode parameter variables. it includes expiration time ,rise time percentage variables. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/PC-SIMV/{\b Pc_Simv_Assist_ON.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
pcsimv Struct Reference\par \pard\plain 
{\tc\tcl2 \v pcsimv}
{\xe \v pcsimv}
{\bkmkstart AAAAAAABZE}
{\bkmkend AAAAAAABZE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b Blower_Wait_Time_Milli_Second}{\bkmkstart AAAAAAABZF}
{\bkmkend AAAAAAABZF}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b Trigger_Check_Wait_Time}{\bkmkstart AAAAAAABZG}
{\bkmkend AAAAAAABZG}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/PC-SIMV/Pc_Simv_Assist_OFF.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PEEP_maintain_parameter Struct Reference\par \pard\plain 
{\tc\tcl2 \v PEEP_maintain_parameter}
{\xe \v PEEP_maintain_parameter}
{\bkmkstart AAAAAAABZH}
{\bkmkend AAAAAAABZH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure contains peep related variables. }}\par
{
{\f2 #include <Common_Parameter.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b PEEP_Temp}{\bkmkstart AAAAAAABZI}
{\bkmkend AAAAAAABZI}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int16_t {\b Expiratory_Valve_Open_Time}{\bkmkstart AAAAAAABZJ}
{\bkmkend AAAAAAABZJ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Maximum_PEEP_Acheived}{\bkmkstart AAAAAAABZK}
{\bkmkend AAAAAAABZK}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b PEEP_Cumulative_Val}{\bkmkstart AAAAAAABZL}
{\bkmkend AAAAAAABZL}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b PEEP_Event_Count}{\bkmkstart AAAAAAABZM}
{\bkmkend AAAAAAABZM}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b PEEP_AVG_VAL}{\bkmkstart AAAAAAABZN}
{\bkmkend AAAAAAABZN}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b PEEP_Cumulative_Val_Trigger}{\bkmkstart AAAAAAABZO}
{\bkmkend AAAAAAABZO}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b PEEP_Event_Count_Trigger}{\bkmkstart AAAAAAABZP}
{\bkmkend AAAAAAABZP}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b CHECK_TRIGGER}{\bkmkstart AAAAAAABZQ}
{\bkmkend AAAAAAABZQ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure contains peep related variables. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/OTHERS/{\b Common_Parameter.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PIP_average_parameter Struct Reference\par \pard\plain 
{\tc\tcl2 \v PIP_average_parameter}
{\xe \v PIP_average_parameter}
{\bkmkstart AAAAAAABZR}
{\bkmkend AAAAAAABZR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure contains pip related variables. }}\par
{
{\f2 #include <Common_Parameter.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Maximum_PIP_Acheived}{\bkmkstart AAAAAAABZS}
{\bkmkend AAAAAAABZS}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b PIP_Cumulative_Val}{\bkmkstart AAAAAAABZT}
{\bkmkend AAAAAAABZT}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b PIP_Event_Count}{\bkmkstart AAAAAAABZU}
{\bkmkend AAAAAAABZU}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b PIP_AVG_VAL}{\bkmkstart AAAAAAABZV}
{\bkmkend AAAAAAABZV}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure contains pip related variables. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/OTHERS/{\b Common_Parameter.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
pip_control_Task Struct Reference\par \pard\plain 
{\tc\tcl2 \v pip_control_Task}
{\xe \v pip_control_Task}
{\bkmkstart AAAAAAABZW}
{\bkmkend AAAAAAABZW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The structure contains PIP control within the core logic variables. }}\par
{
{\f2 #include <PIP_Control.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int16_t {\b PIP_Control_Task_Delay}{\bkmkstart AAAAAAABZX}
{\bkmkend AAAAAAABZX}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int16_t {\b PIP_Control_Event_Occured}{\bkmkstart AAAAAAABZY}
{\bkmkend AAAAAAABZY}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int16_t {\b PIP_Acheived_Time_Ms}{\bkmkstart AAAAAAABZZ}
{\bkmkend AAAAAAABZZ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int16_t {\b Increase_Each_DAC_SET_CONST}{\bkmkstart AAAAAAACAA}
{\bkmkend AAAAAAACAA}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Early_Acheived_Ramp_Time_Percentage}{\bkmkstart AAAAAAACAB}
{\bkmkend AAAAAAACAB}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Last_Early_Acheived_Ramp_Time_Percentage}{\bkmkstart AAAAAAACAC}
{\bkmkend AAAAAAACAC}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Low_PIP_Count}{\bkmkstart AAAAAAACAD}
{\bkmkend AAAAAAACAD}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b Slowly_Acheived_Ramp_Time_Percentage}{\bkmkstart AAAAAAACAE}
{\bkmkend AAAAAAACAE}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The structure contains PIP control within the core logic variables. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/PIP_CONTROL/{\b PIP_Control.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Pressure_mode_blower_control Struct Reference\par \pard\plain 
{\tc\tcl2 \v Pressure_mode_blower_control}
{\xe \v Pressure_mode_blower_control}
{\bkmkstart AAAAAAACAF}
{\bkmkend AAAAAAACAF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The structure contains blower dac signals for PIP and peep. }}\par
{
{\f2 #include <PIP_Control.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b BLOWER_DAC_VAL}{\bkmkstart AAAAAAACAG}
{\bkmkend AAAAAAACAG}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b LAST_BLOWER_DAC_VAL}{\bkmkstart AAAAAAACAH}
{\bkmkend AAAAAAACAH}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b BLOWER_VOLTAGE_SIGNAL}{\bkmkstart AAAAAAACAI}
{\bkmkend AAAAAAACAI}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b BLOWER_ENDING_DAC_SIGNAL}{\bkmkstart AAAAAAACAJ}
{\bkmkend AAAAAAACAJ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b Blower_Signal_Voltage}{\bkmkstart AAAAAAACAK}
{\bkmkend AAAAAAACAK}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b PEEP_BLOWER_DAC_VAL}{\bkmkstart AAAAAAACAL}
{\bkmkend AAAAAAACAL}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b LAST_PEEP_BLOWER_DAC_VAL}{\bkmkstart AAAAAAACAM}
{\bkmkend AAAAAAACAM}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The structure contains blower dac signals for PIP and peep. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/PIP_CONTROL/{\b PIP_Control.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Psv_Flags Struct Reference\par \pard\plain 
{\tc\tcl2 \v Psv_Flags}
{\xe \v Psv_Flags}
{\bkmkstart AAAAAAACAN}
{\bkmkend AAAAAAACAN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b PSV_PEEP_Settle_Time}{\bkmkstart AAAAAAACAO}
{\bkmkend AAAAAAACAO}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b Blower_Wait_Time_Milli_Second}{\bkmkstart AAAAAAACAP}
{\bkmkend AAAAAAACAP}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b Trigger_Check_Wait_Time}{\bkmkstart AAAAAAACAQ}
{\bkmkend AAAAAAACAQ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b _INSPIRATION_TIME}{\bkmkstart AAAAAAACAR}
{\bkmkend AAAAAAACAR}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/PSV/PSV.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Psv_mode_blower_control Struct Reference\par \pard\plain 
{\tc\tcl2 \v Psv_mode_blower_control}
{\xe \v Psv_mode_blower_control}
{\bkmkstart AAAAAAACAS}
{\bkmkend AAAAAAACAS}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b BLOWER_DAC_VAL}{\bkmkstart AAAAAAACAT}
{\bkmkend AAAAAAACAT}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b LAST_BLOWER_DAC_VAL}{\bkmkstart AAAAAAACAU}
{\bkmkend AAAAAAACAU}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b BLOWER_ENDING_DAC_SIGNAL}{\bkmkstart AAAAAAACAV}
{\bkmkend AAAAAAACAV}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b PEEP_BLOWER_DAC_VAL}{\bkmkstart AAAAAAACAW}
{\bkmkend AAAAAAACAW}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b LAST_PEEP_BLOWER_DAC_VAL}{\bkmkstart AAAAAAACAX}
{\bkmkend AAAAAAACAX}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b Blower_Signal_Voltage}{\bkmkstart AAAAAAACAY}
{\bkmkend AAAAAAACAY}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b BLOWER_VOLTAGE_SIGNAL}{\bkmkstart AAAAAAACAZ}
{\bkmkend AAAAAAACAZ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/PSV/PSV.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
psv_mode_Parameter Struct Reference\par \pard\plain 
{\tc\tcl2 \v psv_mode_Parameter}
{\xe \v psv_mode_Parameter}
{\bkmkstart AAAAAAACBA}
{\bkmkend AAAAAAACBA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b PRESSURE_SUPPORT_Val}{\bkmkstart AAAAAAACBB}
{\bkmkend AAAAAAACBB}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b PEEP_Val}{\bkmkstart AAAAAAACBC}
{\bkmkend AAAAAAACBC}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b TRIG_TYPE}{\bkmkstart AAAAAAACBD}
{\bkmkend AAAAAAACBD}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b TRIG_LMT}{\bkmkstart AAAAAAACBE}
{\bkmkend AAAAAAACBE}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b TRIG_TIME}{\bkmkstart AAAAAAACBF}
{\bkmkend AAAAAAACBF}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b CALC_TRIG_VAL}{\bkmkstart AAAAAAACBG}
{\bkmkend AAAAAAACBG}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b TOLERANCE_EWAVE}{\bkmkstart AAAAAAACBH}
{\bkmkend AAAAAAACBH}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b TRIG_WINDOW}{\bkmkstart AAAAAAACBI}
{\bkmkend AAAAAAACBI}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b APNEA_TIME}{\bkmkstart AAAAAAACBJ}
{\bkmkend AAAAAAACBJ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b APNEA_COUNTER}{\bkmkstart AAAAAAACBK}
{\bkmkend AAAAAAACBK}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b PSV_O2_Val}{\bkmkstart AAAAAAACBL}
{\bkmkend AAAAAAACBL}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b VENT_TYPE}{\bkmkstart AAAAAAACBM}
{\bkmkend AAAAAAACBM}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/PSV/PSV.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
psv_peep_average Struct Reference\par \pard\plain 
{\tc\tcl2 \v psv_peep_average}
{\xe \v psv_peep_average}
{\bkmkstart AAAAAAACBN}
{\bkmkend AAAAAAACBN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b PEEP_Cumulative_Val}{\bkmkstart AAAAAAACBO}
{\bkmkend AAAAAAACBO}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b PEEP_Event_Count}{\bkmkstart AAAAAAACBP}
{\bkmkend AAAAAAACBP}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b PEEP_AVG_VAL}{\bkmkstart AAAAAAACBQ}
{\bkmkend AAAAAAACBQ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/PSV/PSV.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
psv_pip_average Struct Reference\par \pard\plain 
{\tc\tcl2 \v psv_pip_average}
{\xe \v psv_pip_average}
{\bkmkstart AAAAAAACBR}
{\bkmkend AAAAAAACBR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Maximum_PRESSURE_SUPPORT_Acheived}{\bkmkstart AAAAAAACBS}
{\bkmkend AAAAAAACBS}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b PRESSURE_SUPPORT_Cumulative_Val}{\bkmkstart AAAAAAACBT}
{\bkmkend AAAAAAACBT}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b PRESSURE_SUPPORT_Event_Count}{\bkmkstart AAAAAAACBU}
{\bkmkend AAAAAAACBU}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b PRESSURE_SUPPORT_AVG_VAL}{\bkmkstart AAAAAAACBV}
{\bkmkend AAAAAAACBV}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/PSV/PSV.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RECEIVE_GRAPH_PACKET Struct Reference\par \pard\plain 
{\tc\tcl2 \v RECEIVE_GRAPH_PACKET}
{\xe \v RECEIVE_GRAPH_PACKET}
{\bkmkstart AAAAAAACBW}
{\bkmkend AAAAAAACBW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure Representing Mode parameter values for modes. data receive from tab. }}\par
{
{\f2 #include <Bluetooth_Graph.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b header}{\bkmkstart AAAAAAACBX}
{\bkmkend AAAAAAACBX}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
data header. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b length}{\bkmkstart AAAAAAACBY}
{\bkmkend AAAAAAACBY}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
data length. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Control_Byte}{\bkmkstart AAAAAAACBZ}
{\bkmkend AAAAAAACBZ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
inspiration or expiration cycle. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b PIP_PS_Phigh}{\bkmkstart AAAAAAACCA}
{\bkmkend AAAAAAACCA}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PIP value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b PEEP_CPAP_Plow}{\bkmkstart AAAAAAACCB}
{\bkmkend AAAAAAACCB}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PEEP value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b VTI_VS}{\bkmkstart AAAAAAACCC}
{\bkmkend AAAAAAACCC}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
volume value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b FiO2}{\bkmkstart AAAAAAACCD}
{\bkmkend AAAAAAACCD}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Oxygen value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b RR}{\bkmkstart AAAAAAACCE}
{\bkmkend AAAAAAACCE}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Respiratory rate value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b T_high}{\bkmkstart AAAAAAACCF}
{\bkmkend AAAAAAACCF}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
inspiration Time. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b T_low}{\bkmkstart AAAAAAACCG}
{\bkmkend AAAAAAACCG}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Expiration time. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Rise_Time}{\bkmkstart AAAAAAACCH}
{\bkmkend AAAAAAACCH}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rise time value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Flow_Limit_FiO2_Flow_Limit}{\bkmkstart AAAAAAACCI}
{\bkmkend AAAAAAACCI}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flow limit value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Apnea_Time}{\bkmkstart AAAAAAACCJ}
{\bkmkend AAAAAAACCJ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Apnea time. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Trigger_Time}{\bkmkstart AAAAAAACCK}
{\bkmkend AAAAAAACCK}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigger time. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Trigger_Limit}{\bkmkstart AAAAAAACCL}
{\bkmkend AAAAAAACCL}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigger Limit. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Vent_Type_Min_O2}{\bkmkstart AAAAAAACCM}
{\bkmkend AAAAAAACCM}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask mode or et tube mode. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Max_O2}{\bkmkstart AAAAAAACCN}
{\bkmkend AAAAAAACCN}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum O2 sensor value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b CRC8}{\bkmkstart AAAAAAACCO}
{\bkmkend AAAAAAACCO}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
crc. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure Representing Mode parameter values for modes. data receive from tab. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/Bluetooth/{\b Bluetooth_Graph.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sampled_Parameter_1 Struct Reference\par \pard\plain 
{\tc\tcl2 \v sampled_Parameter_1}
{\xe \v sampled_Parameter_1}
{\bkmkstart AAAAAAACCP}
{\bkmkend AAAAAAACCP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Average_PIP}{\bkmkstart AAAAAAACCQ}
{\bkmkend AAAAAAACCQ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Average_PEEP}{\bkmkstart AAAAAAACCR}
{\bkmkend AAAAAAACCR}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b Volume_Max_Insp}{\bkmkstart AAAAAAACCS}
{\bkmkend AAAAAAACCS}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b Volume_Max_Exp}{\bkmkstart AAAAAAACCT}
{\bkmkend AAAAAAACCT}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b MAX_Flow}{\bkmkstart AAAAAAACCU}
{\bkmkend AAAAAAACCU}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b MIN_Flow}{\bkmkstart AAAAAAACCV}
{\bkmkend AAAAAAACCV}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/Sampled_Parameter/Sampled_Parameter.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sampled_Parameter_2 Struct Reference\par \pard\plain 
{\tc\tcl2 \v sampled_Parameter_2}
{\xe \v sampled_Parameter_2}
{\bkmkstart AAAAAAACCW}
{\bkmkend AAAAAAACCW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b Minite_Volume}{\bkmkstart AAAAAAACCX}
{\bkmkend AAAAAAACCX}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b Total_Tidal_Volume_Int}{\bkmkstart AAAAAAACCY}
{\bkmkend AAAAAAACCY}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b Total_Tidal_Volume_Decimal_1}{\bkmkstart AAAAAAACCZ}
{\bkmkend AAAAAAACCZ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b Total_Tidal_Volume_Decimal}{\bkmkstart AAAAAAACDA}
{\bkmkend AAAAAAACDA}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b Total_Tidal_Volume_float}{\bkmkstart AAAAAAACDB}
{\bkmkend AAAAAAACDB}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Acheived_RR}{\bkmkstart AAAAAAACDC}
{\bkmkend AAAAAAACDC}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b Acheived_I_Time}{\bkmkstart AAAAAAACDD}
{\bkmkend AAAAAAACDD}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b Acheived_E_Time}{\bkmkstart AAAAAAACDE}
{\bkmkend AAAAAAACDE}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b Acheived_I_Time_float}{\bkmkstart AAAAAAACDF}
{\bkmkend AAAAAAACDF}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b Acheived_E_Time_float}{\bkmkstart AAAAAAACDG}
{\bkmkend AAAAAAACDG}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b Acheived_I_Time_int}{\bkmkstart AAAAAAACDH}
{\bkmkend AAAAAAACDH}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b Acheived_E_Time_int}{\bkmkstart AAAAAAACDI}
{\bkmkend AAAAAAACDI}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b Acheived_E_Time_Decimal_1}{\bkmkstart AAAAAAACDJ}
{\bkmkend AAAAAAACDJ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b Acheived_E_Time_Decimal}{\bkmkstart AAAAAAACDK}
{\bkmkend AAAAAAACDK}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b Acheived_I_Time_Decimal_1}{\bkmkstart AAAAAAACDL}
{\bkmkend AAAAAAACDL}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b Acheived_I_Time_Decimal}{\bkmkstart AAAAAAACDM}
{\bkmkend AAAAAAACDM}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/Sampled_Parameter/Sampled_Parameter.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sampled_Parameter_3 Struct Reference\par \pard\plain 
{\tc\tcl2 \v sampled_Parameter_3}
{\xe \v sampled_Parameter_3}
{\bkmkstart AAAAAAACDN}
{\bkmkend AAAAAAACDN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Compliance}{\bkmkstart AAAAAAACDO}
{\bkmkend AAAAAAACDO}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Plateau_Pressure}{\bkmkstart AAAAAAACDP}
{\bkmkend AAAAAAACDP}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

double {\b Staic_Compliance}{\bkmkstart AAAAAAACDQ}
{\bkmkend AAAAAAACDQ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Staic_Compliance_int}{\bkmkstart AAAAAAACDR}
{\bkmkend AAAAAAACDR}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Staic_Compliance_float}{\bkmkstart AAAAAAACDS}
{\bkmkend AAAAAAACDS}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

double {\b Dynamic_Compliance}{\bkmkstart AAAAAAACDT}
{\bkmkend AAAAAAACDT}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Dynamic_Compliance_int}{\bkmkstart AAAAAAACDU}
{\bkmkend AAAAAAACDU}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Dynamic_Compliance_float}{\bkmkstart AAAAAAACDV}
{\bkmkend AAAAAAACDV}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

double {\b Rinsp}{\bkmkstart AAAAAAACDW}
{\bkmkend AAAAAAACDW}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Rinsp_int}{\bkmkstart AAAAAAACDX}
{\bkmkend AAAAAAACDX}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Rinsp_float_1}{\bkmkstart AAAAAAACDY}
{\bkmkend AAAAAAACDY}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Rinsp_float_2}{\bkmkstart AAAAAAACDZ}
{\bkmkend AAAAAAACDZ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/Sampled_Parameter/Sampled_Parameter.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sampled_Parameter_4 Struct Reference\par \pard\plain 
{\tc\tcl2 \v sampled_Parameter_4}
{\xe \v sampled_Parameter_4}
{\bkmkstart AAAAAAACEA}
{\bkmkend AAAAAAACEA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

double {\b MAP}{\bkmkstart AAAAAAACEB}
{\bkmkend AAAAAAACEB}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b MAP_int}{\bkmkstart AAAAAAACEC}
{\bkmkend AAAAAAACEC}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b MAP_float}{\bkmkstart AAAAAAACED}
{\bkmkend AAAAAAACED}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

double {\b I_Ratio}{\bkmkstart AAAAAAACEE}
{\bkmkend AAAAAAACEE}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

double {\b E_Ratio}{\bkmkstart AAAAAAACEF}
{\bkmkend AAAAAAACEF}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b I_Ratio_int}{\bkmkstart AAAAAAACEG}
{\bkmkend AAAAAAACEG}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b E_Ratio_int}{\bkmkstart AAAAAAACEH}
{\bkmkend AAAAAAACEH}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b I_Ratio_float}{\bkmkstart AAAAAAACEI}
{\bkmkend AAAAAAACEI}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b E_Ratio_float}{\bkmkstart AAAAAAACEJ}
{\bkmkend AAAAAAACEJ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/Sampled_Parameter/Sampled_Parameter.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SENSOR Struct Reference\par \pard\plain 
{\tc\tcl2 \v SENSOR}
{\xe \v SENSOR}
{\bkmkstart AAAAAAACEK}
{\bkmkend AAAAAAACEK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sensor - Structure. }}\par
{
{\f2 #include <sensor.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b offset}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b offset_minimum}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b offset_maximum}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b supply_voltage}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b value}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b current_reading}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b previous_reading}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b operational_status}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b sensor_ready}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b sensitivity}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b smoothing_factor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b efficiency}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sensor - Structure. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This structure represents a generic sensor. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v current_reading\:SENSOR}
{\xe \v SENSOR\:current_reading}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t SENSOR::current_reading}}
\par
{\bkmkstart AAAAAAACEL}
{\bkmkend AAAAAAACEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current ADC reading from the sensor \par
}}
{\xe \v efficiency\:SENSOR}
{\xe \v SENSOR\:efficiency}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t SENSOR::efficiency}}
\par
{\bkmkstart AAAAAAACEM}
{\bkmkend AAAAAAACEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sensor Efficiency \par
}}
{\xe \v offset\:SENSOR}
{\xe \v SENSOR\:offset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t SENSOR::offset}}
\par
{\bkmkstart AAAAAAACEN}
{\bkmkend AAAAAAACEN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sensor offset value \par
}}
{\xe \v offset_maximum\:SENSOR}
{\xe \v SENSOR\:offset_maximum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t SENSOR::offset_maximum}}
\par
{\bkmkstart AAAAAAACEO}
{\bkmkend AAAAAAACEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum allowable offset \par
}}
{\xe \v offset_minimum\:SENSOR}
{\xe \v SENSOR\:offset_minimum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t SENSOR::offset_minimum}}
\par
{\bkmkstart AAAAAAACEP}
{\bkmkend AAAAAAACEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Minimum allowable offset \par
}}
{\xe \v operational_status\:SENSOR}
{\xe \v SENSOR\:operational_status}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t SENSOR::operational_status}}
\par
{\bkmkstart AAAAAAACEQ}
{\bkmkend AAAAAAACEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Operational status of the sensor \par
}}
{\xe \v previous_reading\:SENSOR}
{\xe \v SENSOR\:previous_reading}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t SENSOR::previous_reading}}
\par
{\bkmkstart AAAAAAACER}
{\bkmkend AAAAAAACER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Previous ADC reading from the sensor \par
}}
{\xe \v sensitivity\:SENSOR}
{\xe \v SENSOR\:sensitivity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float SENSOR::sensitivity}}
\par
{\bkmkstart AAAAAAACES}
{\bkmkend AAAAAAACES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sensitivity of the sensor \par
}}
{\xe \v sensor_ready\:SENSOR}
{\xe \v SENSOR\:sensor_ready}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t SENSOR::sensor_ready}}
\par
{\bkmkstart AAAAAAACET}
{\bkmkend AAAAAAACET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flag indicating if the sensor is ready \par
}}
{\xe \v smoothing_factor\:SENSOR}
{\xe \v SENSOR\:smoothing_factor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float SENSOR::smoothing_factor}}
\par
{\bkmkstart AAAAAAACEU}
{\bkmkend AAAAAAACEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Smoothing factor for sensor readings \par
}}
{\xe \v supply_voltage\:SENSOR}
{\xe \v SENSOR\:supply_voltage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t SENSOR::supply_voltage}}
\par
{\bkmkstart AAAAAAACEV}
{\bkmkend AAAAAAACEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Supply voltage for the sensor \par
}}
{\xe \v value\:SENSOR}
{\xe \v SENSOR\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float SENSOR::value}}
\par
{\bkmkstart AAAAAAACEW}
{\bkmkend AAAAAAACEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current sensor reading value \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/sensor.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Service Struct Reference\par \pard\plain 
{\tc\tcl2 \v Service}
{\xe \v Service}
{\bkmkstart AAAAAAACEX}
{\bkmkend AAAAAAACEX}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Service_Status}{\bkmkstart AAAAAAACEY}
{\bkmkend AAAAAAACEY}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b Blower_Signal}{\bkmkstart AAAAAAACEZ}
{\bkmkend AAAAAAACEZ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b Proportional_Valve_Signal}{\bkmkstart AAAAAAACFA}
{\bkmkend AAAAAAACFA}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Sensor_Offset}{\bkmkstart AAAAAAACFB}
{\bkmkend AAAAAAACFB}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Blower_Enable}{\bkmkstart AAAAAAACFC}
{\bkmkend AAAAAAACFC}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Expiratory_Valve_Control}{\bkmkstart AAAAAAACFD}
{\bkmkend AAAAAAACFD}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Nebulizer_Control}{\bkmkstart AAAAAAACFE}
{\bkmkend AAAAAAACFE}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SERVICE/Service.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TIME_base_parameter Struct Reference\par \pard\plain 
{\tc\tcl2 \v TIME_base_parameter}
{\xe \v TIME_base_parameter}
{\bkmkstart AAAAAAACFF}
{\bkmkend AAAAAAACFF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure contains time based variables. }}\par
{
{\f2 #include <Common_Parameter.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b _INSPIRATION_TIME}{\bkmkstart AAAAAAACFG}
{\bkmkend AAAAAAACFG}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b _EXPIRATION_TIME}{\bkmkstart AAAAAAACFH}
{\bkmkend AAAAAAACFH}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b INSPIRATION_TIME_ACHEIVED}{\bkmkstart AAAAAAACFI}
{\bkmkend AAAAAAACFI}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b EXPIRATION_TIME_ACHEIVED}{\bkmkstart AAAAAAACFJ}
{\bkmkend AAAAAAACFJ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b FLOW_ACHIEVED_TIMER}{\bkmkstart AAAAAAACFK}
{\bkmkend AAAAAAACFK}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure contains time based variables. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/OTHERS/{\b Common_Parameter.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
VC_CMV_mode_parameter Struct Reference\par \pard\plain 
{\tc\tcl2 \v VC_CMV_mode_parameter}
{\xe \v VC_CMV_mode_parameter}
{\bkmkstart AAAAAAACFL}
{\bkmkend AAAAAAACFL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure Representing VCCMV Mode parameter variables. it includes expiration time ,rise time percentage variables. }}\par
{
{\f2 #include <Vc_Cmv.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b VOLUME_Val}{\bkmkstart AAAAAAACFM}
{\bkmkend AAAAAAACFM}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Volume Parameter. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b PEEP_Val}{\bkmkstart AAAAAAACFN}
{\bkmkend AAAAAAACFN}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PEEP Parameter. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b RESPIRATORY_RATE_Val}{\bkmkstart AAAAAAACFO}
{\bkmkend AAAAAAACFO}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RR Parameter. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b FIO2_Val}{\bkmkstart AAAAAAACFP}
{\bkmkend AAAAAAACFP}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FIO2 Parameter. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b INSPIRATION_TIME}{\bkmkstart AAAAAAACFQ}
{\bkmkend AAAAAAACFQ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
INSPIRATION_TIME Parameter. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b EXPIRATION_TIME}{\bkmkstart AAAAAAACFR}
{\bkmkend AAAAAAACFR}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EXPIRATION_TIME Parameter. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Inspiration_Time_Ratio}{\bkmkstart AAAAAAACFS}
{\bkmkend AAAAAAACFS}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inspiration_Time_Ratio Parameter. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Expiration_Time_Ratio}{\bkmkstart AAAAAAACFT}
{\bkmkend AAAAAAACFT}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Expiration_Time_Ratio Parameter. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b FLOW_RATE_Val}{\bkmkstart AAAAAAACFU}
{\bkmkend AAAAAAACFU}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FLOW_RATE_Val Parameter. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure Representing VCCMV Mode parameter variables. it includes expiration time ,rise time percentage variables. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/VC_CMV/{\b Vc_Cmv.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
VC_SIMV_mode_parameter Struct Reference\par \pard\plain 
{\tc\tcl2 \v VC_SIMV_mode_parameter}
{\xe \v VC_SIMV_mode_parameter}
{\bkmkstart AAAAAAACFV}
{\bkmkend AAAAAAACFV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure Representing VCSIMV Mode parameter variables. it includes expiration time ,rise time percentage variables. }}\par
{
{\f2 #include <Vc_Simv_Assist_ON.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b VOLUME_Val}{\bkmkstart AAAAAAACFW}
{\bkmkend AAAAAAACFW}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b PEEP_Val}{\bkmkstart AAAAAAACFX}
{\bkmkend AAAAAAACFX}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b RESPIRATORY_RATE_Val}{\bkmkstart AAAAAAACFY}
{\bkmkend AAAAAAACFY}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b FIO2_Val}{\bkmkstart AAAAAAACFZ}
{\bkmkend AAAAAAACFZ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b INSPIRATION_TIME}{\bkmkstart AAAAAAACGA}
{\bkmkend AAAAAAACGA}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b EXPIRATION_TIME}{\bkmkstart AAAAAAACGB}
{\bkmkend AAAAAAACGB}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Inspiration_Time_Ratio}{\bkmkstart AAAAAAACGC}
{\bkmkend AAAAAAACGC}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Expiration_Time_Ratio}{\bkmkstart AAAAAAACGD}
{\bkmkend AAAAAAACGD}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b FLOW_RATE_Val}{\bkmkstart AAAAAAACGE}
{\bkmkend AAAAAAACGE}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b TRIG_TYPE}{\bkmkstart AAAAAAACGF}
{\bkmkend AAAAAAACGF}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b TRIG_LMT}{\bkmkstart AAAAAAACGG}
{\bkmkend AAAAAAACGG}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b TRIG_TIME}{\bkmkstart AAAAAAACGH}
{\bkmkend AAAAAAACGH}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b CALC_TRIG_VAL}{\bkmkstart AAAAAAACGI}
{\bkmkend AAAAAAACGI}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b TOLERANCE_EWAVE}{\bkmkstart AAAAAAACGJ}
{\bkmkend AAAAAAACGJ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b TRIG_WINDOW}{\bkmkstart AAAAAAACGK}
{\bkmkend AAAAAAACGK}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Assist_Control}{\bkmkstart AAAAAAACGL}
{\bkmkend AAAAAAACGL}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure Representing VCSIMV Mode parameter variables. it includes expiration time ,rise time percentage variables. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/VC-SIMV/{\b Vc_Simv_Assist_ON.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
vcsimv Struct Reference\par \pard\plain 
{\tc\tcl2 \v vcsimv}
{\xe \v vcsimv}
{\bkmkstart AAAAAAACGM}
{\bkmkend AAAAAAACGM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b Blower_Wait_Time_Milli_Second}{\bkmkstart AAAAAAACGN}
{\bkmkend AAAAAAACGN}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b Trigger_Check_Wait_Time}{\bkmkstart AAAAAAACGO}
{\bkmkend AAAAAAACGO}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/VC-SIMV/Vc_Simv_Assist_OFF.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
volume_control_Task Struct Reference\par \pard\plain 
{\tc\tcl2 \v volume_control_Task}
{\xe \v volume_control_Task}
{\bkmkstart AAAAAAACGP}
{\bkmkend AAAAAAACGP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure Controls volume and flow achieved status. }}\par
{
{\f2 #include <Volume_control.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Volume_Stop_Value}{\bkmkstart AAAAAAACGQ}
{\bkmkend AAAAAAACGQ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Volume stopping position value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Flow_Max_Achieved}{\bkmkstart AAAAAAACGR}
{\bkmkend AAAAAAACGR}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
maximum flow achieved status }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b Achieved_Volume}{\bkmkstart AAAAAAACGS}
{\bkmkend AAAAAAACGS}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
achieved volume }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b LOW_Flow_Max_Achieved}{\bkmkstart AAAAAAACGT}
{\bkmkend AAAAAAACGT}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
if low flow achieved status }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure Controls volume and flow achieved status. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/VOLUME_CONTROL/{\b Volume_control.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Volume_mode_blower_control Struct Reference\par \pard\plain 
{\tc\tcl2 \v Volume_mode_blower_control}
{\xe \v Volume_mode_blower_control}
{\bkmkstart AAAAAAACGU}
{\bkmkend AAAAAAACGU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure control Blower Character.. }}\par
{
{\f2 #include <Volume_control.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b BLOWER_DAC_VAL}{\bkmkstart AAAAAAACGV}
{\bkmkend AAAAAAACGV}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
blower dac value }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b INITIAL_BLOWER_DAC_VAL}{\bkmkstart AAAAAAACGW}
{\bkmkend AAAAAAACGW}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
initial dac value in inspiration time }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b INITIAL_BLOWER_DAC_VAL_TRIGGER}{\bkmkstart AAAAAAACGX}
{\bkmkend AAAAAAACGX}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
initial dac value in inspiration time in vc simv mode }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b PREVIOUS_INITIAL_BLOWER_DAC_VAL}{\bkmkstart AAAAAAACGY}
{\bkmkend AAAAAAACGY}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
previous breath initial dac value in inspiration time }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b Blower_Signal_Voltage}{\bkmkstart AAAAAAACGZ}
{\bkmkend AAAAAAACGZ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
blower dac converted as volatge }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b PEEP_BLOWER_DAC_VAL}{\bkmkstart AAAAAAACHA}
{\bkmkend AAAAAAACHA}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
peep maintain blower dac in simv mode }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b LAST_PEEP_BLOWER_DAC_VAL}{\bkmkstart AAAAAAACHB}
{\bkmkend AAAAAAACHB}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
last peep blower dac value }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure control Blower Character.. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/VOLUME_CONTROL/{\b Volume_control.h}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Documentation{\tc \v File Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/ALERT/Alert.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/ALERT/Alert.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/ALERT/Alert.h}
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of an indicator for abnormal status of the ventilator. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "stdio.h"}\par
{\f2 #include "stm32f4xx_hal.h"}\par
{\f2 #include "main.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ALERT_RANGE}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure extract alert range for each type of alert. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Alert_count}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure Variables used to determine the alert. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Red_Led_ON}()\~ GPIOD->ODR|=(1<<4){\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alert indication Red Led ON. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Red_Led_OFF}()\~ GPIOD->ODR&=(~(1<<4)){\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alert indication Red Led OFF. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Blue_Led_ON}()\~ GPIOD->ODR|=(1<<3){\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alert indication Blue Led ON. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Blue_Led_OFF}()\~ GPIOD->ODR&=(~(1<<3)){\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alert indication Blue Led OFF. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Green_Led_ON}()\~ GPIOD->ODR|=(1<<5){\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alert indication Green Led ON. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Green_Led_OFF}()\~ GPIOD->ODR&=(~(1<<5)){\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alert indication Green Led OFF. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b SET_ALERT_BIT}(frame,  bitname)\~ (DEVICE_ALERT_DATA_SEND.frame.FRAMEBits.bitname = 1 ){\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Function macro for set alerts. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CLEAR_ALERT_BIT}(frame,  bitname)\~ (DEVICE_ALERT_DATA_SEND.frame.FRAMEBits.bitname = 0 ){\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Function macro for clear alerts. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b DEVICE_ALERT_DATA_SEND_LENGTH}\~ 6{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
alert data frame length }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b alert_status} \{ {\b NO_ALERT}
, {\b ALERT_HAPPEN}
 \}{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration store the information about alert status. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b apnea_alert} \{ {\b NO_APNEA_ALERT_HAPPEN}
, {\b APNEA_ALERT_HAPPEN}
 \}{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration store the information about apnea alert status. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b send_bluetooth_data_farme} \{ {\b SEND_GRAPH_FRAME}
, {\b SEND_ALERT_FRAME}
, {\b SEND_CALIBRATION_FRAME}
, {\b SEND_SAMPLED_PARAMETER_FRAME}
, {\b SEND_SERVICE_FRAME}
 \}{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration for UART decides which frame needs to be sent at a time. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b PATIENT_CIRCUIT_DISCONNECTED_ALERT_check} \{ {\b CHECK}
, {\b DO_NOT_CHECK}
 \}{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration Reidentify whether an alert needs to be checked or not. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b __attribute__} ((packed))\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure Alert data first frame used as one byte. it includes power status,oxygen blending based alerts. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Alert_Task} (void *argument)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alert_Task. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Split_Alert_Parameter_Packets} (ALERT_RANGE_PACKET *Receive_Graph_Packet)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Split_Alert_Parameter_Packets. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Check_Alert} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check_Alert. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SEND_ALERT_PACKET} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SEND_ALERT_PACKET. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Pip_Alert} (uint8_t)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pip_Alert. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Alert_Inspiration_Time_Parameter} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alert_Inspiration_Time_Parameter. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Clear_All_Alert_Bits} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clear_All_Alert_Bits. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b UART5_Alert_data_Debug} (){\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UART5_Alert_data_Debug. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Peep_Alert} (uint8_t)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Peep_Alert. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Tidal_Volume_Alert} (int)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tidal_Volume_Alert. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Minite_Volume_Alert} (int)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Minite_Volume_Alert. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Alert_Flags_Reset} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alert_Flags_Reset. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Respiratory_Rate_Alert} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Respiratory_Rate_Alert. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Alert_Expiration_Time_Parameter} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alert_Expiration_Time_Parameter. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Oxygen_Supply_Alert} (uint8_t, uint8_t)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Oxygen_Supply_Alert. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Oxygen_Blending_Alert} (uint8_t, uint8_t)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Oxygen_Blending_Alert. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Patient_Circuit_Disconnected_Alert} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Patient_Circuit_Disconnected_Alert. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Leak_Alert} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Leak_Alert. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Proximal_Flow_Sensor_Reverse_Direction} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Proximal_Flow_Sensor_Reverse_Direction. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b LED_Alert} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LED_Alert. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b AC_Supply_or_Battery_Supply_Indication} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
AC_Supply_or_Battery_Supply_Indication. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Hide_Alert_1} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hide_Alert_1. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Hide_Alert_2} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hide_Alert_2. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Read_Battery_Voltage} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read_Battery_Voltage. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b FIRST_FRAME}{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b SECOND_FRAME}{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b THIRD_FRAME}{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b FOURTH_FRAME}{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b FIFTH_FRAME}{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b SIXTH_FRAME}{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Device_Alert_Data_Send}{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ALERT_RANGE_PACKET}{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PATIENT_CIRCUIT_DISCONNECTED_ALERT_check} {\b PATIENT_CIRCUIT_DISCONNECTED_ALERT_CHECK}{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PATIENT_CIRCUIT_DISCONNECTED_ALERT_check} {\b PROXIMAL_SENSOR_REVERSE_ALERT_CHECK}{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration variable. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

Device_Alert_Data_Send {\b DEVICE_ALERT_DATA_SEND}{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
structure variable }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ALERT_RANGE} {\b Alert_Range}{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
structure variable }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Alert_count} {\b Alert_Count}{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
structure variable }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b alert_status} {\b Alert_Status}{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration variable. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b apnea_alert} {\b Apnea_Alert}{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration variable. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b send_bluetooth_data_farme} {\b Send_Bluetooth_Data_Farme}{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration variable. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Alert_Check}{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

xTaskHandle {\b Alert_Handler}{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
alert task variable }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of an indicator for abnormal status of the ventilator. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sarath Kumar \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
27/03/24 \par
}}This file contains the Declaration of an indicator for abnormal status of the ventilator, including the initialization \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v __attribute__\:Alert.h}
{\xe \v Alert.h\:__attribute__}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct __attribute__ ((packed) )}}
\par
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure Alert data first frame used as one byte. it includes power status,oxygen blending based alerts. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure Define the alert range for each type of alert.\par
Structure Alert data whole frame used as one structure. it includes header files.\par
Structure Alert data sixth frame used as one byte. it is dummy byte.\par
Structure Alert data fifth frame used as one byte. it is dummy byte.\par
Structure Alert data fourth frame used as one byte. it includes high fio2,low fio2.\par
Structure Alert data third frame used as one byte. it includes high pip,low pip.\par
Structure Alert data second frame used as one byte. it includes Leak,apnea alerts. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< 230v ac supply\par
< 29v dc supply\par
< battery drain condition\par
< Problem related oxygen supply input\par
< patient circuit disconnection\par
< The proximal flow sensor is connected in the wrong direction.\par
< Nenulizer on\par
< Nebulizer off\par
< update apnea status\par
< low spo2 alert\par
< pressure limitation alert\par
< leak alert\par
< not implemented\par
< not implemented\par
< not implemented\par
< not implemented\par
}}
{\xe \v AC_Supply_or_Battery_Supply_Indication\:Alert.h}
{\xe \v Alert.h\:AC_Supply_or_Battery_Supply_Indication}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void AC_Supply_or_Battery_Supply_Indication ()}}
\par
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
AC_Supply_or_Battery_Supply_Indication. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
AC_Supply_or_Battery_Supply_Indication. \par
}}
{\xe \v Alert_Expiration_Time_Parameter\:Alert.h}
{\xe \v Alert.h\:Alert_Expiration_Time_Parameter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Alert_Expiration_Time_Parameter ()}}
\par
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alert_Expiration_Time_Parameter. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alert_Expiration_Time_Parameter. \par
}}
{\xe \v Alert_Flags_Reset\:Alert.h}
{\xe \v Alert.h\:Alert_Flags_Reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Alert_Flags_Reset ()}}
\par
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alert_Flags_Reset. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alert_Flags_Reset. \par
}}
{\xe \v Alert_Inspiration_Time_Parameter\:Alert.h}
{\xe \v Alert.h\:Alert_Inspiration_Time_Parameter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Alert_Inspiration_Time_Parameter ()}}
\par
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alert_Inspiration_Time_Parameter. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alert_Inspiration_Time_Parameter. \par
}}
{\xe \v Alert_Task\:Alert.h}
{\xe \v Alert.h\:Alert_Task}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Alert_Task (void *  {\i argument})}}
\par
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alert_Task. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alert_Task. \par
}}
{\xe \v Check_Alert\:Alert.h}
{\xe \v Alert.h\:Check_Alert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Check_Alert ()}}
\par
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check_Alert. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check_Alert. \par
}}
{\xe \v Clear_All_Alert_Bits\:Alert.h}
{\xe \v Alert.h\:Clear_All_Alert_Bits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Clear_All_Alert_Bits ()}}
\par
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clear_All_Alert_Bits. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clear_All_Alert_Bits. \par
}}
{\xe \v Hide_Alert_1\:Alert.h}
{\xe \v Alert.h\:Hide_Alert_1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Hide_Alert_1 ()}}
\par
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hide_Alert_1. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hide_Alert_1. \par
}}
{\xe \v Hide_Alert_2\:Alert.h}
{\xe \v Alert.h\:Hide_Alert_2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Hide_Alert_2 ()}}
\par
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hide_Alert_2. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hide_Alert_2. \par
}}
{\xe \v Leak_Alert\:Alert.h}
{\xe \v Alert.h\:Leak_Alert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Leak_Alert ()}}
\par
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Leak_Alert. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Leak_Alert.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None.} \cell }{\cell }
{\row }
}
}}
{\xe \v LED_Alert\:Alert.h}
{\xe \v Alert.h\:LED_Alert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LED_Alert ()}}
\par
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LED_Alert. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LED_Alert.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None.} \cell }{\cell }
{\row }
}
}}
{\xe \v Minite_Volume_Alert\:Alert.h}
{\xe \v Alert.h\:Minite_Volume_Alert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Minite_Volume_Alert (int  {\i Achieved_Minite_Volume})}}
\par
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Minite_Volume_Alert. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Minite_Volume_Alert.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Achieved_Minite_Volume} \cell }{achieved minite volume in the last one minute. \cell }
{\row }
}
}}
{\xe \v Oxygen_Blending_Alert\:Alert.h}
{\xe \v Alert.h\:Oxygen_Blending_Alert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Oxygen_Blending_Alert (uint8_t  {\i FIO2_Val}, uint8_t  {\i Achieved_Oxygen})}}
\par
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Oxygen_Blending_Alert. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Oxygen_Blending_Alert.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i FIO2_Val} \cell }{mode set FIO2_Val. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Maximum_oxygen_flow} \cell }{maximum oxygen flow achieved in last breath. \cell }
{\row }
}
}}
{\xe \v Oxygen_Supply_Alert\:Alert.h}
{\xe \v Alert.h\:Oxygen_Supply_Alert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Oxygen_Supply_Alert (uint8_t  {\i FIO2_Val}, uint8_t  {\i Maximum_oxygen_flow})}}
\par
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Oxygen_Supply_Alert. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Oxygen_Supply_Alert.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i FIO2_Val} \cell }{mode set FIO2_Val. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Maximum_oxygen_flow} \cell }{maximum oxygen flow achieved in last breath. \cell }
{\row }
}
}}
{\xe \v Patient_Circuit_Disconnected_Alert\:Alert.h}
{\xe \v Alert.h\:Patient_Circuit_Disconnected_Alert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Patient_Circuit_Disconnected_Alert ()}}
\par
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Patient_Circuit_Disconnected_Alert. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Patient_Circuit_Disconnected_Alert.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None.} \cell }{\cell }
{\row }
}
}}
{\xe \v Peep_Alert\:Alert.h}
{\xe \v Alert.h\:Peep_Alert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Peep_Alert (uint8_t  {\i PEEP})}}
\par
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Peep_Alert. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Peep_Alert.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i PEEP} \cell }{minimum PEEP value achieved in the last breath cycle from the mode \cell }
{\row }
}
}}
{\xe \v Pip_Alert\:Alert.h}
{\xe \v Alert.h\:Pip_Alert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Pip_Alert (uint8_t  {\i PIP})}}
\par
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pip_Alert. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pip_Alert.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i PIP} \cell }{Maximum PIP value achieved in the last breath cycle from the mode \cell }
{\row }
}
}}
{\xe \v Proximal_Flow_Sensor_Reverse_Direction\:Alert.h}
{\xe \v Alert.h\:Proximal_Flow_Sensor_Reverse_Direction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Proximal_Flow_Sensor_Reverse_Direction ()}}
\par
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Proximal_Flow_Sensor_Reverse_Direction. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Proximal_Flow_Sensor_Reverse_Direction.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None.} \cell }{\cell }
{\row }
}
}}
{\xe \v Read_Battery_Voltage\:Alert.h}
{\xe \v Alert.h\:Read_Battery_Voltage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Read_Battery_Voltage ()}}
\par
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read_Battery_Voltage. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read_Battery_Voltage. \par
}}
{\xe \v Respiratory_Rate_Alert\:Alert.h}
{\xe \v Alert.h\:Respiratory_Rate_Alert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Respiratory_Rate_Alert ()}}
\par
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Respiratory_Rate_Alert. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Respiratory_Rate_Alert.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None.} \cell }{\cell }
{\row }
}
}}
{\xe \v SEND_ALERT_PACKET\:Alert.h}
{\xe \v Alert.h\:SEND_ALERT_PACKET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SEND_ALERT_PACKET ()}}
\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SEND_ALERT_PACKET. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SEND_ALERT_PACKET. \par
}}
{\xe \v Split_Alert_Parameter_Packets\:Alert.h}
{\xe \v Alert.h\:Split_Alert_Parameter_Packets}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Split_Alert_Parameter_Packets (ALERT_RANGE_PACKET *  {\i Receive_Graph_Packet})}}
\par
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Split_Alert_Parameter_Packets. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Split_Alert_Parameter_Packets. \par
}}
{\xe \v Tidal_Volume_Alert\:Alert.h}
{\xe \v Alert.h\:Tidal_Volume_Alert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Tidal_Volume_Alert (int  {\i Maximum_Volume_Achieved})}}
\par
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tidal_Volume_Alert. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tidal_Volume_Alert.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Maximum_Volume_Achieved} \cell }{achieved tidal volume in the last breath cycle from the mode \cell }
{\row }
}
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Alert.h\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/ALERT/Alert.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/ALERT/Alert.h}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
13 {\cf21 #ifndef INC_ALERT_H_}\par
14 {\cf21 #define INC_ALERT_H_}\par
15 \par
16 \par
17 {\cf21 #include "stdio.h"}\par
18 {\cf21 #include "stm32f4xx_hal.h"}\par
19 {\cf21 #include "main.h"}\par
20 \par
21 \par
22 \par
23 \par
24 \par
25 {\cf21 #define Red_Led_ON()     GPIOD->ODR|=(1<<4)           }\par
26 {\cf21 #define Red_Led_OFF()    GPIOD->ODR&=(~(1<<4))        }\par
27 {\cf21 #define Blue_Led_ON()    GPIOD->ODR|=(1<<3)           }\par
28 {\cf21 #define Blue_Led_OFF()   GPIOD->ODR&=(~(1<<3))        }\par
29 {\cf21 #define Green_Led_ON()   GPIOD->ODR|=(1<<5)           }\par
30 {\cf21 #define Green_Led_OFF()  GPIOD->ODR&=(~(1<<5))        }\par
31 \par
32 \par
33 \par
34 {\cf21 #define SET_ALERT_BIT(frame,bitname)    (DEVICE_ALERT_DATA_SEND.frame.FRAMEBits.bitname = 1 )   }\par
35 {\cf21 #define CLEAR_ALERT_BIT(frame,bitname)  (DEVICE_ALERT_DATA_SEND.frame.FRAMEBits.bitname = 0 )   }\par
36 {\cf21 #define DEVICE_ALERT_DATA_SEND_LENGTH 6                                                         }\par
37 \par
38 \par
39 \par
46 {\cf17 typedef} {\cf17 struct }__attribute__((packed)) \{\par
47 \par
48     {\cf17 volatile} uint8_t _ALERT_PLUGGED_IN:1;                    \par
49     {\cf17 volatile} uint8_t _ALERT_BATTERY_MODE:1;                  \par
50     {\cf17 volatile} uint8_t _ALERT_20_PER_BATTERY_DRAIN:1;          \par
51     {\cf17 volatile} uint8_t _ALERT_OXYGEN_SUPPLY_FAILED:1;          \par
52     {\cf17 volatile} uint8_t _ALERT_PATIENT_CIRCUIT_DISCONNECTED:1;  \par
53     {\cf17 volatile} uint8_t _ALERT_FLOW_SENSOR_WRONG_DIRECTION:1;   \par
54     {\cf17 volatile} uint8_t _ALERT_NEBULISER_ON:1;                  \par
55     {\cf17 volatile} uint8_t _ALERT_NEBULISER_OFF:1;                 \par
56 \par
57 \} FIRST_FRAME ;\par
58 \par
59 \par
65 {\cf17 typedef} {\cf17 struct }__attribute__((packed)) \{\par
66 \par
67     {\cf17 volatile} uint8_t _ALERT_APNEA:1;                      \par
68     {\cf17 volatile} uint8_t _ALERT_LOW_SPO2:1;                   \par
69     {\cf17 volatile} uint8_t _ALERT_PRESSURE_LIMITATION:1;        \par
70     {\cf17 volatile} uint8_t _ALERT_LEAK:1;                       \par
71     {\cf17 volatile} uint8_t _ALERT_NC1:1;                        \par
72     {\cf17 volatile} uint8_t _ALERT_NC2:1;                        \par
73     {\cf17 volatile} uint8_t _ALERT_NC3:1;                        \par
74     {\cf17 volatile} uint8_t _ALERT_NC4:1;                        \par
75 \par
76 \} SECOND_FRAME ;\par
77 \par
78 \par
84 {\cf17 typedef} {\cf17 struct }__attribute__((packed)) \{\par
85 \par
86     {\cf17 volatile} uint8_t _ALERT_HIGH_PIP:1;\par
87     {\cf17 volatile} uint8_t _ALERT_LOW_PIP:1;\par
88     {\cf17 volatile} uint8_t _ALERT_HIGH_PEEP:1;\par
89     {\cf17 volatile} uint8_t _ALERT_LOW_PEEP:1;\par
90     {\cf17 volatile} uint8_t _ALERT_HIGH_TIDAL_VOLUME:1;\par
91     {\cf17 volatile} uint8_t _ALERT_LOW_TIDAL_VOLUME:1;\par
92     {\cf17 volatile} uint8_t _ALERT_HIGH_MINUTE_VOLUME:1;\par
93     {\cf17 volatile} uint8_t _ALERT_LOW_MINUTE_VOLUME:1;\par
94 \par
95 \} THIRD_FRAME ;\par
96 \par
97 \par
103 {\cf17 typedef} {\cf17 struct }__attribute__((packed)) \{\par
104 \par
105     {\cf17 volatile} uint8_t _ALERT_HIGH_FIO2:1;\par
106     {\cf17 volatile} uint8_t _ALERT_LOW_FIO2:1;\par
107     {\cf17 volatile} uint8_t _ALERT_HIGH_FLOW:1;\par
108     {\cf17 volatile} uint8_t _ALERT_LOW_FLOW:1;\par
109     {\cf17 volatile} uint8_t _ALERT_HIGH_PULSE:1;\par
110     {\cf17 volatile} uint8_t _ALERT_LOW_PULSE:1;\par
111     {\cf17 volatile} uint8_t _ALERT_HIGH_RR:1;\par
112     {\cf17 volatile} uint8_t _ALERT_LOW_RR:1;\par
113 \par
114 \par
115 \par
116 \} FOURTH_FRAME ;\par
117 \par
118 \par
124 {\cf17 typedef} {\cf17 struct }__attribute__((packed)) \{\par
125 \par
126     {\cf17 volatile} uint32_t _ALERT_NC:1;\par
127 \par
128 \} FIFTH_FRAME ;\par
129 \par
134 {\cf17 typedef} {\cf17 struct }__attribute__((packed)) \{\par
135 \par
136     {\cf17 volatile} uint32_t _ALERT_NC:1;\par
137 \} SIXTH_FRAME ;\par
138 \par
139 \par
145 {\cf17 typedef} {\cf17 struct }__attribute__((packed)) \{\par
146     uint16_t _header; {\cf20 // 2}\par
147     uint8_t  _length; {\cf20 // 1}\par
148     {\cf17 union }\{\par
149      {\cf17 volatile} {\cf18 unsigned} {\cf18 char} FIRST_BYTES;\par
150      FIRST_FRAME FRAMEBits ;\par
151     \}FIRST_FRAME_UN;\par
152 \par
153     {\cf17 union }\{\par
154      {\cf17 volatile} {\cf18 unsigned} {\cf18 char} SECOND_BYTES;\par
155      SECOND_FRAME FRAMEBits ;\par
156     \}SECOND_FRAME_UN;\par
157 \par
158     {\cf17 union }\{\par
159      {\cf17 volatile} {\cf18 unsigned} {\cf18 char} THIRD_BYTES;\par
160      THIRD_FRAME FRAMEBits ;\par
161     \}THIRD_FRAME_UN;\par
162 \par
163     {\cf17 union }\{\par
164      {\cf17 volatile} {\cf18 unsigned} {\cf18 char} FOURTH_BYTES;\par
165      FOURTH_FRAME FRAMEBits ;\par
166     \}FOURTH_FRAME_UN;\par
167 \par
168     {\cf17 union }\{\par
169      {\cf17 volatile} {\cf18 unsigned} {\cf18 char} FIFTH_BYTES;\par
170      FIFTH_FRAME FRAMEBits ;\par
171     \}FIFTH_FRAME_UN;\par
172 \par
173     {\cf17 union }\{\par
174       {\cf17 volatile} {\cf18 unsigned} {\cf18 char} SIXTH_BYTES;\par
175       SIXTH_FRAME FRAMEBits ;\par
176      \}SIXTH_FRAME_UN;\par
177 \par
178 \par
179 \par
180     {\cf17 volatile} uint8_t _CRC8;\par
181 \par
182 \}Device_Alert_Data_Send;\par
183 \par
184 \par
188 {\cf17 typedef} {\cf17 struct  }__attribute__((packed))\par
189 \{\par
190     uint16_t  _header ;\par
191     uint8_t   _length ;\par
192     uint8_t _RANGE_PIP_MIN;\par
193     uint8_t _RANGE_PIP_MAX;\par
194 \par
195     uint16_t _RANGE_VT_MIN;\par
196     uint16_t _RANGE_VT_MAX;\par
197 \par
198     uint8_t _RANGE_RR_MIN;\par
199     uint8_t _RANGE_RR_MAX;\par
200 \par
201     uint8_t _RANGE_MINT_VOL_MIN;\par
202     uint8_t _RANGE_MINT_VOL_MAX;\par
203 \par
204     uint8_t _RANGE_SPO2_MIN;\par
205 \par
206 \par
207     uint8_t _RANGE_PULSE_MIN;\par
208     uint8_t _RANGE_PULSE_MAX;\par
209 \par
210     uint8_t _RANGE_LEAK;\par
211     uint8_t _RANGE_NC1;\par
212     uint8_t _CRC8;\par
213 \} ALERT_RANGE_PACKET;\par
214 \par
218 {\cf17 typedef} {\cf17 struct}\par
219 \{\par
220     uint8_t  _RANGE_PIP_MIN_Val;\par
221     uint8_t  _RANGE_PIP_MAX_Val;\par
222     uint16_t _RANGE_VT_MIN_Val;\par
223     uint16_t _RANGE_VT_MAX_Val;\par
224     uint8_t  _RANGE_RR_MIN_Val;\par
225     uint8_t  _RANGE_RR_MAX_Val;\par
226     uint8_t _RANGE_MINT_VOL_MIN_Val;\par
227     uint8_t _RANGE_MINT_VOL_MAX_Val;\par
228     uint8_t  _RANGE_SPO2_MIN_Val;\par
229     uint8_t  _RANGE_PULSE_MIN_Val;\par
230     uint8_t  _RANGE_PULSE_MAX_Val;\par
231     uint16_t  _RANGE_Leak;\par
232     uint8_t  _RANGE_NC1;\par
233 \par
234 \}ALERT_RANGE;\par
235 \par
239 {\cf17 typedef} {\cf17 struct}\par
240 \{\par
241     uint8_t PIP_Alert_Count;\par
242     uint8_t PEEP_Alert_Count;\par
243     uint8_t Tidal_Volume_Alert_Count;\par
244     uint8_t FIO2_Supply_Alert_Count;\par
245     uint8_t FIO2_Alert_Count;\par
246     uint8_t Leak_Alert_Count;\par
247     uint16_t Patient_Circuit_disconnected_Alert_Count;\par
248     uint16_t Proximal_Flow_Sensor_reversed_Alert_Count;\par
249 \}Alert_count;\par
250 \par
251 \par
255 {\cf17 typedef} {\cf17 enum}\par
256 \{\par
257     NO_ALERT,\par
258     ALERT_HAPPEN\par
259 \}alert_status;\par
260 \par
264 {\cf17 typedef} {\cf17 enum}\par
265 \{\par
266     NO_APNEA_ALERT_HAPPEN,\par
267     APNEA_ALERT_HAPPEN\par
268 \}apnea_alert;\par
269 \par
270 \par
274 {\cf17 typedef} {\cf17 enum}\par
275 \{\par
276     SEND_GRAPH_FRAME,\par
277     SEND_ALERT_FRAME,\par
278     SEND_CALIBRATION_FRAME,\par
279     SEND_SAMPLED_PARAMETER_FRAME,\par
280     SEND_SERVICE_FRAME\par
281 \}send_bluetooth_data_farme;\par
282 \par
286 {\cf17 typedef} {\cf17 enum}\par
287 \{\par
288     CHECK,\par
289     DO_NOT_CHECK\par
290 \par
291 \}PATIENT_CIRCUIT_DISCONNECTED_ALERT_check;\par
292 \par
293 \par
294 \par
295 \par
296 \par
297 \par
298 PATIENT_CIRCUIT_DISCONNECTED_ALERT_check PATIENT_CIRCUIT_DISCONNECTED_ALERT_CHECK,PROXIMAL_SENSOR_REVERSE_ALERT_CHECK;    \par
299 \par
300 \par
301 Device_Alert_Data_Send DEVICE_ALERT_DATA_SEND ;         \par
302 ALERT_RANGE Alert_Range;                                \par
303 Alert_count Alert_Count;                                \par
304 alert_status Alert_Status;                              \par
305 apnea_alert Apnea_Alert;                                \par
306 send_bluetooth_data_farme Send_Bluetooth_Data_Farme;    \par
307 uint8_t Alert_Check;\par
308 \par
309 \par
310 xTaskHandle Alert_Handler;              \par
311 \par
315 {\cf18 void} Alert_Task ({\cf18 void} *argument);\par
316 \par
320 {\cf18 void} Split_Alert_Parameter_Packets(ALERT_RANGE_PACKET *Receive_Graph_Packet);\par
324 {\cf18 void} Check_Alert();\par
325 \par
329 {\cf18 void} SEND_ALERT_PACKET();\par
330 \par
334 {\cf18 void} Pip_Alert(uint8_t);\par
335 \par
339 {\cf18 void} Alert_Inspiration_Time_Parameter();\par
340 \par
344 {\cf18 void} Clear_All_Alert_Bits();\par
345 \par
349 {\cf18 void} UART5_Alert_data_Debug();\par
350 \par
354 {\cf18 void} Peep_Alert(uint8_t);\par
355 \par
359 {\cf18 void} Tidal_Volume_Alert({\cf18 int});\par
360 \par
364 {\cf18 void} Minite_Volume_Alert({\cf18 int});\par
365 \par
369 {\cf18 void} Alert_Flags_Reset();\par
373 {\cf18 void} Respiratory_Rate_Alert();\par
377 {\cf18 void} Alert_Expiration_Time_Parameter();\par
381 {\cf18 void} Oxygen_Supply_Alert(uint8_t,uint8_t);\par
385 {\cf18 void} Oxygen_Blending_Alert(uint8_t,uint8_t);\par
389 {\cf18 void} Patient_Circuit_Disconnected_Alert();\par
393 {\cf18 void} Leak_Alert();\par
397 {\cf18 void} Proximal_Flow_Sensor_Reverse_Direction();\par
401 {\cf18 void} LED_Alert();\par
405 {\cf18 void} AC_Supply_or_Battery_Supply_Indication();\par
409 {\cf18 void} Hide_Alert_1();\par
413 {\cf18 void} Hide_Alert_2();\par
417 {\cf18 void} Read_Battery_Voltage();\par
418 \par
419 {\cf21 #endif }{\cf20 /* INC_ALERT_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
APRV.h\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/APRV/APRV.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/APRV/APRV.h}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20  * APRV.h}\par
3 {\cf20  *}\par
4 {\cf20  *  Created on: Feb 27, 2023}\par
5 {\cf20  *      Author: asus}\par
6 {\cf20  */}\par
7 \par
8 {\cf21 #ifndef INC_AERO_INC_APRV_APRV_H_}\par
9 {\cf21 #define INC_AERO_INC_APRV_APRV_H_}\par
10 \par
11 {\cf21 #include "stdio.h"}\par
12 {\cf21 #include "stm32f4xx_hal.h"}\par
13 {\cf21 #include "main.h"}\par
14 \par
15 \par
16 {\cf17 typedef} {\cf17 struct}\par
17 \{\par
18     uint8_t P_HIGH;\par
19     uint8_t P_LOW;\par
20     uint8_t T_HIGH;\par
21     uint8_t T_LOW;\par
22     uint32_t T_HIGH_VAL;\par
23     uint32_t T_LOW_VAL;\par
24     uint32_t T_LOW_VAL_COUNTER;\par
25     uint32_t T_HIGH_VAL_COUNTER;\par
26     uint8_t  FIO2_VAL;\par
27     uint16_t TRIG_TYPE;\par
28     {\cf18 float}    TRIG_LMT;\par
29     uint16_t TRIG_TIME;\par
30 \}aprv_mode_Parameter;\par
31 \par
32 \par
33 \par
34 {\cf17 typedef} {\cf17 enum}\par
35 \{\par
36     APRV_Idle,\par
37     APRV_INSPIRATION,\par
38     APRV_EXPIRATION\par
39 \par
40 \}aprv_breathe;\par
41 \par
42 \par
43 \par
44 {\cf17 typedef} {\cf17 enum}\par
45 \{\par
46     APRV_IDLE,\par
47     APRV_INS,\par
48     APRV_EXP\par
49 \}aprv_current_breathe;\par
50 \par
51 \par
52 {\cf17 typedef} {\cf17 struct}\par
53 \{\par
54     uint16_t BLOWER_DAC_VAL;\par
55     uint16_t LAST_BLOWER_DAC_VAL;\par
56     uint16_t BLOWER_ENDING_DAC_SIGNAL;\par
57     {\cf18 float}    Blower_Signal_Voltage;\par
58     {\cf18 float}    BLOWER_VOLTAGE_SIGNAL;\par
59 \par
60 \}aprv_mode_blower_control;\par
61 \par
62 \par
63 {\cf17 typedef} {\cf17 struct}\par
64 \{\par
65     uint32_t PIP_Cumulative_Val;\par
66     uint32_t PIP_Event_Count;\par
67     uint8_t  PIP_AVG_VAL;\par
68 \}Aprv_PIP_average;\par
69 \par
70 \par
71 \par
72 {\cf17 typedef} {\cf17 struct}\par
73 \{\par
74     uint32_t PEEP_Cumulative_Val;\par
75     uint32_t PEEP_Event_Count;\par
76     uint8_t  PEEP_AVG_VAL;\par
77 \}Aprv_PEEP_average;\par
78 \par
79 \par
80 \par
81 xTaskHandle APRV_Handler;\par
82 xTaskHandle APRV_ONE_TIME_Handler;\par
83 \par
84 \par
85 aprv_breathe APRV_Next_Breathe;\par
86 aprv_current_breathe APRV_current_breathe;\par
87 aprv_mode_blower_control APRV_mode_blower_control;\par
88 Aprv_PIP_average APRV_PIP_average;\par
89 Aprv_PEEP_average APRV_PEEP_average;\par
90 \par
91 {\cf18 int} Blower_Wait_Time;\par
92 {\cf18 int} APRV_Trigger_Check_Time;\par
93 \par
94 {\cf18 void} APRV_Task({\cf18 void} *argument);\par
95 {\cf18 void} APRV_ONE_TIME_Task({\cf18 void} *argument);\par
96 \par
97 \par
98 \par
99 aprv_mode_Parameter APRV;\par
100 \par
101 {\cf21 #endif }{\cf20 /* INC_AERO_INC_APRV_APRV_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Backup_Pc_cmv.h\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/BACKUP_PC_CMV/Backup_Pc_cmv.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/BACKUP_PC_CMV/Backup_Pc_cmv.h}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20  * Backup_Pc_cmv.h}\par
3 {\cf20  *}\par
4 {\cf20  *  Created on: Feb 21, 2023}\par
5 {\cf20  *      Author: asus}\par
6 {\cf20  */}\par
7 \par
8 {\cf21 #ifndef INC_AERO_INC_BACKUP_PC_CMV_BACKUP_PC_CMV_H_}\par
9 {\cf21 #define INC_AERO_INC_BACKUP_PC_CMV_BACKUP_PC_CMV_H_}\par
10 \par
11 \par
12 \par
13 {\cf21 #include "stdio.h"}\par
14 {\cf21 #include "stm32f4xx_hal.h"}\par
15 {\cf21 #include "main.h"}\par
16 \par
17 \par
18 \par
19 {\cf17 typedef} {\cf17 struct}\par
20 \{\par
21     uint8_t  PIP_Val;\par
22     uint8_t  PEEP_Val;\par
23     uint8_t  RESPIRATORY_RATE_Val;\par
24     uint8_t  FIO2_Val;\par
25     {\cf18 float}    RISE_TIME_MS_Val;\par
26     uint32_t INSPIRATION_TIME;\par
27     uint32_t EXPIRATION_TIME;\par
28     uint8_t  Inspiration_Time_Ratio;\par
29     uint8_t  Expiration_Time_Ratio;\par
30     uint8_t  Rise_Time;\par
31     uint8_t  Rise_Time_percentage;\par
32     uint16_t  TRIG_TIME;\par
33 \}BACKUP_PC_CMV_mode_parameter;\par
34 \par
35 \par
36 xTaskHandle BACKUP_PC_Handler;\par
37 BACKUP_PC_CMV_mode_parameter BACKUP_PC_CMV;\par
38 \par
39 uint8_t Last_Servo_Position;\par
40 \par
41 {\cf18 void} BACKUP_PC_CMV_Task({\cf18 void} *argument);\par
42 {\cf18 void} BACKUP_PC_CMV_Inspiration_Time_Variables_Reset();\par
43 {\cf18 void} BACKUP_PC_CMV_Expiration_Time_Variables_Reset();\par
44 {\cf18 void} START_PSV();\par
45 {\cf18 void} START_BIPAP();\par
46 {\cf18 void} START_CPAP();\par
47 \par
48 {\cf21 #endif }{\cf20 /* INC_AERO_INC_BACKUP_PC_CMV_BACKUP_PC_CMV_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BiPap.h\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/BIPAP/BiPap.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/BIPAP/BiPap.h}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20  * BiPap.h}\par
3 {\cf20  *}\par
4 {\cf20  *  Created on: Feb 24, 2023}\par
5 {\cf20  *      Author: asus}\par
6 {\cf20  */}\par
7 \par
8 {\cf21 #ifndef INC_AERO_INC_BIPAP_BIPAP_H_}\par
9 {\cf21 #define INC_AERO_INC_BIPAP_BIPAP_H_}\par
10 \par
11 {\cf21 #include "stdio.h"}\par
12 {\cf21 #include "stm32f4xx_hal.h"}\par
13 {\cf21 #include "main.h"}\par
14 \par
15 \par
16 {\cf17 typedef} {\cf17 struct}\par
17 \{\par
18     uint16_t  IPAP_Val;\par
19     uint8_t   EPAP_Val;\par
20     uint16_t  TRIG_TYPE;\par
21     {\cf18 float}    TRIG_LMT;\par
22     uint16_t  TRIG_TIME;\par
23     uint16_t  CALC_TRIG_VAL;\par
24     uint16_t  TOLERANCE_EWAVE;\par
25     uint16_t  TRIG_WINDOW;\par
26     uint16_t  APNEA_TIME;\par
27     uint8_t   _IPAP_TIME;\par
28     uint8_t   _EPAP_TIME;\par
29     {\cf18 int}       APNEA_COUNTER;\par
30     {\cf18 int}       IPAP_TIME;\par
31     {\cf18 int}       EPAP_TIME;\par
32     uint8_t   RESPIRATORY_RATE_Val;\par
33     {\cf18 int}       IPAP_COUNTER;\par
34     {\cf18 int}       EPAP_COUNTER;\par
35     uint8_t   VENT_TYPE;\par
36     {\cf18 int}       BIPAP_O2_Val;\par
37 \par
38 \}bipap_mode_Parameter;\par
39 \par
40 \par
41 \par
42 {\cf17 typedef} {\cf17 struct}\par
43 \{\par
44     uint16_t BLOWER_DAC_VAL;\par
45     uint16_t LAST_BLOWER_DAC_VAL;\par
46     uint16_t BLOWER_ENDING_DAC_SIGNAL;\par
47     uint16_t EPAP_BLOWER_DAC_VAL;\par
48     uint16_t LAST_EPAP_BLOWER_DAC_VAL;\par
49     {\cf18 float}    Blower_Signal_Voltage;\par
50     {\cf18 float}    BLOWER_VOLTAGE_SIGNAL;\par
51 \par
52 \}bipap_mode_blower_control;\par
53 \par
54 \par
55 {\cf17 typedef} {\cf17 struct}\par
56 \{\par
57     {\cf18 int} BIPAP_EPAP_Settle_Time;\par
58     {\cf18 int} Blower_Wait_Time_Milli_Second;\par
59     {\cf18 int} Trigger_Check_Wait_Time;\par
60     {\cf18 int} _INSPIRATION_TIME;\par
61 \}bipap_Flags;\par
62 \par
63 \par
64 {\cf17 typedef} {\cf17 struct}\par
65 \{\par
66     uint32_t EPAP_Cumulative_Val;\par
67     uint32_t EPAP_Event_Count;\par
68     uint8_t  EPAP_AVG_VAL;\par
69      uint32_t BIPAP_O2_Event_Count;\par
70 \}bipap_peep_average;\par
71 \par
72 {\cf17 typedef} {\cf17 struct}\par
73 \{\par
74     uint8_t  Maximum_IPAP_Acheived;\par
75     uint32_t IPAP_Cumulative_Val;\par
76     uint32_t IPAP_Event_Count;\par
77     uint8_t  IPAP_AVG_VAL;\par
78 \par
79 \}bipap_pip_average;\par
80 \par
81 \par
82 xTaskHandle BIPAP_Handler;\par
83 xTaskHandle BIPAP_PID_Handler;\par
84 \par
85 bipap_mode_Parameter BIPAP;\par
86 bipap_Flags BIPAP_Control;\par
87 bipap_mode_blower_control BIPAP_Mode_Blower_control;\par
88 bipap_peep_average BIPAP_Peep_Average;\par
89 bipap_pip_average BIPAP_Pip_average;\par
90 \par
91 \par
92 uint8_t STOP_MODE;\par
93 uint8_t STOP_MODE_CONFIRMED;\par
94 uint8_t O2_Control_Bipap;\par
95 \par
96 {\cf18 double} BIPAP_Flow,BIPAP_Flow_Cummulative_val;\par
97 {\cf18 int} BIPAP_Flow_Sensor_Count;\par
98 uint16_t BIPAP_O2_Flow_Rate_Required;\par
99 {\cf18 int} BIPAP_Max_Flow;\par
100 \par
101 {\cf18 void} BIPAP_Task({\cf18 void} *argument);\par
102 {\cf18 void} BIPAP_PID_Task({\cf18 void} *argument);\par
103 {\cf18 void} INSPIRATION_PROCESS_BIPAP();\par
104 \par
105 \par
106 {\cf21 #endif }{\cf20 /* INC_AERO_INC_BIPAP_BIPAP_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/Bluetooth/Bluetooth_Data_Split.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/Bluetooth/Bluetooth_Data_Split.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/Bluetooth/Bluetooth_Data_Split.h}
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of split Blue-tooth data. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "stdio.h"}\par
{\f2 #include "stm32f4xx_hal.h"}\par
{\f2 #include "main.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Modes} \{ {\b Idle} =0
, {\b Pccmv} =1
, {\b Vccmv} =2
, {\b Aprv} =4
, {\b Pcsimv} =5
, {\b Vcsimv} =6
, {\b Psv} =7
, {\b Spont} =10
, {\b Cpap} =11
, {\b BiPap} =12
, {\b Hfnc} =13
, {\b Suction} =15
, {\b Backup_Pccmv} =21
 \}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration for modes in number format for identification. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Backup_Modes} \{ {\b No_Backup_Mode}
, {\b Backup_PCCMV_Mode}
 \}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration for Backup mode. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Next_half_Breath_Cycle} \{ {\b Generate_Inspiration_Cycle} = 0
, {\b Generate_Expiration_Cycle}
, {\b NoWaveFormState}
 \}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration to run a next Phase of breathcycle. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Run_current_Breathe_State} \{ {\b No_Run_State} =0
, {\b Run_Inspiration_Cycle}
, {\b Run_Expiration_Cycle}
 \}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration to check current Phase of breathcycle. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b chksum8_2} (const unsigned char *buff, size_t len){\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
chksum8. This function is used to identify a data error. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Modes} {\b Mode}{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Modes} {\b Running_Mode}{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
enumeration variable for Modes. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Backup_Modes} {\b Current_Backup_Mode}{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
enumeration variable for Backup_Modes. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Next_half_Breath_Cycle} {\b Next_Half_Breath_Cycle}{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
enumeration variable for Next_half_Breath_Cycle. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Run_current_Breathe_State} {\b Run_Current_Breathe_State}{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
enumeration variable for Run_current_Breathe_State. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of split Blue-tooth data. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sarath Kumar \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
27/03/24 \par
}}This file contains the implementation split Blue-tooth data. and pause and resume a device. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v Backup_Modes\:Bluetooth_Data_Split.h}
{\xe \v Bluetooth_Data_Split.h\:Backup_Modes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Backup_Modes}}}
\par
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration for Backup mode. }}\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v No_Backup_Mode\:Bluetooth_Data_Split.h}
{\xe \v Bluetooth_Data_Split.h\:No_Backup_Mode}
{\qr No_Backup_Mode{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
NO BACKUP PCCMV mode. \par
}\cell }{\row }
{\xe \v Backup_PCCMV_Mode\:Bluetooth_Data_Split.h}
{\xe \v Bluetooth_Data_Split.h\:Backup_PCCMV_Mode}
{\qr Backup_PCCMV_Mode{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BACKUP PCCMV mode. \par
}\cell }{\row }
}
}
{\xe \v Modes\:Bluetooth_Data_Split.h}
{\xe \v Bluetooth_Data_Split.h\:Modes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Modes}}}
\par
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration for modes in number format for identification. }}\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v Idle\:Bluetooth_Data_Split.h}
{\xe \v Bluetooth_Data_Split.h\:Idle}
{\qr Idle{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Idle. \par
}\cell }{\row }
{\xe \v Pccmv\:Bluetooth_Data_Split.h}
{\xe \v Bluetooth_Data_Split.h\:Pccmv}
{\qr Pccmv{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC CMV mode. \par
}\cell }{\row }
{\xe \v Vccmv\:Bluetooth_Data_Split.h}
{\xe \v Bluetooth_Data_Split.h\:Vccmv}
{\qr Vccmv{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC CMV mode. \par
}\cell }{\row }
{\xe \v Aprv\:Bluetooth_Data_Split.h}
{\xe \v Bluetooth_Data_Split.h\:Aprv}
{\qr Aprv{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
APRV mode. \par
}\cell }{\row }
{\xe \v Pcsimv\:Bluetooth_Data_Split.h}
{\xe \v Bluetooth_Data_Split.h\:Pcsimv}
{\qr Pcsimv{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC SIMV mode. \par
}\cell }{\row }
{\xe \v Vcsimv\:Bluetooth_Data_Split.h}
{\xe \v Bluetooth_Data_Split.h\:Vcsimv}
{\qr Vcsimv{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC SIMV mode. \par
}\cell }{\row }
{\xe \v Psv\:Bluetooth_Data_Split.h}
{\xe \v Bluetooth_Data_Split.h\:Psv}
{\qr Psv{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PSV mode. \par
}\cell }{\row }
{\xe \v Spont\:Bluetooth_Data_Split.h}
{\xe \v Bluetooth_Data_Split.h\:Spont}
{\qr Spont{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SPONTANEOUS mode. \par
}\cell }{\row }
{\xe \v Cpap\:Bluetooth_Data_Split.h}
{\xe \v Bluetooth_Data_Split.h\:Cpap}
{\qr Cpap{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CPAP mode. \par
}\cell }{\row }
{\xe \v BiPap\:Bluetooth_Data_Split.h}
{\xe \v Bluetooth_Data_Split.h\:BiPap}
{\qr BiPap{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BIPAP mode. \par
}\cell }{\row }
{\xe \v Hfnc\:Bluetooth_Data_Split.h}
{\xe \v Bluetooth_Data_Split.h\:Hfnc}
{\qr Hfnc{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HFNC mode. \par
}\cell }{\row }
{\xe \v Suction\:Bluetooth_Data_Split.h}
{\xe \v Bluetooth_Data_Split.h\:Suction}
{\qr Suction{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SUCTION mode. \par
}\cell }{\row }
{\xe \v Backup_Pccmv\:Bluetooth_Data_Split.h}
{\xe \v Bluetooth_Data_Split.h\:Backup_Pccmv}
{\qr Backup_Pccmv{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BACKUP PCCMV mode. \par
}\cell }{\row }
}
}
{\xe \v Next_half_Breath_Cycle\:Bluetooth_Data_Split.h}
{\xe \v Bluetooth_Data_Split.h\:Next_half_Breath_Cycle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Next_half_Breath_Cycle}}}
\par
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration to run a next Phase of breathcycle. }}\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v Generate_Inspiration_Cycle\:Bluetooth_Data_Split.h}
{\xe \v Bluetooth_Data_Split.h\:Generate_Inspiration_Cycle}
{\qr Generate_Inspiration_Cycle{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
inspiration phase \par
}\cell }{\row }
{\xe \v Generate_Expiration_Cycle\:Bluetooth_Data_Split.h}
{\xe \v Bluetooth_Data_Split.h\:Generate_Expiration_Cycle}
{\qr Generate_Expiration_Cycle{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
expiration phase \par
}\cell }{\row }
{\xe \v NoWaveFormState\:Bluetooth_Data_Split.h}
{\xe \v Bluetooth_Data_Split.h\:NoWaveFormState}
{\qr NoWaveFormState{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
idle phase \par
}\cell }{\row }
}
}
{\xe \v Run_current_Breathe_State\:Bluetooth_Data_Split.h}
{\xe \v Bluetooth_Data_Split.h\:Run_current_Breathe_State}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Run_current_Breathe_State}}}
\par
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration to check current Phase of breathcycle. }}\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v No_Run_State\:Bluetooth_Data_Split.h}
{\xe \v Bluetooth_Data_Split.h\:No_Run_State}
{\qr No_Run_State{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
idle phase \par
}\cell }{\row }
{\xe \v Run_Inspiration_Cycle\:Bluetooth_Data_Split.h}
{\xe \v Bluetooth_Data_Split.h\:Run_Inspiration_Cycle}
{\qr Run_Inspiration_Cycle{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
inspiration phase \par
}\cell }{\row }
{\xe \v Run_Expiration_Cycle\:Bluetooth_Data_Split.h}
{\xe \v Bluetooth_Data_Split.h\:Run_Expiration_Cycle}
{\qr Run_Expiration_Cycle{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
expiration phase \par
}\cell }{\row }
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Bluetooth_Data_Split.h\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/Bluetooth/Bluetooth_Data_Split.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/Bluetooth/Bluetooth_Data_Split.h}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
13 {\cf21 #ifndef INC_BLUETOOTH_DATA_SPLIT_H_}\par
14 {\cf21 #define INC_BLUETOOTH_DATA_SPLIT_H_}\par
15 \par
16 {\cf21 #include "stdio.h"}\par
17 {\cf21 #include "stm32f4xx_hal.h"}\par
18 {\cf21 #include "main.h"}\par
19 \par
24 {\cf17 typedef} {\cf17 enum}\par
25 \{\par
26     Idle=0,                \par
27     Pccmv=1,               \par
28     Vccmv=2,               \par
29     Aprv=4,                \par
30     Pcsimv=5,              \par
31     Vcsimv=6,              \par
32     Psv=7,                 \par
33     Spont=10,              \par
34     Cpap=11,               \par
35     BiPap=12,              \par
36     Hfnc=13,               \par
37     Suction=15,            \par
38     Backup_Pccmv=21,       \par
39 \}Modes;\par
40 \par
41 \par
45 {\cf17 typedef} {\cf17 enum}\par
46 \{\par
47     No_Backup_Mode,       \par
48     Backup_PCCMV_Mode,    \par
49 \}Backup_Modes;\par
50 \par
51 \par
55 {\cf17 typedef} {\cf17 enum}\par
56 \{\par
57     Generate_Inspiration_Cycle = 0,     \par
58     Generate_Expiration_Cycle,          \par
59     NoWaveFormState                     \par
60 \}Next_half_Breath_Cycle;\par
61 \par
62 \par
66 {\cf17 typedef} {\cf17 enum}\par
67 \{\par
68     No_Run_State=0,                \par
69     Run_Inspiration_Cycle,         \par
70     Run_Expiration_Cycle           \par
71 \}Run_current_Breathe_State;\par
72 \par
73 \par
74 Modes Mode,Running_Mode;                              \par
75 Backup_Modes Current_Backup_Mode;                     \par
76 Next_half_Breath_Cycle Next_Half_Breath_Cycle;        \par
77 Run_current_Breathe_State Run_Current_Breathe_State;  \par
78 \par
83 uint8_t chksum8_2({\cf17 const} {\cf18 unsigned} {\cf18 char} *buff, {\cf18 size_t} len);\par
84 \par
85 \par
86 \par
87 \par
88 {\cf21 #endif }{\cf20 /* INC_BLUETOOTH_DATA_SPLIT_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/Bluetooth/Bluetooth_Graph.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/Bluetooth/Bluetooth_Graph.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/Bluetooth/Bluetooth_Graph.h}
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of Blue-tooth data reception and transmission. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "stdio.h"}\par
{\f2 #include "stm32f4xx_hal.h"}\par
{\f2 #include "main.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b GRAPH_PACKET_SEND}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure Representing Graph values for modes. data send to bluetooth. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b RECEIVE_GRAPH_PACKET}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure Representing Mode parameter values for modes. data receive from tab. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Bluetooth_parameter}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure Representing uart data reception buffer. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Bluetooth_T} \{ {\b BlueTooth_Wait_Time} = 0
, {\b Bluetooth_Init}
, {\b Bluetooth_Send_Data}
 \}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration for wait time for uart initialization. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Bluetooth_Status_T} \{ {\b BlueTooth_Status_Wait_Time} = 0
, {\b Bluetooth_Status_Init}
, {\b Bluetooth_Status_Send_Data}
 \}{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration didn't used in the code. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Send_Graph_header} \{ {\b Send_BlueTooth_Graph_Header} = 0x4C2A
, {\b Send_BlueTooth_Alert_Header} = 0x4D2A
, {\b Send_BlueTooth_Sampled_Parameter_Header} = 0x532A
, {\b Send_BlueTooth_Calibration_Header} = 0x542B
, {\b Send_BlueTooth_Service_Header} = 0x532C
 \}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration Transmitting graph header. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Receive_Graph_header} \{ {\b Receive_BlueTooth_Graph_Header} = 0x4D2B
, {\b Receive_BlueTooth_Alert_Header} = 0x412B
, {\b Receive_Nebuliser_Header} = 0x462B
, {\b Receive_Calibration_Header} = 0x542C
, {\b Receive_Service_Header} = 0x532C
 \}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration Reception graph header. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Bluetooth_Task} (void *argument)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bluetooth task. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b chksum8} (const unsigned char *buff, size_t len)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
check sum function. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b UART6_Init} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UART6 initialization. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b UART5_Init} (){\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UART5 initialization. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Bluetooth_Graph_Data_Send} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bluetooth_Graph_Data_Send. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Bluetooth_Data_Send} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
whole Bluetooth_Data_Send. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b BlueTooth_Receiver_Task} (void *argument)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Receive bluetooth data task. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Bluetooth_Packet_Data_Split} ({\b RECEIVE_GRAPH_PACKET} *Receive_Graph_Packet){\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
split bluetooth received data function. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Bluetooth_data_split_Task} (void *argument)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
split bluetooth received data task. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Pc_Cmv_Mode_Packet_Data} ({\b RECEIVE_GRAPH_PACKET} *Receive_Graph_Packet)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
split PC-CMV buffer from bluetooth received data . }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Vc_Cmv_Mode_Packet_Data} ({\b RECEIVE_GRAPH_PACKET} *Receive_Graph_Packet)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
split VC-CMV buffer from bluetooth received data . }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Pc_Simv_Mode_Packet_Data} ({\b RECEIVE_GRAPH_PACKET} *Receive_Graph_Packet)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
split PC-SIMV buffer from bluetooth received data . }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Vc_Simv_Mode_Packet_Data} ({\b RECEIVE_GRAPH_PACKET} *Receive_Graph_Packet)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
split VC-SIMV buffer from bluetooth received data . }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b PSV_Mode_Packet_Data} ({\b RECEIVE_GRAPH_PACKET} *Receive_Graph_Packet){\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
split psv buffer from bluetooth received data . }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b CPAP_Mode_Packet_Data} ({\b RECEIVE_GRAPH_PACKET} *Receive_Graph_Packet){\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
split CPAP buffer from bluetooth received data . }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b BIPAP_Mode_Packet_Data} ({\b RECEIVE_GRAPH_PACKET} *Receive_Graph_Packet){\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
split BIPAP buffer from bluetooth received data . }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b APRV_Mode_Packet_Data} ({\b RECEIVE_GRAPH_PACKET} *Receive_Graph_Packet){\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
split APRV buffer from bluetooth received data . }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Backup_Pc_Cmv_Mode_Packet_Data} ({\b RECEIVE_GRAPH_PACKET} *Receive_Graph_Packet){\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
split BACKUP PC-CMV buffer from bluetooth received data . }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Backup_Vc_Cmv_Mode_Packet_Data} ({\b RECEIVE_GRAPH_PACKET} *Receive_Graph_Packet){\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DIDN'T USED . }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b HFNC_Packet_Data} ({\b RECEIVE_GRAPH_PACKET} *Receive_Graph_Packet)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
split HFNC buffer from bluetooth received data . }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b SUCTION_Packet_Data} (){\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
split SUCTION buffer from bluetooth received data . }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b UART5_GRAPH_DATA_DEBUG} (){\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
used for debugging purpose . }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b USB_GRAPH_DATA_DEBUG} (){\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
used for debugging purpose . }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

xQueueHandle {\b Bluetooth_Receive}{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
reception of Bluetooth in queue. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b GRAPH_PACKET_SEND} {\b Graph_Data}{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
structure variable for send graph data. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Bluetooth_parameter} {\b Bluetooth_Parameter}{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
structure variable for {\b Bluetooth_parameter}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Bluetooth_T} {\b Bluetooth}{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
enumeration variable. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Bluetooth_Status_T} {\b Bluetooth_Status}{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
enumeration variable. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Send_Graph_header} {\b Send_Graph_Header}{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
enumeration variable. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Receive_Graph_header} {\b Receive_Graph_Header}{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
enumeration variable. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

xTaskHandle {\b Bluetooth_data_Split_Handler}{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Task handle variable. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

xTaskHandle {\b Bluetooth_Handler}{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Task handle variable. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

xTaskHandle {\b Bluetooth_Receiver_Handler}{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Task handle variable. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of Blue-tooth data reception and transmission. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sarath Kumar \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
27/03/24 \par
}}This file contains the Declaration of Blue-tooth data reception and transmission. including the initialization \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v Bluetooth_T\:Bluetooth_Graph.h}
{\xe \v Bluetooth_Graph.h\:Bluetooth_T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Bluetooth_T}}}
\par
{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration for wait time for uart initialization. }}\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v BlueTooth_Wait_Time\:Bluetooth_Graph.h}
{\xe \v Bluetooth_Graph.h\:BlueTooth_Wait_Time}
{\qr BlueTooth_Wait_Time{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
step1. \par
}\cell }{\row }
{\xe \v Bluetooth_Init\:Bluetooth_Graph.h}
{\xe \v Bluetooth_Graph.h\:Bluetooth_Init}
{\qr Bluetooth_Init{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
step2. \par
}\cell }{\row }
{\xe \v Bluetooth_Send_Data\:Bluetooth_Graph.h}
{\xe \v Bluetooth_Graph.h\:Bluetooth_Send_Data}
{\qr Bluetooth_Send_Data{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
step3. \par
}\cell }{\row }
}
}
{\xe \v Receive_Graph_header\:Bluetooth_Graph.h}
{\xe \v Bluetooth_Graph.h\:Receive_Graph_header}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Receive_Graph_header}}}
\par
{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration Reception graph header. }}\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v Receive_BlueTooth_Graph_Header\:Bluetooth_Graph.h}
{\xe \v Bluetooth_Graph.h\:Receive_BlueTooth_Graph_Header}
{\qr Receive_BlueTooth_Graph_Header{\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
for mode graph header. \par
}\cell }{\row }
{\xe \v Receive_BlueTooth_Alert_Header\:Bluetooth_Graph.h}
{\xe \v Bluetooth_Graph.h\:Receive_BlueTooth_Alert_Header}
{\qr Receive_BlueTooth_Alert_Header{\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
for alert header. \par
}\cell }{\row }
{\xe \v Receive_Nebuliser_Header\:Bluetooth_Graph.h}
{\xe \v Bluetooth_Graph.h\:Receive_Nebuliser_Header}
{\qr Receive_Nebuliser_Header{\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
nebuliser header. \par
}\cell }{\row }
{\xe \v Receive_Calibration_Header\:Bluetooth_Graph.h}
{\xe \v Bluetooth_Graph.h\:Receive_Calibration_Header}
{\qr Receive_Calibration_Header{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
calibration frame header. \par
}\cell }{\row }
{\xe \v Receive_Service_Header\:Bluetooth_Graph.h}
{\xe \v Bluetooth_Graph.h\:Receive_Service_Header}
{\qr Receive_Service_Header{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
service frame header. \par
}\cell }{\row }
}
}
{\xe \v Send_Graph_header\:Bluetooth_Graph.h}
{\xe \v Bluetooth_Graph.h\:Send_Graph_header}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Send_Graph_header}}}
\par
{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration Transmitting graph header. }}\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v Send_BlueTooth_Graph_Header\:Bluetooth_Graph.h}
{\xe \v Bluetooth_Graph.h\:Send_BlueTooth_Graph_Header}
{\qr Send_BlueTooth_Graph_Header{\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
for mode graph header. \par
}\cell }{\row }
{\xe \v Send_BlueTooth_Alert_Header\:Bluetooth_Graph.h}
{\xe \v Bluetooth_Graph.h\:Send_BlueTooth_Alert_Header}
{\qr Send_BlueTooth_Alert_Header{\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
for alert header. \par
}\cell }{\row }
{\xe \v Send_BlueTooth_Sampled_Parameter_Header\:Bluetooth_Graph.h}
{\xe \v Bluetooth_Graph.h\:Send_BlueTooth_Sampled_Parameter_Header}
{\qr Send_BlueTooth_Sampled_Parameter_Header{\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
sampled parameter header. \par
}\cell }{\row }
{\xe \v Send_BlueTooth_Calibration_Header\:Bluetooth_Graph.h}
{\xe \v Bluetooth_Graph.h\:Send_BlueTooth_Calibration_Header}
{\qr Send_BlueTooth_Calibration_Header{\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
calibration frame header. \par
}\cell }{\row }
{\xe \v Send_BlueTooth_Service_Header\:Bluetooth_Graph.h}
{\xe \v Bluetooth_Graph.h\:Send_BlueTooth_Service_Header}
{\qr Send_BlueTooth_Service_Header{\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
service frame header. \par
}\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v Bluetooth_Data_Send\:Bluetooth_Graph.h}
{\xe \v Bluetooth_Graph.h\:Bluetooth_Data_Send}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Bluetooth_Data_Send ()}}
\par
{\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
whole Bluetooth_Data_Send. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
whole Bluetooth_Data_Send.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None.} \cell }{\cell }
{\row }
}
}}
{\xe \v Bluetooth_data_split_Task\:Bluetooth_Graph.h}
{\xe \v Bluetooth_Graph.h\:Bluetooth_data_split_Task}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Bluetooth_data_split_Task (void *  {\i argument})}}
\par
{\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
split bluetooth received data task. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
split bluetooth received data task.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Postcondition\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
it split the data after the function call. \par
}}}}
{\xe \v Bluetooth_Graph_Data_Send\:Bluetooth_Graph.h}
{\xe \v Bluetooth_Graph.h\:Bluetooth_Graph_Data_Send}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Bluetooth_Graph_Data_Send ()}}
\par
{\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bluetooth_Graph_Data_Send. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bluetooth_Graph_Data_Send.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None.} \cell }{\cell }
{\row }
}
}}
{\xe \v BlueTooth_Receiver_Task\:Bluetooth_Graph.h}
{\xe \v Bluetooth_Graph.h\:BlueTooth_Receiver_Task}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BlueTooth_Receiver_Task (void *  {\i argument})}}
\par
{\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Receive bluetooth data task. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Receive bluetooth data task.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Postcondition\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
this function resume the Bluetooth_data_split_Task. \par
}}}}
{\xe \v Bluetooth_Task\:Bluetooth_Graph.h}
{\xe \v Bluetooth_Graph.h\:Bluetooth_Task}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Bluetooth_Task (void *  {\i argument})}}
\par
{\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bluetooth task. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bluetooth task.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None.} \cell }{\cell }
{\row }
}
}}
{\xe \v chksum8\:Bluetooth_Graph.h}
{\xe \v Bluetooth_Graph.h\:chksum8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t chksum8 (const unsigned char *  {\i buff}, size_t  {\i len})}}
\par
{\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
check sum function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
check sum function. \par
}}
{\xe \v HFNC_Packet_Data\:Bluetooth_Graph.h}
{\xe \v Bluetooth_Graph.h\:HFNC_Packet_Data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HFNC_Packet_Data ({\b RECEIVE_GRAPH_PACKET} *  {\i Receive_Graph_Packet})}}
\par
{\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
split HFNC buffer from bluetooth received data . }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
split HFNC buffer from bluetooth received data .\par
This function Split HFNC MODE Data from Blue-tooth. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i {\b RECEIVE_GRAPH_PACKET}} \cell }{data from blue-tooth. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Postcondition\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
HFNC mode data is Separated. \par
}}}}
{\xe \v Pc_Cmv_Mode_Packet_Data\:Bluetooth_Graph.h}
{\xe \v Bluetooth_Graph.h\:Pc_Cmv_Mode_Packet_Data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Pc_Cmv_Mode_Packet_Data ({\b RECEIVE_GRAPH_PACKET} *  {\i Receive_Graph_Packet})}}
\par
{\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
split PC-CMV buffer from bluetooth received data . }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
split PC-CMV buffer from bluetooth received data .\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i {\b RECEIVE_GRAPH_PACKET}} \cell }{structure pointer. \cell }
{\row }
}
}}
{\xe \v Pc_Simv_Mode_Packet_Data\:Bluetooth_Graph.h}
{\xe \v Bluetooth_Graph.h\:Pc_Simv_Mode_Packet_Data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Pc_Simv_Mode_Packet_Data ({\b RECEIVE_GRAPH_PACKET} *  {\i Receive_Graph_Packet})}}
\par
{\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
split PC-SIMV buffer from bluetooth received data . }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
split PC-SIMV buffer from bluetooth received data .\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i {\b RECEIVE_GRAPH_PACKET}} \cell }{structure pointer. \cell }
{\row }
}
}}
{\xe \v UART6_Init\:Bluetooth_Graph.h}
{\xe \v Bluetooth_Graph.h\:UART6_Init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void UART6_Init ()}}
\par
{\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UART6 initialization. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UART6 initialization.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None.} \cell }{\cell }
{\row }
}
}}
{\xe \v Vc_Cmv_Mode_Packet_Data\:Bluetooth_Graph.h}
{\xe \v Bluetooth_Graph.h\:Vc_Cmv_Mode_Packet_Data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Vc_Cmv_Mode_Packet_Data ({\b RECEIVE_GRAPH_PACKET} *  {\i Receive_Graph_Packet})}}
\par
{\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
split VC-CMV buffer from bluetooth received data . }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
split VC-CMV buffer from bluetooth received data .\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i {\b RECEIVE_GRAPH_PACKET}} \cell }{structure pointer. \cell }
{\row }
}
}}
{\xe \v Vc_Simv_Mode_Packet_Data\:Bluetooth_Graph.h}
{\xe \v Bluetooth_Graph.h\:Vc_Simv_Mode_Packet_Data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Vc_Simv_Mode_Packet_Data ({\b RECEIVE_GRAPH_PACKET} *  {\i Receive_Graph_Packet})}}
\par
{\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
split VC-SIMV buffer from bluetooth received data . }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
split VC-SIMV buffer from bluetooth received data .\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i {\b RECEIVE_GRAPH_PACKET}} \cell }{structure pointer. \cell }
{\row }
}
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Bluetooth_Graph.h\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/Bluetooth/Bluetooth_Graph.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/Bluetooth/Bluetooth_Graph.h}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
13 {\cf21 #ifndef INC_BLUETOOTH_GRAPH_H_}\par
14 {\cf21 #define INC_BLUETOOTH_GRAPH_H_}\par
15 \par
16 {\cf21 #include "stdio.h"}\par
17 {\cf21 #include "stm32f4xx_hal.h"}\par
18 {\cf21 #include "main.h"}\par
19 \par
20 \par
21 \par
22 \par
28 {\cf17 typedef} {\cf17 struct}\par
29 \{\par
30     uint16_t _header ;             \par
31     uint8_t  _length ;             \par
32     uint8_t  _Pressure_Val;        \par
33     int16_t  _Flow_Val;            \par
34     int16_t  _Volume_Val;          \par
35     uint8_t  _Status;              \par
36     uint8_t  _CRC8;                \par
37 \}GRAPH_PACKET_SEND ;\par
38 \par
44 {\cf17 typedef} {\cf17 struct}\par
45 \{\par
46     uint16_t header;                      \par
47     uint8_t  length;                      \par
48     uint8_t  Control_Byte;                \par
49     uint8_t  PIP_PS_Phigh;                \par
50     uint8_t  PEEP_CPAP_Plow;              \par
51     uint16_t VTI_VS;                      \par
52     uint8_t  FiO2;                        \par
53     uint8_t  RR;                          \par
54     uint8_t  T_high;                      \par
55     uint8_t  T_low;                       \par
56     uint8_t  Rise_Time;                   \par
57     uint8_t  Flow_Limit_FiO2_Flow_Limit;  \par
58     uint8_t  Apnea_Time;                  \par
59     uint8_t  Trigger_Time;                \par
60     uint8_t  Trigger_Limit;               \par
61     uint8_t  Vent_Type_Min_O2;            \par
62     uint8_t  Max_O2;                      \par
63     uint8_t  CRC8;                        \par
64 \}RECEIVE_GRAPH_PACKET ;\par
65 \par
66 \par
71 {\cf17 typedef} {\cf17 enum}\par
72 \{\par
73     BlueTooth_Wait_Time = 0,              \par
74     Bluetooth_Init ,                      \par
75     Bluetooth_Send_Data                   \par
76 \}Bluetooth_T;\par
77 \par
78 \par
83 {\cf17 typedef} {\cf17 enum}\par
84 \{\par
85     BlueTooth_Status_Wait_Time = 0,\par
86     Bluetooth_Status_Init,\par
87     Bluetooth_Status_Send_Data,\par
88 \par
89 \}Bluetooth_Status_T;\par
90 \par
91 \par
97 {\cf17 typedef} {\cf17 enum}\par
98 \{\par
99     Send_BlueTooth_Graph_Header             = 0x4C2A,       \par
100     Send_BlueTooth_Alert_Header             = 0x4D2A,       \par
101     Send_BlueTooth_Sampled_Parameter_Header = 0x532A,       \par
102     Send_BlueTooth_Calibration_Header       = 0x542B,       \par
103     Send_BlueTooth_Service_Header           = 0x532C        \par
104 \par
105 \}Send_Graph_header;\par
106 \par
110 {\cf17 typedef} {\cf17 enum}\par
111 \{\par
112     Receive_BlueTooth_Graph_Header = 0x4D2B,          \par
113     Receive_BlueTooth_Alert_Header = 0x412B,          \par
114     Receive_Nebuliser_Header       = 0x462B,          \par
115     Receive_Calibration_Header     = 0x542C,          \par
116     Receive_Service_Header         = 0x532C           \par
117 \}Receive_Graph_header;\par
118 \par
119 \par
120 \par
125 {\cf17 typedef} {\cf17 struct}\par
126 \{\par
127     uint16_t Bluetooth_Transmit_Delay;    \par
128     uint8_t Bluetooth_RX_BUF[20];         \par
129     uint8_t UART_RX_BUF_CURR[20];         \par
130 \}Bluetooth_parameter;\par
131 \par
132 \par
133 xQueueHandle Bluetooth_Receive;          \par
134 \par
135 \par
136 GRAPH_PACKET_SEND Graph_Data;           \par
137 \par
138 Bluetooth_parameter Bluetooth_Parameter;   \par
139 \par
140 Bluetooth_T Bluetooth;                     \par
141 Bluetooth_Status_T Bluetooth_Status;       \par
142 Send_Graph_header Send_Graph_Header;       \par
143 Receive_Graph_header Receive_Graph_Header; \par
144 \par
145 \par
146 xTaskHandle Bluetooth_data_Split_Handler;   \par
147 xTaskHandle Bluetooth_Handler;              \par
148 xTaskHandle Bluetooth_Receiver_Handler;     \par
149 \par
150 \par
154 {\cf18 void} Bluetooth_Task({\cf18 void} *argument);\par
155 \par
159 uint8_t chksum8({\cf17 const} {\cf18 unsigned} {\cf18 char} *buff, {\cf18 size_t} len);\par
160 \par
164 {\cf18 void} UART6_Init();\par
165 \par
169 {\cf18 void} UART5_Init();\par
170 \par
174 {\cf18 void} Bluetooth_Graph_Data_Send();\par
175 \par
179 {\cf18 void} Bluetooth_Data_Send();\par
180 \par
184 {\cf18 void} BlueTooth_Receiver_Task({\cf18 void} *argument);\par
185 \par
186 \par
191 {\cf18 void} Bluetooth_Packet_Data_Split(RECEIVE_GRAPH_PACKET *Receive_Graph_Packet);\par
192 \par
198 {\cf18 void} Bluetooth_data_split_Task ({\cf18 void} *argument);\par
199 \par
200 \par
204 {\cf18 void} Pc_Cmv_Mode_Packet_Data(RECEIVE_GRAPH_PACKET *Receive_Graph_Packet);\par
205 \par
206 \par
210 {\cf18 void} Vc_Cmv_Mode_Packet_Data(RECEIVE_GRAPH_PACKET *Receive_Graph_Packet);\par
211 \par
212 \par
216 {\cf18 void} Pc_Simv_Mode_Packet_Data(RECEIVE_GRAPH_PACKET *Receive_Graph_Packet);\par
217 \par
218 \par
222 {\cf18 void} Vc_Simv_Mode_Packet_Data(RECEIVE_GRAPH_PACKET *Receive_Graph_Packet);\par
223 \par
227 {\cf18 void} PSV_Mode_Packet_Data(RECEIVE_GRAPH_PACKET *Receive_Graph_Packet);\par
228 \par
232 {\cf18 void} CPAP_Mode_Packet_Data(RECEIVE_GRAPH_PACKET *Receive_Graph_Packet);\par
233 \par
237 {\cf18 void} BIPAP_Mode_Packet_Data(RECEIVE_GRAPH_PACKET *Receive_Graph_Packet);\par
238 \par
242 {\cf18 void} APRV_Mode_Packet_Data(RECEIVE_GRAPH_PACKET *Receive_Graph_Packet);\par
246 {\cf18 void} Backup_Pc_Cmv_Mode_Packet_Data(RECEIVE_GRAPH_PACKET *Receive_Graph_Packet);\par
250 {\cf18 void} Backup_Vc_Cmv_Mode_Packet_Data(RECEIVE_GRAPH_PACKET *Receive_Graph_Packet);\par
251 \par
255 {\cf18 void} HFNC_Packet_Data(RECEIVE_GRAPH_PACKET *Receive_Graph_Packet);\par
256 \par
260 {\cf18 void} SUCTION_Packet_Data();\par
261 \par
265 {\cf18 void} UART5_GRAPH_DATA_DEBUG();\par
266 \par
270 {\cf18 void} USB_GRAPH_DATA_DEBUG();\par
271 \par
272 \par
273 {\cf21 #endif }{\cf20 /* INC_BLUETOOTH_GRAPH_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Calibration.h\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/CALIBRATION/Calibration.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/CALIBRATION/Calibration.h}
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20  * Calibration.h}\par
3 {\cf20  *}\par
4 {\cf20  *  Created on: Mar 16, 2023}\par
5 {\cf20  *      Author: asus}\par
6 {\cf20  */}\par
7 \par
8 {\cf21 #ifndef INC_AERO_INC_CALIBRATION_CALIBRATION_H_}\par
9 {\cf21 #define INC_AERO_INC_CALIBRATION_CALIBRATION_H_}\par
10 \par
11 {\cf21 #include "stdio.h"}\par
12 {\cf21 #include "stm32f4xx_hal.h"}\par
13 {\cf21 #include "main.h"}\par
14 \par
15 \par
16 \par
17 {\cf17 typedef} {\cf17 struct }__attribute__((packed))\par
18 \{\par
19     uint16_t  _header ;\par
20     uint8_t   _length ;\par
21     uint8_t   BLOWER_CALIBRATION;\par
22     uint8_t   PRESSURE_SENSOR_CALIBRATION;\par
23     uint8_t   FLOW_SENSOR_7002_CALIBRATION;\par
24     uint8_t   VALVE_LEAK_TEST_CALIBRATION;\par
25     uint8_t   O2_CHECK_CALIBRATION;\par
26     uint8_t   LED_ALARAM_CALIBRATION;\par
27     uint8_t   BATTERY_CALIBRATION;\par
28     uint8_t   SENSOR_OFFSET_CALIBRATION;\par
29     uint8_t   O2_SENSOR_100_PER_CALIBRATE;\par
30     uint8_t   NC3;\par
31     uint8_t   NC4;\par
32     uint8_t   NC5;\par
33     uint8_t   NC6;\par
34     uint8_t   NC7;\par
35     uint8_t   NC8;\par
36     uint8_t   NC9;\par
37     uint8_t   _CRC8;\par
38 \par
39 \} CALIBRATION_PACKET;\par
40 \par
41 \par
42 {\cf17 typedef} {\cf17 struct }__attribute__((packed))\par
43 \{\par
44         uint16_t _header ;\par
45         uint8_t  _length ;\par
46         uint8_t   PASS_FAIL;\par
47         uint8_t   ERROR_CODE;\par
48         uint8_t   STAGE;\par
49         uint16_t  RESULT;\par
50         uint8_t   NC;\par
51         uint8_t   _CRC8;\par
52 \par
53 \} Send_Calibration_Packet;\par
54 \par
55 \par
56 \par
57 {\cf17 typedef} {\cf17 struct}\par
58 \{\par
59     uint8_t BLOWER;\par
60     uint8_t PRESSURE_SENSOR;\par
61     uint8_t FLOW_SENSOR_7002;\par
62     uint8_t VALVE_LEAK_TEST ;\par
63     uint8_t O2_CHECK ;\par
64     uint8_t ALARAM_TEST;\par
65     uint8_t BATTERY_TEST;\par
66     uint8_t SENSOR_OFFSET_TEST;\par
67     uint8_t O2_SENSOR_100_PER_TEST;\par
68 \}Calibration;\par
69 \par
70 \par
71 {\cf17 typedef} {\cf17 enum}\par
72 \{\par
73     STOP,\par
74     START\par
75 \}Calibration_Command;\par
76 \par
77 {\cf17 typedef} {\cf17 enum}\par
78 \{\par
79     CALIBRATION_FAIL          = 0X00,\par
80     CALIBRATION_PASS          = 0XFF,\par
81 \par
82 \}Calibrated_Result;\par
83 \par
84 uint8_t Device_Monitoring;\par
85 \par
86 xTaskHandle Calibration_Handler;\par
87 {\cf18 void} CALIBRATION_Task({\cf18 void} *argument);\par
88 \par
89 Send_Calibration_Packet SEND_CALIBRATION_PACKET;\par
90 Calibration CALIBRARTION;\par
91 \par
92 {\cf18 void} Split_Calibration_Packets(CALIBRATION_PACKET *);\par
93 {\cf18 void} Blower_Calibration();\par
94 {\cf18 void} Send_Calibrated_Packet();\par
95 uint8_t chksum8_cal({\cf17 const} {\cf18 unsigned} {\cf18 char} *, {\cf18 size_t});\par
96 \par
97 {\cf18 void} Pressure_Sensor_Calibration();\par
98 {\cf18 void} Flow_Sensor_7002_Calibration();\par
99 {\cf18 void} Expiratory_Valve_Leak_Calibration();\par
100 {\cf18 void} Oxygen_blending_Calibration();\par
101 {\cf18 void} Led_Buzzer_Calibration();\par
102 {\cf18 void} Battery_Calibration();\par
103 {\cf18 void} Call_Battery();\par
104 {\cf18 void} Sensor_Voltage_Transmit();\par
105 {\cf18 void} O2_Calibration_Task({\cf18 void} *argument);\par
106 \par
107 {\cf17 extern} uint8_t CDC_Transmit_FS(uint8_t* Buf, uint16_t Len);\par
108 \par
109 {\cf21 #endif }{\cf20 /* INC_AERO_INC_CALIBRATION_CALIBRATION_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Cpap.h\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/CPAP/Cpap.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/CPAP/Cpap.h}
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20  * Cpap.h}\par
3 {\cf20  *}\par
4 {\cf20  *  Created on: Feb 27, 2023}\par
5 {\cf20  *      Author: asus}\par
6 {\cf20  */}\par
7 \par
8 {\cf21 #ifndef INC_AERO_INC_CPAP_CPAP_H_}\par
9 {\cf21 #define INC_AERO_INC_CPAP_CPAP_H_}\par
10 \par
11 {\cf21 #include "stdio.h"}\par
12 {\cf21 #include "stm32f4xx_hal.h"}\par
13 {\cf21 #include "main.h"}\par
14 \par
15 \par
16 \par
17 {\cf17 typedef} {\cf17 struct}\par
18 \{\par
19     uint8_t   CPAP_Val;\par
20     uint16_t  TRIG_TYPE;\par
21     {\cf18 float}  TRIG_LMT;\par
22     uint16_t  TRIG_TIME;\par
23     uint16_t  CALC_TRIG_VAL;\par
24     uint16_t  TOLERANCE_EWAVE;\par
25     uint16_t  TRIG_WINDOW;\par
26     uint16_t  APNEA_TIME;\par
27     {\cf18 int}       APNEA_COUNTER;\par
28     {\cf18 int}       CPAP_O2_Val;\par
29     uint8_t   VENT_TYPE;\par
30 \}cpap_mode_Parameter;\par
31 \par
32 \par
33 \par
34 \par
35 {\cf17 typedef} {\cf17 struct}\par
36 \{\par
37     uint16_t BLOWER_DAC_VAL;\par
38     uint16_t CPAP_BLOWER_DAC_VAL;\par
39     uint16_t LAST_CPAP_BLOWER_DAC_VAL;\par
40     {\cf18 float}    Blower_Signal_Voltage;\par
41     {\cf18 float}    BLOWER_VOLTAGE_SIGNAL;\par
42 \par
43 \}Cpap_mode_blower_control;\par
44 \par
45 {\cf17 typedef} {\cf17 struct}\par
46 \{\par
47     {\cf18 int} CPAP_Settle_Time;\par
48     {\cf18 int} Blower_Wait_Time_Milli_Second;\par
49     {\cf18 int} Trigger_Check_Wait_Time;\par
50     {\cf18 int} _INSPIRATION_TIME;\par
51 \}Cpap_Flags;\par
52 \par
53 \par
54 {\cf17 typedef} {\cf17 struct}\par
55 \{\par
56     uint32_t CPAP_Cumulative_Val;\par
57     uint32_t CPAP_Event_Count;\par
58     uint32_t CPAP_O2_Event_Count;\par
59     uint8_t  CPAP_AVG_VAL;\par
60 \}cpap_average;\par
61 \par
62 {\cf17 typedef} {\cf17 enum}\par
63 \{\par
64     ON,\par
65     OFF\par
66 \}APNEA_TYPE;\par
67 \par
68 xTaskHandle CPAP_Handler;\par
69 {\cf18 void} CPAP_Task({\cf18 void} *argument);\par
70 {\cf18 double} Cpap_Flow,Cpap_Flow_Cummulative_val;\par
71 {\cf18 int} Flow_Sensor_Count;\par
72 uint16_t O2_Flow_Rate_Required;\par
73 uint8_t Adjust_O2_DAC_AS_PER_FLOW_RATE_Count;\par
74 uint16_t Check_O2_Supply_Alert_Count_in_Apnea;\par
75 {\cf17 extern} uint8_t Oxygen_Supply_Failed;\par
76 \par
77 \par
78 \par
79 \par
80 cpap_mode_Parameter CPAP;\par
81 Cpap_Flags CPAP_Control;\par
82 Cpap_mode_blower_control CPAP_Mode_Blower_control;\par
83 cpap_average CPAP_Average;\par
84 \par
85 \par
86 {\cf18 void} Check_O2_Supply_Alert_in_Apnea({\cf18 int},uint32_t);\par
87 {\cf18 void} Check_O2_Supply_Alert_in_Apnea_Once({\cf18 int});\par
88 \par
89 {\cf21 #endif }{\cf20 /* INC_AERO_INC_CPAP_CPAP_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/Expiratory_Valve_Control/Expiratory_Valve_Control_Pressure_Mode.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/Expiratory_Valve_Control/Expiratory_Valve_Control_Pressure_Mode.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/Expiratory_Valve_Control/Expiratory_Valve_Control_Pressure_Mode.h}
{\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of Expiratory_Valve_Control_Pressure_Mode Concept. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "stdio.h"}\par
{\f2 #include "stm32f4xx_hal.h"}\par
{\f2 #include "main.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b PEEP_Control_For_Expiratory_Valve_Open_Time_In_Pressure_Mode} (uint8_t, uint8_t, uint32_t, uint8_t, uint16_t)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
control PEEP_Control_For_Expiratory_Valve_Open_Time_In_Pressure_Modee. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of Expiratory_Valve_Control_Pressure_Mode Concept. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sarath Kumar \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
27/03/24 \par
}}This file contains the Declaration of Expiratory_Valve_Control_Pressure_Mode Concept within a mode, \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v PEEP_Control_For_Expiratory_Valve_Open_Time_In_Pressure_Mode\:Expiratory_Valve_Control_Pressure_Mode.h}
{\xe \v Expiratory_Valve_Control_Pressure_Mode.h\:PEEP_Control_For_Expiratory_Valve_Open_Time_In_Pressure_Mode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t PEEP_Control_For_Expiratory_Valve_Open_Time_In_Pressure_Mode (uint8_t  {\i Achieved_PEEP}, uint8_t  {\i Set_Respiratory_Rate}, uint32_t  {\i Inspiration_Time_in_MS}, uint8_t  {\i Set_PEEP}, uint16_t  {\i Valve_Open_Time})}}
\par
{\bkmkstart AAAAAAAAHI}
{\bkmkend AAAAAAAAHI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
control PEEP_Control_For_Expiratory_Valve_Open_Time_In_Pressure_Modee. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
control PEEP_Control_For_Expiratory_Valve_Open_Time_In_Pressure_Modee.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Achieved_PEEP} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Set_Respiratory_Rate} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Inspiration_Time_in_MS} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Set_PEEP} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Valve_Open_Time} \cell }{\cell }
{\row }
}
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Expiratory_Valve_Control_Pressure_Mode.h\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/Expiratory_Valve_Control/Expiratory_Valve_Control_Pressure_Mode.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/Expiratory_Valve_Control/Expiratory_Valve_Control_Pressure_Mode.h}
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
12 {\cf21 #ifndef INC_EXPIRATORY_VALVE_CONTROL_PRESSURE_MODE_H_}\par
13 {\cf21 #define INC_EXPIRATORY_VALVE_CONTROL_PRESSURE_MODE_H_}\par
14 \par
15 {\cf21 #include "stdio.h"}\par
16 {\cf21 #include "stm32f4xx_hal.h"}\par
17 {\cf21 #include "main.h"}\par
18 \par
19 \par
23 uint16_t PEEP_Control_For_Expiratory_Valve_Open_Time_In_Pressure_Mode(uint8_t,uint8_t,uint32_t,uint8_t,uint16_t);\par
24 \par
25 {\cf21 #endif }{\cf20 /* INC_EXPIRATORY_VALVE_CONTROL_PRESSURE_MODE_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Expiratory_Valve_Control_Volume_Mode.h\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/Expiratory_Valve_Control/Expiratory_Valve_Control_Volume_Mode.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/Expiratory_Valve_Control/Expiratory_Valve_Control_Volume_Mode.h}
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20  * Expiratory_Valve_Control_Volume_Mode.h}\par
3 {\cf20  *}\par
4 {\cf20  *  Created on: Feb 3, 2023}\par
5 {\cf20  *      Author: asus}\par
6 {\cf20  */}\par
7 \par
8 {\cf21 #ifndef INC_EXPIRATORY_VALVE_CONTROL_VOLUME_MODE_H_}\par
9 {\cf21 #define INC_EXPIRATORY_VALVE_CONTROL_VOLUME_MODE_H_}\par
10 \par
11 \par
12 {\cf21 #include "stdio.h"}\par
13 {\cf21 #include "stm32f4xx_hal.h"}\par
14 {\cf21 #include "main.h"}\par
15 \par
16 uint16_t PEEP_Control_For_Expiratory_Valve_Open_Time_In_Volume_Mode(uint8_t,uint8_t,uint32_t,uint8_t,uint16_t);\par
17 {\cf20 //uint16_t Below_30_RR_Control(uint8_t,uint8_t,uint32_t,uint8_t,uint16_t);}\par
18 {\cf20 //uint16_t Above_30_RR_Control(uint8_t,uint8_t,uint32_t,uint8_t,uint16_t);}\par
19 \par
20 {\cf21 #endif }{\cf20 /* INC_EXPIRATORY_VALVE_CONTROL_VOLUME_MODE_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/HFNC/HFNC.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/HFNC/HFNC.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/HFNC/HFNC.h}
{\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of HFNC Feature. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "stdio.h"}\par
{\f2 #include "stm32f4xx_hal.h"}\par
{\f2 #include "main.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b HFNC_Mode_Parameter}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure Representing {\b HFNC_Mode_Parameter} variables. it includes OXYGEN Flow rate and oxygen level. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b HFNC_Task} (void *argument)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HFNC_Task. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b HFNC_DAC_Value} (uint8_t){\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HFNC_DAC_Value. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

xTaskHandle {\b HFNC_Handler}{\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HFNC Task handler. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b HFNC_Mode_Parameter} {\b HFNC}{\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HFNC mode variables. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b FLOW_AVG}{\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FLOW AVERAGE variables. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of HFNC Feature. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sarath Kumar \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
27/03/24 \par
}}This file contains the Declaration of HFNC control Function, Including HFNC Data Split and Alert Control. {\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
 \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v HFNC_Task\:HFNC.h}
{\xe \v HFNC.h\:HFNC_Task}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HFNC_Task (void *  {\i argument})}}
\par
{\bkmkstart AAAAAAAAHO}
{\bkmkend AAAAAAAAHO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HFNC_Task. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HFNC_Task.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i none.} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Postcondition\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
none. \par
}}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HFNC.h\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/HFNC/HFNC.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/HFNC/HFNC.h}
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
13 {\cf21 #ifndef INC_AERO_INC_HFNC_HFNC_H_}\par
14 {\cf21 #define INC_AERO_INC_HFNC_HFNC_H_}\par
15 \par
16 {\cf20 /******************************************************************************/}\par
17 {\cf20 /*                                INCLUDE FILES                               */}\par
18 {\cf20 /******************************************************************************/}\par
19 \par
20 \par
21 {\cf21 #include "stdio.h"}\par
22 {\cf21 #include "stm32f4xx_hal.h"}\par
23 {\cf21 #include "main.h"}\par
24 \par
25 \par
26 {\cf20 /******************************************************************************/}\par
27 {\cf20 /*                                FUNCTION BODY                               */}\par
28 {\cf20 /******************************************************************************/}\par
29 \par
30 \par
36 {\cf17 typedef} {\cf17 struct}\par
37 \{\par
38     uint16_t _Flow_Rate;       \par
39     uint8_t _FIO2_Val;         \par
40 \par
41 \}HFNC_Mode_Parameter;\par
42 \par
43 \par
44 xTaskHandle HFNC_Handler;     \par
45 \par
46 \par
47 \par
52 {\cf18 void} HFNC_Task ({\cf18 void} *argument);\par
53 \par
54 \par
58 uint16_t HFNC_DAC_Value(uint8_t);\par
59 \par
60 HFNC_Mode_Parameter HFNC;     \par
61 uint8_t FLOW_AVG;             \par
62 \par
63 \par
64 \par
65 {\cf21 #endif }{\cf20 /* INC_AERO_INC_HFNC_HFNC_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Nebuliser.h\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/NEBULISER/Nebuliser.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/NEBULISER/Nebuliser.h}
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20  * Nebuliser.h}\par
3 {\cf20  *}\par
4 {\cf20  *  Created on: Mar 14, 2023}\par
5 {\cf20  *      Author: asus}\par
6 {\cf20  */}\par
7 \par
8 {\cf21 #ifndef INC_AERO_INC_NEBULISER_NEBULISER_H_}\par
9 {\cf21 #define INC_AERO_INC_NEBULISER_NEBULISER_H_}\par
10 \par
11 {\cf21 #include "stdio.h"}\par
12 {\cf21 #include "stm32f4xx_hal.h"}\par
13 {\cf21 #include "main.h"}\par
14 \par
15 \par
16 \par
17 \par
18 {\cf17 typedef} {\cf17 struct  }__attribute__((packed))\par
19 \{\par
20     uint16_t  _header;\par
21     uint8_t   _length;\par
22     uint8_t   NEBULISER;\par
23     uint8_t   MANUOVER;\par
24     uint8_t   VENTILATION_SETTING;\par
25     uint8_t   TUBE_SIZE;\par
26     uint8_t   COMPENSATION;\par
27     uint8_t   NC1;\par
28     uint8_t   NC2;\par
29     uint8_t   NC3;\par
30     uint8_t   NC4;\par
31     uint8_t   NC5;\par
32     uint8_t   NC6;\par
33     uint8_t   NC7;\par
34     uint8_t   NC8;\par
35     uint8_t   NC9;\par
36     uint8_t   NC10;\par
37     uint8_t   NC11;\par
38     uint8_t   _CRC8 ;\par
39 \} NEBULISER_PACKET ;\par
40 \par
41 \par
42 {\cf17 typedef} {\cf17 struct}\par
43 \{\par
44     uint8_t NEBULISER_ON_Val;\par
45     uint8_t NEBULISER_SYNC_ON_Val;\par
46     {\cf18 int}     NEBULISER_TIME;\par
47     {\cf18 int}     NEBULISER_TIMER;\par
48     uint8_t SUCTION;\par
49 \}NEBULISER_FLAGS;\par
50 \par
51 \par
52 \par
53 \par
54 \par
55 \par
56 \par
57 xTaskHandle Nebuliser_Handler;\par
58 \par
59 xTaskHandle O2_Calibration_Handler;\par
60 \par
61 NEBULISER_FLAGS Nebuliser;\par
62 \par
63 \par
64 {\cf18 void} Nebuliser_Task({\cf18 void} *argument);\par
65 {\cf18 void} Split_Nebuliser_Packets(NEBULISER_PACKET * );\par
66 {\cf18 void} Nebuliser_Func();\par
67 {\cf18 void} Call_Shutdown_Func();\par
68 \par
69 uint8_t chksum8_cal_neb({\cf17 const} {\cf18 unsigned} {\cf18 char} *buff, {\cf18 size_t} len);\par
70 {\cf18 void} Shutdown_Task({\cf18 void} *argument);\par
71 \par
72 {\cf18 void} Nebuliser_Timing();\par
73 \par
74 \par
75 {\cf21 #endif }{\cf20 /* INC_AERO_INC_NEBULISER_NEBULISER_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/OTHERS/Common_Parameter.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/OTHERS/Common_Parameter.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/OTHERS/Common_Parameter.h}
{\bkmkstart AAAAAAAAHP}
{\bkmkend AAAAAAAAHP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of Finding average of PIP,peep. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "stdio.h"}\par
{\f2 #include "stm32f4xx_hal.h"}\par
{\f2 #include "main.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Common_Mode_parameter}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure contains common variables to check the alert. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b PEEP_maintain_parameter}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure contains peep related variables. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b PIP_average_parameter}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure contains pip related variables. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TIME_base_parameter}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure contains time based variables. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Peep_status} \{ {\b PEEP_NOT_ACHEIVED}
, {\b PEEP_ACHEIVED}
 \}{\bkmkstart AAAAAAAAHQ}
{\bkmkend AAAAAAAAHQ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration for Peep Achieved status. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Expiratory_Valve_Lock_delay} \{ {\b OPENED}
, {\b CLOSED}
 \}{\bkmkstart AAAAAAAAHR}
{\bkmkend AAAAAAAAHR}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration for Expiratory valve status. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Breathe_state} \{ {\b INSPIRATION_CYCLE} = 0
, {\b EXPIRATION_CYCLE} = 1
, {\b PATIENT_TRIGGER_INSPIRATION} = 2
, {\b PATIENT_TRIGGER_EXPIRATION} = 3
, {\b NO_CYCLE}
 \}{\bkmkstart AAAAAAAAHS}
{\bkmkend AAAAAAAAHS}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration to check which type of breath cycle is running. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Device_control} \{ {\b RESUME}
, {\b PAUSE}
 \}{\bkmkstart AAAAAAAAHT}
{\bkmkend AAAAAAAAHT}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration to check the device status. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Find_Max_PIP} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Find_Max_PIP. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Find_Maximum_PEEP} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Find_Maximum_PEEP. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PIP_AVERAGE} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PIP_AVERAGE. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PEEP_AVERAGE} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PEEP_AVERAGE. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b INITIAL_DAC_VALUE} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
INITIAL_DAC_VALUE. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b DAC_VAL} (uint8_t)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DAC_VAL. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Change_DAC_Values} (uint8_t, uint16_t)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Change_DAC_Values. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Change_CPAP_DAC_Values_INVASIVE} (uint8_t, uint16_t)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Change_CPAP_DAC_Values_INVASIVE. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b APNEA_DAC_VAL} (uint8_t Set_VAL)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
APNEA_DAC_VAL. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b INITIAL_CPAP_DAC_VALUE_INVASIVE} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
INITIAL_CPAP_DAC_VALUE_INVASIVE. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Peep_status} {\b Peep_Status}{\bkmkstart AAAAAAAAHU}
{\bkmkend AAAAAAAAHU}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration variable. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Expiratory_Valve_Lock_delay} {\b Expiratory_Valve_Lock_Delay}{\bkmkstart AAAAAAAAHV}
{\bkmkend AAAAAAAAHV}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration variable. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Common_Mode_parameter} {\b Common_Mode_Parameter}{\bkmkstart AAAAAAAAHW}
{\bkmkend AAAAAAAAHW}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure variable. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PIP_average_parameter} {\b PIP_Average_Parameter}{\bkmkstart AAAAAAAAHX}
{\bkmkend AAAAAAAAHX}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure variable. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b TIME_base_parameter} {\b TIME_Base_parameter}{\bkmkstart AAAAAAAAHY}
{\bkmkend AAAAAAAAHY}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure variable. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PEEP_maintain_parameter} {\b PEEP_Maintain_Parameter}{\bkmkstart AAAAAAAAHZ}
{\bkmkend AAAAAAAAHZ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Breathe_state} {\b BREATH_STATE}{\bkmkstart AAAAAAAAIA}
{\bkmkend AAAAAAAAIA}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration variable. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of Finding average of PIP,peep. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sarath Kumar \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
27/03/24 \par
}}This file contains the Declaration of Finding average of PIP,peep. and also initializes DAC values. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v APNEA_DAC_VAL\:Common_Parameter.h}
{\xe \v Common_Parameter.h\:APNEA_DAC_VAL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t APNEA_DAC_VAL (uint8_t  {\i Set_VAL})}}
\par
{\bkmkstart AAAAAAAAIB}
{\bkmkend AAAAAAAAIB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
APNEA_DAC_VAL. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
APNEA_DAC_VAL. \par
}}
{\xe \v Change_CPAP_DAC_Values_INVASIVE\:Common_Parameter.h}
{\xe \v Common_Parameter.h\:Change_CPAP_DAC_Values_INVASIVE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Change_CPAP_DAC_Values_INVASIVE (uint8_t  {\i Set_Value}, uint16_t  {\i Blower_Value})}}
\par
{\bkmkstart AAAAAAAAIC}
{\bkmkend AAAAAAAAIC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Change_CPAP_DAC_Values_INVASIVE. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Change_CPAP_DAC_Values_INVASIVE. \par
}}
{\xe \v Change_DAC_Values\:Common_Parameter.h}
{\xe \v Common_Parameter.h\:Change_DAC_Values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Change_DAC_Values (uint8_t  {\i Set_Value}, uint16_t  {\i Blower_Value})}}
\par
{\bkmkstart AAAAAAAAID}
{\bkmkend AAAAAAAAID}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Change_DAC_Values. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Change_DAC_Values. \par
}}
{\xe \v DAC_VAL\:Common_Parameter.h}
{\xe \v Common_Parameter.h\:DAC_VAL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t DAC_VAL (uint8_t  {\i Set_VAL})}}
\par
{\bkmkstart AAAAAAAAIE}
{\bkmkend AAAAAAAAIE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DAC_VAL. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DAC_VAL. \par
}}
{\xe \v Find_Max_PIP\:Common_Parameter.h}
{\xe \v Common_Parameter.h\:Find_Max_PIP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Find_Max_PIP ()}}
\par
{\bkmkstart AAAAAAAAIF}
{\bkmkend AAAAAAAAIF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Find_Max_PIP. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Find_Max_PIP. \par
}}
{\xe \v Find_Maximum_PEEP\:Common_Parameter.h}
{\xe \v Common_Parameter.h\:Find_Maximum_PEEP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Find_Maximum_PEEP ()}}
\par
{\bkmkstart AAAAAAAAIG}
{\bkmkend AAAAAAAAIG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Find_Maximum_PEEP. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Find_Maximum_PEEP. \par
}}
{\xe \v INITIAL_CPAP_DAC_VALUE_INVASIVE\:Common_Parameter.h}
{\xe \v Common_Parameter.h\:INITIAL_CPAP_DAC_VALUE_INVASIVE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void INITIAL_CPAP_DAC_VALUE_INVASIVE ()}}
\par
{\bkmkstart AAAAAAAAIH}
{\bkmkend AAAAAAAAIH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
INITIAL_CPAP_DAC_VALUE_INVASIVE. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
INITIAL_CPAP_DAC_VALUE_INVASIVE. \par
}}
{\xe \v INITIAL_DAC_VALUE\:Common_Parameter.h}
{\xe \v Common_Parameter.h\:INITIAL_DAC_VALUE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void INITIAL_DAC_VALUE ()}}
\par
{\bkmkstart AAAAAAAAII}
{\bkmkend AAAAAAAAII}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
INITIAL_DAC_VALUE. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
INITIAL_DAC_VALUE. \par
}}
{\xe \v PEEP_AVERAGE\:Common_Parameter.h}
{\xe \v Common_Parameter.h\:PEEP_AVERAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PEEP_AVERAGE ()}}
\par
{\bkmkstart AAAAAAAAIJ}
{\bkmkend AAAAAAAAIJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PEEP_AVERAGE. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PEEP_AVERAGE. \par
}}
{\xe \v PIP_AVERAGE\:Common_Parameter.h}
{\xe \v Common_Parameter.h\:PIP_AVERAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PIP_AVERAGE ()}}
\par
{\bkmkstart AAAAAAAAIK}
{\bkmkend AAAAAAAAIK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PIP_AVERAGE. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PIP_AVERAGE. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Common_Parameter.h\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/OTHERS/Common_Parameter.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/OTHERS/Common_Parameter.h}
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
13 {\cf21 #ifndef INC_COMMON_PARAMETER_H_}\par
14 {\cf21 #define INC_COMMON_PARAMETER_H_}\par
15 \par
16 {\cf21 #include "stdio.h"}\par
17 {\cf21 #include "stm32f4xx_hal.h"}\par
18 {\cf21 #include "main.h"}\par
19 \par
24 {\cf17 typedef} {\cf17 struct}\par
25 \{\par
26     uint8_t  _PIP_Val;\par
27     uint8_t  _PEEP_Val;\par
28     uint8_t  _RESPIRATORY_RATE_Val;\par
29     uint8_t  _FIO2_Val;\par
30     uint16_t _VOLUME_Val;\par
31     uint8_t  _FLOW_RATE;\par
32     uint16_t  TOLERANCE_EWAVE;\par
33     uint16_t  TRIG_WINDOW;\par
34     uint16_t  TRIG_LMT;\par
35     uint16_t  TRIG_TIME;\par
36 \}Common_Mode_parameter;\par
37 \par
38 \par
42 {\cf17 typedef} {\cf17 struct}\par
43 \{\par
44     {\cf18 float}    PEEP_Temp;\par
45     int16_t  Expiratory_Valve_Open_Time;\par
46     uint8_t  Maximum_PEEP_Acheived;\par
47     uint32_t PEEP_Cumulative_Val;\par
48     uint32_t PEEP_Event_Count;\par
49     uint8_t  PEEP_AVG_VAL;\par
50     uint32_t PEEP_Cumulative_Val_Trigger;\par
51     uint32_t PEEP_Event_Count_Trigger;\par
52     {\cf18 int}      CHECK_TRIGGER;\par
53 \par
54 \}PEEP_maintain_parameter;\par
55 \par
59 {\cf17 typedef} {\cf17 struct}\par
60 \{\par
61     uint8_t  Maximum_PIP_Acheived;\par
62     uint32_t PIP_Cumulative_Val;\par
63     uint32_t PIP_Event_Count;\par
64     uint8_t  PIP_AVG_VAL;\par
65 \par
66 \}PIP_average_parameter;\par
67 \par
71 {\cf17 typedef} {\cf17 struct}\par
72 \{\par
73     {\cf18 int} _INSPIRATION_TIME;\par
74     {\cf18 int} _EXPIRATION_TIME;\par
75     {\cf18 int} INSPIRATION_TIME_ACHEIVED;\par
76     {\cf18 int} EXPIRATION_TIME_ACHEIVED;\par
77     {\cf18 int} FLOW_ACHIEVED_TIMER;\par
78 \par
79 \}TIME_base_parameter;\par
80 \par
84 {\cf17 typedef} {\cf17 enum}\par
85 \{\par
86     PEEP_NOT_ACHEIVED,\par
87     PEEP_ACHEIVED\par
88 \}Peep_status;\par
89 \par
90 \par
94 {\cf17 typedef} {\cf17 enum}\par
95 \{\par
96     OPENED,\par
97     CLOSED\par
98 \}Expiratory_Valve_Lock_delay;\par
99 \par
100 \par
104 {\cf17 typedef} {\cf17 enum}\par
105 \{\par
106     INSPIRATION_CYCLE = 0,\par
107     EXPIRATION_CYCLE  = 1,\par
108     PATIENT_TRIGGER_INSPIRATION   = 2,\par
109     PATIENT_TRIGGER_EXPIRATION    = 3,\par
110     NO_CYCLE\par
111 \}Breathe_state;\par
112 \par
113 \par
117 {\cf17 typedef} {\cf17 enum}\par
118 \{\par
119     RESUME,\par
120     PAUSE\par
121 \}Device_control;\par
122 \par
123 \par
124 Peep_status Peep_Status;                                    \par
125 Expiratory_Valve_Lock_delay Expiratory_Valve_Lock_Delay;    \par
126 Common_Mode_parameter Common_Mode_Parameter;                \par
127 PIP_average_parameter PIP_Average_Parameter;                \par
128 TIME_base_parameter TIME_Base_parameter;                    \par
129 \par
130 PEEP_maintain_parameter PEEP_Maintain_Parameter;\par
131 Breathe_state BREATH_STATE;                                 \par
132 \par
133 \par
137 {\cf18 void} Find_Max_PIP();\par
138 \par
142 {\cf18 void} Find_Maximum_PEEP();\par
143 \par
147 {\cf18 void} PIP_AVERAGE();\par
148 \par
152 {\cf18 void} PEEP_AVERAGE();\par
156 {\cf18 void} INITIAL_DAC_VALUE();\par
160 uint16_t DAC_VAL(uint8_t);\par
164 {\cf18 void} Change_DAC_Values(uint8_t,uint16_t);\par
168 {\cf18 void} INITIAL_DAC_VALUE();\par
172 {\cf18 void} Change_CPAP_DAC_Values_INVASIVE(uint8_t,uint16_t);\par
176 uint16_t APNEA_DAC_VAL(uint8_t Set_VAL);\par
180 {\cf18 void} INITIAL_CPAP_DAC_VALUE_INVASIVE();\par
181 \par
182 {\cf21 #endif }{\cf20 /* INC_COMMON_PARAMETER_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Macros.h\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/OTHERS/Macros.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/OTHERS/Macros.h}
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20  * Leds.h}\par
3 {\cf20  *}\par
4 {\cf20  *  Created on: Jan 19, 2023}\par
5 {\cf20  *      Author: asus}\par
6 {\cf20  */}\par
7 \par
8 {\cf21 #ifndef INC_MACROS_H_}\par
9 {\cf21 #define INC_MACROS_H_}\par
10 \par
11 \par
12 {\cf21 #include "stdio.h"}\par
13 {\cf21 #include "stm32f4xx_hal.h"}\par
14 {\cf21 #include "main.h"}\par
15 \par
16 {\cf21 #define Two_Milli_Second_Task_Led_Toggle()             GPIOE->ODR^=(1<<15)}\par
17 {\cf21 #define Sensor_Read_Task_Led_Toggle()                  GPIOE->ODR^=(1<<14)}\par
18 {\cf21 #define Bluetooth_Data_Transmit_Task_Led_Toggle()      GPIOE->ODR^=(1<<13)}\par
19 {\cf21 #define Initial_Flag_Set_Task_Led_Toggle()             GPIOE->ODR^=(1<<12)}\par
20 {\cf21 #define One_Time_Task_Led_Toggle()                     GPIOE->ODR^=(1<<8)}\par
21 {\cf21 #define Mode_Task_Led_Toggle()                         GPIOE->ODR^=(1<<9)}\par
22 {\cf21 #define Pid_Task_Led_Toggle()                          GPIOE->ODR^=(1<<11)}\par
23 {\cf20 //#define Dummy_Task_Led_Toggle()                          GPIOE->ODR^=(1<<10)}\par
24 \par
25 {\cf20 //#define PIP_Not_Acheieved()  GPIOA->ODR|=((1<7))}\par
26 {\cf20 //#define PIP_Acheieved() GPIOA->ODR&=(~(1<<7))}\par
27 \par
28 \par
29 \par
30 {\cf21 #define ExpValve_OPEN()  (GPIOB->ODR&=(~(1<<13)))}\par
31 {\cf21 #define ExpValve_CLOSE() (GPIOB->ODR|=((1<<13)))}\par
32 \par
33 {\cf21 #define Blower_ON()  GPIOE->ODR|=(1<<5)}\par
34 {\cf21 #define Blower_OFF()  GPIOE->ODR&=(~(1<<5))}\par
35 \par
36 \par
37 {\cf21 #define Buzzer1_ON()  GPIOD->ODR|=(1<<6)}\par
38 {\cf21 #define Buzzer1_OFF()  GPIOD->ODR&=(~(1<<6))}\par
39 {\cf21 #define Buzzer2_ON()  GPIOD->ODR|=(1<<7)}\par
40 {\cf21 #define Buzzer2_OFF()  GPIOD->ODR&=(~(1<<7))}\par
41 \par
42 \par
43 {\cf21 #define Nebuliser_OFF()  (GPIOB->ODR&=(~(1<<15)))}\par
44 {\cf21 #define Nebuliser_ON() (GPIOB->ODR|=((1<<15)))}\par
45 \par
46 \par
47 \par
48 {\cf21 #define Uart_Receive_Debug_Toggle_Led()  GPIOD->ODR^=(1<<1)}\par
49 \par
50 {\cf21 #define Blower_Signal(X)  DAC1->DHR12R1=X;}\par
51 \par
52 {\cf21 #endif }{\cf20 /* INC_MACROS_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/OTHERS/Mode_Initial_Flag_Set.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/OTHERS/Mode_Initial_Flag_Set.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/OTHERS/Mode_Initial_Flag_Set.h}
{\bkmkstart AAAAAAAAIL}
{\bkmkend AAAAAAAAIL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of Initial setup before starting the mode. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "stdio.h"}\par
{\f2 #include "stm32f4xx_hal.h"}\par
{\f2 #include "main.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b old_flags}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure representing the final variables after the new changes. It stores the value of the last set value to identify and modify a certain operation. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Mode_initial_flag_set} \{ {\b CLOSE}
, {\b OPEN}
 \}{\bkmkstart AAAAAAAAIM}
{\bkmkend AAAAAAAAIM}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration for before starting the mode operation. To initialize variables before starting mode operation. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b set_value_Change} \{ {\b NO_CHANGES}
, {\b CHANGE_HAPPEN}
 \}{\bkmkstart AAAAAAAAIN}
{\bkmkend AAAAAAAAIN}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration to check for any changes in set values during mode operation. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Mode_Initial_Flag_Set_Task} (void *argument)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mode_Initial_Flag_Set_Task. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PC_CMV_Initial_Flags_SET} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_CMV_Initial_Flags_SET. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b VC_CMV_Initial_Flags_SET} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_CMV_Initial_Flags_SET. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PC_SIMV_Initial_Flags_SET} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_SIMV_Initial_Flags_SET. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b VC_SIMV_Initial_Flags_SET} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_SIMV_Initial_Flags_SET. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PSV_Initial_Flags_SET} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PSV_Initial_Flags_SET. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CPAP_Initial_Flags_SET} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CPAP_Initial_Flags_SET. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b BIBAP_Initial_Flags_SET} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BIBAP_Initial_Flags_SET. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b APRV_Initial_Flags_SET} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
APRV_Initial_Flags_SET. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Backup_PC_CMV_Initial_Flags_SET} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Backup_PC_CMV_Initial_Flags_SET. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Backup_VC_CMV_Initial_Flags_SET} (){\bkmkstart AAAAAAAAIO}
{\bkmkend AAAAAAAAIO}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Backup_VC_CMV_Initial_Flags_SET. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Reset_PC_CMV_Old_Flags_Reset} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset_PC_CMV_Old_Flags_Reset. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Reset_VC_CMV_Old_Flags_Reset} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset_VC_CMV_Old_Flags_Reset. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Reset_PC_SIMV_Old_Flags_Reset} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset_PC_SIMV_Old_Flags_Reset. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Reset_VC_SIMV_Old_Flags_Reset} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset_VC_SIMV_Old_Flags_Reset. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Reset_PC_CMV_BACKUP_Old_Flags_Reset} (){\bkmkstart AAAAAAAAIP}
{\bkmkend AAAAAAAAIP}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset_PC_CMV_BACKUP_Old_Flags_Reset. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Reset_VC_CMV_BACKUP_Old_Flags_Reset} (){\bkmkstart AAAAAAAAIQ}
{\bkmkend AAAAAAAAIQ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset_VC_CMV_BACKUP_Old_Flags_Reset. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Reset_Patient_Circuit_Diconnceted_Alert_Flags} (){\bkmkstart AAAAAAAAIR}
{\bkmkend AAAAAAAAIR}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset_Patient_Circuit_Diconnceted_Alert_Flags. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Reset_Flow_Offset} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset_Flow_Offset. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b set_value_Change} {\b Backup_PC_CMV_SET_VALUE}{\bkmkstart AAAAAAAAIS}
{\bkmkend AAAAAAAAIS}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b set_value_Change} {\b Backup_VC_CMV_SET_VALUE}{\bkmkstart AAAAAAAAIT}
{\bkmkend AAAAAAAAIT}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
enumeration variable }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Mode_initial_flag_set} {\b Mode_Initial_Flag_Set}{\bkmkstart AAAAAAAAIU}
{\bkmkend AAAAAAAAIU}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
enumeration variable }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Mode_initial_flag_set} {\b Back_Up_Mode_Initial_Flag_Set}{\bkmkstart AAAAAAAAIV}
{\bkmkend AAAAAAAAIV}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
enumeration variable }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b old_flags} {\b OLD}{\bkmkstart AAAAAAAAIW}
{\bkmkend AAAAAAAAIW}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
structure variable }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b Wait_Time}{\bkmkstart AAAAAAAAIX}
{\bkmkend AAAAAAAAIX}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b Last_Wait_Time}{\bkmkstart AAAAAAAAIY}
{\bkmkend AAAAAAAAIY}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
used in apnea modes }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Apnea_Mode}{\bkmkstart AAAAAAAAIZ}
{\bkmkend AAAAAAAAIZ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
used in apnea modes }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

xTaskHandle {\b Mode_initial_Flag_Set_Handler}{\bkmkstart AAAAAAAAJA}
{\bkmkend AAAAAAAAJA}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
task variable }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of Initial setup before starting the mode. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sarath Kumar \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
27/03/24 \par
}}This file contains the Declaration of Initial setup before starting the mode. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v APRV_Initial_Flags_SET\:Mode_Initial_Flag_Set.h}
{\xe \v Mode_Initial_Flag_Set.h\:APRV_Initial_Flags_SET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void APRV_Initial_Flags_SET ()}}
\par
{\bkmkstart AAAAAAAAJB}
{\bkmkend AAAAAAAAJB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
APRV_Initial_Flags_SET. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
APRV_Initial_Flags_SET. \par
}}
{\xe \v Backup_PC_CMV_Initial_Flags_SET\:Mode_Initial_Flag_Set.h}
{\xe \v Mode_Initial_Flag_Set.h\:Backup_PC_CMV_Initial_Flags_SET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Backup_PC_CMV_Initial_Flags_SET ()}}
\par
{\bkmkstart AAAAAAAAJC}
{\bkmkend AAAAAAAAJC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Backup_PC_CMV_Initial_Flags_SET. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Backup_PC_CMV_Initial_Flags_SET. \par
}}
{\xe \v BIBAP_Initial_Flags_SET\:Mode_Initial_Flag_Set.h}
{\xe \v Mode_Initial_Flag_Set.h\:BIBAP_Initial_Flags_SET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BIBAP_Initial_Flags_SET ()}}
\par
{\bkmkstart AAAAAAAAJD}
{\bkmkend AAAAAAAAJD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BIBAP_Initial_Flags_SET. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BIBAP_Initial_Flags_SET. \par
}}
{\xe \v CPAP_Initial_Flags_SET\:Mode_Initial_Flag_Set.h}
{\xe \v Mode_Initial_Flag_Set.h\:CPAP_Initial_Flags_SET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CPAP_Initial_Flags_SET ()}}
\par
{\bkmkstart AAAAAAAAJE}
{\bkmkend AAAAAAAAJE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CPAP_Initial_Flags_SET. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CPAP_Initial_Flags_SET. \par
}}
{\xe \v Mode_Initial_Flag_Set_Task\:Mode_Initial_Flag_Set.h}
{\xe \v Mode_Initial_Flag_Set.h\:Mode_Initial_Flag_Set_Task}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Mode_Initial_Flag_Set_Task (void *  {\i argument})}}
\par
{\bkmkstart AAAAAAAAJF}
{\bkmkend AAAAAAAAJF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mode_Initial_Flag_Set_Task. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mode_Initial_Flag_Set_Task. \par
}}
{\xe \v PC_CMV_Initial_Flags_SET\:Mode_Initial_Flag_Set.h}
{\xe \v Mode_Initial_Flag_Set.h\:PC_CMV_Initial_Flags_SET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PC_CMV_Initial_Flags_SET ()}}
\par
{\bkmkstart AAAAAAAAJG}
{\bkmkend AAAAAAAAJG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_CMV_Initial_Flags_SET. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_CMV_Initial_Flags_SET. \par
}}
{\xe \v PC_SIMV_Initial_Flags_SET\:Mode_Initial_Flag_Set.h}
{\xe \v Mode_Initial_Flag_Set.h\:PC_SIMV_Initial_Flags_SET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PC_SIMV_Initial_Flags_SET ()}}
\par
{\bkmkstart AAAAAAAAJH}
{\bkmkend AAAAAAAAJH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_SIMV_Initial_Flags_SET. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_SIMV_Initial_Flags_SET. \par
}}
{\xe \v PSV_Initial_Flags_SET\:Mode_Initial_Flag_Set.h}
{\xe \v Mode_Initial_Flag_Set.h\:PSV_Initial_Flags_SET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PSV_Initial_Flags_SET ()}}
\par
{\bkmkstart AAAAAAAAJI}
{\bkmkend AAAAAAAAJI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PSV_Initial_Flags_SET. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PSV_Initial_Flags_SET. \par
}}
{\xe \v Reset_Flow_Offset\:Mode_Initial_Flag_Set.h}
{\xe \v Mode_Initial_Flag_Set.h\:Reset_Flow_Offset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Reset_Flow_Offset ()}}
\par
{\bkmkstart AAAAAAAAJJ}
{\bkmkend AAAAAAAAJJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset_Flow_Offset. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset_Flow_Offset. \par
}}
{\xe \v Reset_PC_CMV_Old_Flags_Reset\:Mode_Initial_Flag_Set.h}
{\xe \v Mode_Initial_Flag_Set.h\:Reset_PC_CMV_Old_Flags_Reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Reset_PC_CMV_Old_Flags_Reset ()}}
\par
{\bkmkstart AAAAAAAAJK}
{\bkmkend AAAAAAAAJK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset_PC_CMV_Old_Flags_Reset. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset_PC_CMV_Old_Flags_Reset. \par
}}
{\xe \v Reset_PC_SIMV_Old_Flags_Reset\:Mode_Initial_Flag_Set.h}
{\xe \v Mode_Initial_Flag_Set.h\:Reset_PC_SIMV_Old_Flags_Reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Reset_PC_SIMV_Old_Flags_Reset ()}}
\par
{\bkmkstart AAAAAAAAJL}
{\bkmkend AAAAAAAAJL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset_PC_SIMV_Old_Flags_Reset. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset_PC_SIMV_Old_Flags_Reset. \par
}}
{\xe \v Reset_VC_CMV_Old_Flags_Reset\:Mode_Initial_Flag_Set.h}
{\xe \v Mode_Initial_Flag_Set.h\:Reset_VC_CMV_Old_Flags_Reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Reset_VC_CMV_Old_Flags_Reset ()}}
\par
{\bkmkstart AAAAAAAAJM}
{\bkmkend AAAAAAAAJM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset_VC_CMV_Old_Flags_Reset. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset_VC_CMV_Old_Flags_Reset. \par
}}
{\xe \v Reset_VC_SIMV_Old_Flags_Reset\:Mode_Initial_Flag_Set.h}
{\xe \v Mode_Initial_Flag_Set.h\:Reset_VC_SIMV_Old_Flags_Reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Reset_VC_SIMV_Old_Flags_Reset ()}}
\par
{\bkmkstart AAAAAAAAJN}
{\bkmkend AAAAAAAAJN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset_VC_SIMV_Old_Flags_Reset. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset_VC_SIMV_Old_Flags_Reset. \par
}}
{\xe \v VC_CMV_Initial_Flags_SET\:Mode_Initial_Flag_Set.h}
{\xe \v Mode_Initial_Flag_Set.h\:VC_CMV_Initial_Flags_SET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void VC_CMV_Initial_Flags_SET ()}}
\par
{\bkmkstart AAAAAAAAJO}
{\bkmkend AAAAAAAAJO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_CMV_Initial_Flags_SET. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_CMV_Initial_Flags_SET. \par
}}
{\xe \v VC_SIMV_Initial_Flags_SET\:Mode_Initial_Flag_Set.h}
{\xe \v Mode_Initial_Flag_Set.h\:VC_SIMV_Initial_Flags_SET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void VC_SIMV_Initial_Flags_SET ()}}
\par
{\bkmkstart AAAAAAAAJP}
{\bkmkend AAAAAAAAJP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_SIMV_Initial_Flags_SET. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_SIMV_Initial_Flags_SET. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Mode_Initial_Flag_Set.h\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/OTHERS/Mode_Initial_Flag_Set.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/OTHERS/Mode_Initial_Flag_Set.h}
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
12 {\cf21 #ifndef INC_MODE_INITIAL_FLAG_SET_H_}\par
13 {\cf21 #define INC_MODE_INITIAL_FLAG_SET_H_}\par
14 \par
15 {\cf21 #include "stdio.h"}\par
16 {\cf21 #include "stm32f4xx_hal.h"}\par
17 {\cf21 #include "main.h"}\par
18 \par
19 \par
25 {\cf17 typedef} {\cf17 enum}\par
26 \{\par
27     CLOSE,\par
28     OPEN\par
29 \}Mode_initial_flag_set;\par
30 \par
35 {\cf17 typedef} {\cf17 enum}\par
36 \{\par
37     NO_CHANGES,\par
38     CHANGE_HAPPEN\par
39 \}set_value_Change;\par
40 \par
41 \par
42 \par
47 {\cf17 typedef} {\cf17 struct}\par
48 \{\par
49     uint8_t Last_PEEP_Val_PC_CMV_BACKUP;\par
50     uint8_t Last_PIP_Val_PC_CMV_BACKUP;\par
51     uint8_t Last_Rise_Time_PC_CMV_BACKUP;\par
52     uint8_t Last_O2_Val_PC_CMV_BACKUP;\par
53     uint8_t Last_RR_Val_PC_CMV_BACKUP;\par
54     uint8_t Last_I_Val_PC_CMV_BACKUP;\par
55     uint8_t Last_E_Val_PC_CMV_BACKUP;\par
56     {\cf18 float}   Last_Ramp_Time_PC_CMV_BACKUP;\par
57     uint16_t Last_Volume_Val_VC_CMV_BACKUP;\par
58     uint8_t Last_PEEP_Val_VC_CMV_BACKUP;\par
59     uint8_t Last_FLOW_Val_VC_CMV_BACKUP;\par
60     uint8_t Last_O2_Val_VC_CMV_BACKUP;\par
61     uint8_t Last_RR_Val_VC_CMV_BACKUP;\par
62     uint8_t Last_I_Val_VC_CMV_BACKUP;\par
63     uint8_t Last_E_Val_VC_CMV_BACKUP;\par
64     uint16_t LAST_BLOWER_ENDING_DAC_SIGNAL;\par
65     uint16_t LAST_PIP_Control_Task_Delay;\par
66     uint16_t LAST_Increase_Each_DAC_SET_CONST;\par
67     uint8_t LAST_Need_PID_Task_Delay;\par
68     uint8_t LAST_Tune_PID_Task_Delay;\par
69     uint8_t LAST_Low_PIP_Count;\par
70     uint8_t LAST_Early_Acheived_Ramp_Time_Percentage;\par
71     uint8_t last_vent_type;\par
72 \}old_flags;\par
73 \par
74 set_value_Change Backup_PC_CMV_SET_VALUE,Backup_VC_CMV_SET_VALUE;     \par
75 \par
76 Mode_initial_flag_set Mode_Initial_Flag_Set;                          \par
77 Mode_initial_flag_set Back_Up_Mode_Initial_Flag_Set;                  \par
78 old_flags OLD;                                                        \par
79 \par
80 {\cf18 int} Wait_Time,Last_Wait_Time;                      \par
81 uint8_t Apnea_Mode;                                \par
82 \par
83 xTaskHandle Mode_initial_Flag_Set_Handler;         \par
84 \par
85 \par
86 \par
90 {\cf18 void} Mode_Initial_Flag_Set_Task ({\cf18 void} *argument);\par
91 \par
95 {\cf18 void} PC_CMV_Initial_Flags_SET();\par
96 \par
100 {\cf18 void} VC_CMV_Initial_Flags_SET();\par
101 \par
105 {\cf18 void} PC_SIMV_Initial_Flags_SET();\par
106 \par
110 {\cf18 void} VC_SIMV_Initial_Flags_SET();\par
111 \par
115 {\cf18 void} PSV_Initial_Flags_SET();\par
116 \par
120 {\cf18 void} CPAP_Initial_Flags_SET();\par
121 \par
125 {\cf18 void} BIBAP_Initial_Flags_SET();\par
126 \par
130 {\cf18 void} APRV_Initial_Flags_SET();\par
131 \par
135 {\cf18 void} Backup_PC_CMV_Initial_Flags_SET();\par
136 \par
140 {\cf18 void} Backup_VC_CMV_Initial_Flags_SET();\par
141 \par
145 {\cf18 void} Reset_PC_CMV_Old_Flags_Reset();\par
146 \par
150 {\cf18 void} Reset_VC_CMV_Old_Flags_Reset();\par
151 \par
155 {\cf18 void} Reset_PC_SIMV_Old_Flags_Reset();\par
156 \par
160 {\cf18 void} Reset_VC_SIMV_Old_Flags_Reset();\par
161 \par
165 {\cf18 void} Reset_PC_CMV_BACKUP_Old_Flags_Reset();\par
166 \par
170 {\cf18 void} Reset_VC_CMV_BACKUP_Old_Flags_Reset();\par
171 \par
175 {\cf18 void} Reset_Patient_Circuit_Diconnceted_Alert_Flags();\par
176 \par
180 {\cf18 void} Reset_Flow_Offset();\par
181 \par
182 {\cf21 #endif }{\cf20 /* INC_MODE_INITIAL_FLAG_SET_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Problems_Happen.h\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/OTHERS/Problems_Happen.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/OTHERS/Problems_Happen.h}
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20  * Problems_Happen.h}\par
3 {\cf20  *}\par
4 {\cf20  *  Created on: Jan 18, 2023}\par
5 {\cf20  *      Author: asus}\par
6 {\cf20  */}\par
7 \par
8 {\cf21 #ifndef INC_PROBLEMS_HAPPEN_H_}\par
9 {\cf21 #define INC_PROBLEMS_HAPPEN_H_}\par
10 \par
11 \par
12 \par
13 {\cf20 /* Free rtos based bugs}\par
14 {\cf20 }\par
15 {\cf20  * check freertos heap size.}\par
16 {\cf20  * check task stack size.}\par
17 {\cf20  * check priority base concepts works or not.}\par
18 {\cf20  * check Queue takes more time or not.}\par
19 {\cf20  * check semaphore works or not.}\par
20 {\cf20  * check one shot timer works or not.}\par
21 {\cf20  * check how much RAM Space consumes.}\par
22 {\cf20 }\par
23 {\cf20 */}\par
24 \par
25 \par
26 {\cf20 /*device based problem}\par
27 {\cf20 }\par
28 {\cf20  * check expiratory valve flop,connection.}\par
29 {\cf20  * check nrv.}\par
30 {\cf20  * check lung.}\par
31 {\cf20  * check blower leak.}\par
32 {\cf20  * check sensor voltages.}\par
33 {\cf20  * check Oxygen input bar pressure.}\par
34 {\cf20  * Don't use multiple lines in interrupt code it will cause or not execute some lines.}\par
35 {\cf20  * suspend a take in sensor offset task.}\par
36 {\cf20  * suspend a task in Mode initial Flag set.}\par
37 {\cf20  * Check all Task Run in Respected Millisecond Delay.}\par
38 {\cf20  * Check Variables are Reset or Not.}\par
39 {\cf20  * hard fault handler happen for anything divisible by zero}\par
40 {\cf20  * check Tubing in case any peep problem oscillations.}\par
41 {\cf20 }\par
42 {\cf20 */}\par
43 \par
44 \par
45 {\cf20 /*hints  for re modifying coding 09/09/23}\par
46 {\cf20 }\par
47 {\cf20  * fuel gauge method is hided and normal battery read mode is used}\par
48 {\cf20  * in sampled parameter frame one only used another all are commented}\par
49 {\cf20  * in uart to Bluetooth communication sampled parameter and fuel gauge method are hide.please verify it.}\par
50 {\cf20  * fio2 blending values are changed please change it.}\par
51 {\cf20  * please check ws812 alert indication led.}\par
52 {\cf20  * check the pressure and o2 flow sensor read pin area may be it will be change.}\par
53 {\cf20 }\par
54 {\cf20 */}\par
55 \par
56 {\cf20 /*}\par
57 {\cf20  * changes in doxywizrd}\par
58 {\cf20  *}\par
59 {\cf20  * bluetooth graph.h __attribute__((packed)) has changed}\par
60 {\cf20  *}\par
61 {\cf20  */}\par
62 \par
63 \par
64 {\cf21 #endif }{\cf20 /* INC_PROBLEMS_HAPPEN_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/OTHERS/Two_Milli_Second_Task.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/OTHERS/Two_Milli_Second_Task.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/OTHERS/Two_Milli_Second_Task.h}
{\bkmkstart AAAAAAAAJQ}
{\bkmkend AAAAAAAAJQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of time based concept. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "stdio.h"}\par
{\f2 #include "stm32f4xx_hal.h"}\par
{\f2 #include "main.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Time_Trace_Task} (void *argument){\bkmkstart AAAAAAAAJR}
{\bkmkend AAAAAAAAJR}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Time_Trace_Task. This task controls all time-based functions. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b INSPIRATION_TIME_TRACE} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
INSPIRATION_TIME_TRACE. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b EXPIRATION_TIME_TRACE} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EXPIRATION_TIME_TRACE. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b BREATH_COUNT} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BREATH_COUNT. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PC_SIMV_BLOWER_WAIT_TIME_TRACE} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_SIMV_BLOWER_WAIT_TIME_TRACE. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b VC_SIMV_BLOWER_WAIT_TIME_TRACE} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_SIMV_BLOWER_WAIT_TIME_TRACE. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PSV_APNEA_COUNTER_TRACE} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PSV_APNEA_COUNTER_TRACE. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b BIPAP_APNEA_COUNTER_TRACE} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BIPAP_APNEA_COUNTER_TRACE. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CPAP_APNEA_COUNTER_TRACE} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CPAP_APNEA_COUNTER_TRACE. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b APRV_APNEA_COUNTER_TRACE} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
APRV_APNEA_COUNTER_TRACE. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b INITIAL_WAIT_TIME} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
INITIAL_WAIT_TIME. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b Current_Pressure}{\bkmkstart AAAAAAAAJS}
{\bkmkend AAAAAAAAJS}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b Over_Pressure_Count}{\bkmkstart AAAAAAAAJT}
{\bkmkend AAAAAAAAJT}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

xTaskHandle {\b Time_Trace_Handler}{\bkmkstart AAAAAAAAJU}
{\bkmkend AAAAAAAAJU}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
task variable }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of time based concept. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sarath Kumar \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
27/03/24 \par
}}This file contains the Declaration of time based concept. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v APRV_APNEA_COUNTER_TRACE\:Two_Milli_Second_Task.h}
{\xe \v Two_Milli_Second_Task.h\:APRV_APNEA_COUNTER_TRACE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void APRV_APNEA_COUNTER_TRACE ()}}
\par
{\bkmkstart AAAAAAAAJV}
{\bkmkend AAAAAAAAJV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
APRV_APNEA_COUNTER_TRACE. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
APRV_APNEA_COUNTER_TRACE.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None.} \cell }{\cell }
{\row }
}
}}
{\xe \v BIPAP_APNEA_COUNTER_TRACE\:Two_Milli_Second_Task.h}
{\xe \v Two_Milli_Second_Task.h\:BIPAP_APNEA_COUNTER_TRACE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BIPAP_APNEA_COUNTER_TRACE ()}}
\par
{\bkmkstart AAAAAAAAJW}
{\bkmkend AAAAAAAAJW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BIPAP_APNEA_COUNTER_TRACE. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BIPAP_APNEA_COUNTER_TRACE.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None.} \cell }{\cell }
{\row }
}
}}
{\xe \v BREATH_COUNT\:Two_Milli_Second_Task.h}
{\xe \v Two_Milli_Second_Task.h\:BREATH_COUNT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BREATH_COUNT ()}}
\par
{\bkmkstart AAAAAAAAJX}
{\bkmkend AAAAAAAAJX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BREATH_COUNT. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BREATH_COUNT.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None.} \cell }{\cell }
{\row }
}
}}
{\xe \v CPAP_APNEA_COUNTER_TRACE\:Two_Milli_Second_Task.h}
{\xe \v Two_Milli_Second_Task.h\:CPAP_APNEA_COUNTER_TRACE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CPAP_APNEA_COUNTER_TRACE ()}}
\par
{\bkmkstart AAAAAAAAJY}
{\bkmkend AAAAAAAAJY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CPAP_APNEA_COUNTER_TRACE. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CPAP_APNEA_COUNTER_TRACE.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None.} \cell }{\cell }
{\row }
}
}}
{\xe \v EXPIRATION_TIME_TRACE\:Two_Milli_Second_Task.h}
{\xe \v Two_Milli_Second_Task.h\:EXPIRATION_TIME_TRACE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void EXPIRATION_TIME_TRACE ()}}
\par
{\bkmkstart AAAAAAAAJZ}
{\bkmkend AAAAAAAAJZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EXPIRATION_TIME_TRACE. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EXPIRATION_TIME_TRACE.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None.} \cell }{\cell }
{\row }
}
}}
{\xe \v INITIAL_WAIT_TIME\:Two_Milli_Second_Task.h}
{\xe \v Two_Milli_Second_Task.h\:INITIAL_WAIT_TIME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void INITIAL_WAIT_TIME ()}}
\par
{\bkmkstart AAAAAAAAKA}
{\bkmkend AAAAAAAAKA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
INITIAL_WAIT_TIME. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
INITIAL_WAIT_TIME.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None.} \cell }{\cell }
{\row }
}
}}
{\xe \v INSPIRATION_TIME_TRACE\:Two_Milli_Second_Task.h}
{\xe \v Two_Milli_Second_Task.h\:INSPIRATION_TIME_TRACE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void INSPIRATION_TIME_TRACE ()}}
\par
{\bkmkstart AAAAAAAAKB}
{\bkmkend AAAAAAAAKB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
INSPIRATION_TIME_TRACE. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
INSPIRATION_TIME_TRACE.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None.} \cell }{\cell }
{\row }
}
}}
{\xe \v PC_SIMV_BLOWER_WAIT_TIME_TRACE\:Two_Milli_Second_Task.h}
{\xe \v Two_Milli_Second_Task.h\:PC_SIMV_BLOWER_WAIT_TIME_TRACE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PC_SIMV_BLOWER_WAIT_TIME_TRACE ()}}
\par
{\bkmkstart AAAAAAAAKC}
{\bkmkend AAAAAAAAKC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_SIMV_BLOWER_WAIT_TIME_TRACE. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_SIMV_BLOWER_WAIT_TIME_TRACE.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None.} \cell }{\cell }
{\row }
}
}}
{\xe \v PSV_APNEA_COUNTER_TRACE\:Two_Milli_Second_Task.h}
{\xe \v Two_Milli_Second_Task.h\:PSV_APNEA_COUNTER_TRACE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PSV_APNEA_COUNTER_TRACE ()}}
\par
{\bkmkstart AAAAAAAAKD}
{\bkmkend AAAAAAAAKD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PSV_APNEA_COUNTER_TRACE. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PSV_APNEA_COUNTER_TRACE.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None.} \cell }{\cell }
{\row }
}
}}
{\xe \v VC_SIMV_BLOWER_WAIT_TIME_TRACE\:Two_Milli_Second_Task.h}
{\xe \v Two_Milli_Second_Task.h\:VC_SIMV_BLOWER_WAIT_TIME_TRACE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void VC_SIMV_BLOWER_WAIT_TIME_TRACE ()}}
\par
{\bkmkstart AAAAAAAAKE}
{\bkmkend AAAAAAAAKE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_SIMV_BLOWER_WAIT_TIME_TRACE. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_SIMV_BLOWER_WAIT_TIME_TRACE.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None.} \cell }{\cell }
{\row }
}
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Two_Milli_Second_Task.h\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/OTHERS/Two_Milli_Second_Task.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/OTHERS/Two_Milli_Second_Task.h}
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
12 {\cf21 #ifndef INC_TWO_MILLI_SECOND_TASK_H_}\par
13 {\cf21 #define INC_TWO_MILLI_SECOND_TASK_H_}\par
14 \par
15 \par
16 {\cf21 #include "stdio.h"}\par
17 {\cf21 #include "stm32f4xx_hal.h"}\par
18 {\cf21 #include "main.h"}\par
19 \par
20 \par
21 \par
22 {\cf18 int} Current_Pressure,Over_Pressure_Count;\par
23 \par
24 xTaskHandle Time_Trace_Handler;           \par
25 \par
30 {\cf18 void} Time_Trace_Task({\cf18 void} *argument);\par
31 \par
32 \par
36 {\cf18 void} INSPIRATION_TIME_TRACE();\par
40 {\cf18 void} EXPIRATION_TIME_TRACE();\par
44 {\cf18 void} BREATH_COUNT();\par
48 {\cf18 void} PC_SIMV_BLOWER_WAIT_TIME_TRACE();\par
52 {\cf18 void} VC_SIMV_BLOWER_WAIT_TIME_TRACE();\par
56 {\cf18 void} PSV_APNEA_COUNTER_TRACE();\par
60 {\cf18 void} BIPAP_APNEA_COUNTER_TRACE();\par
64 {\cf18 void} CPAP_APNEA_COUNTER_TRACE();\par
68 {\cf18 void} APRV_APNEA_COUNTER_TRACE();\par
72 {\cf18 void} INITIAL_WAIT_TIME();\par
73 \par
74 {\cf21 #endif }{\cf20 /* INC_TWO_MILLI_SECOND_TASK_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/OXYGEN_BLENDING/Oxygen_Blending.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/OXYGEN_BLENDING/Oxygen_Blending.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/OXYGEN_BLENDING/Oxygen_Blending.h}
{\bkmkstart AAAAAAAAKF}
{\bkmkend AAAAAAAAKF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of Oxygen_Blending Concept. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "stdio.h"}\par
{\f2 #include "stm32f4xx_hal.h"}\par
{\f2 #include "main.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Oxygen_parameter}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure Representing O2 DAC values for modes. it includes OXYGEN sensor offset values,maximum values and also Oxygen dac values. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b O2_Sensor_Pin_Voltage}\~ Adc.AdcData[1]{\bkmkstart AAAAAAAAKG}
{\bkmkend AAAAAAAAKG}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ADC pin for O2 manifold flow. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Parkar_valve_Signal}(Y)\~ DAC1->DHR12R2=Y;{\bkmkstart AAAAAAAAKH}
{\bkmkend AAAAAAAAKH}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DAC2 Proportional Valve Control. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b fio2_blending_method} \{ {\b PRESSURE_CONTROLLED}
, {\b VOLUME_CONTROLLED}
 \}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration for fio2_blending_methods. To Check weather the mode is pressure controlled or volume controlled. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b oxygen_blending_status} \{ {\b OXYGEN_ACHIEVED}
, {\b OXYGEN_NOT_ACHIEVED}
 \}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration for oxygen_blending_status. To Check weather the Oxygen value Reached or not. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Oxygen_Blending_Task} (void *argument)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Oxygen_Blending_Task. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Oxygen_Blending} (uint8_t)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Oxygen_Blending. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Calculate_O2} (uint8_t)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculate_O2. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b O2_Initial_Parameter} (uint8_t, uint8_t)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculate_O2. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Low_Oxygen_Achieved} (uint8_t, uint8_t)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculate_O2. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b High_Oxygen_Achieved} (uint8_t, uint8_t)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
High_Oxygen_Achieved. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b O2_DAC_Control} (uint8_t)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
control O2 DAC value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Get_Oxygen_Value} (uint8_t){\bkmkstart AAAAAAAAKI}
{\bkmkend AAAAAAAAKI}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b Set_Initial_O2_DAC_VAL_Pressure_Modes} (uint8_t){\bkmkstart AAAAAAAAKJ}
{\bkmkend AAAAAAAAKJ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b Set_Initial_O2_DAC_VAL_Volume_Modes} (uint8_t){\bkmkstart AAAAAAAAKK}
{\bkmkend AAAAAAAAKK}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b Set_Initial_CPAP_O2_DAC_VAL_Pressure_Modes} (uint8_t){\bkmkstart AAAAAAAAKL}
{\bkmkend AAAAAAAAKL}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Servo_Position_Volume_Controlled_Mode} (uint8_t){\bkmkstart AAAAAAAAKM}
{\bkmkend AAAAAAAAKM}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Servo_Position_Pressure_Controlled_Mode} (uint8_t){\bkmkstart AAAAAAAAKN}
{\bkmkend AAAAAAAAKN}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b CPAP_Servo_Position_Volume_Controlled_Mode} (uint8_t){\bkmkstart AAAAAAAAKO}
{\bkmkend AAAAAAAAKO}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Servo_Info} (uint8_t){\bkmkstart AAAAAAAAKP}
{\bkmkend AAAAAAAAKP}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Check_Oxygen_Count}{\bkmkstart AAAAAAAAKQ}
{\bkmkend AAAAAAAAKQ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Count the oxygen Delivered breath for flow based approach. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b O2_Check}{\bkmkstart AAAAAAAAKR}
{\bkmkend AAAAAAAAKR}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
wait for 5 breath to check the alert }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b Temp_Dac}{\bkmkstart AAAAAAAAKS}
{\bkmkend AAAAAAAAKS}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b inc_dac}{\bkmkstart AAAAAAAAKT}
{\bkmkend AAAAAAAAKT}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
used to start O2 value from minimum value }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int8_t {\b O2_Flow_Rate}{\bkmkstart AAAAAAAAKU}
{\bkmkend AAAAAAAAKU}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
store O2 flow rate value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Oxygen_parameter} {\b Oxygen_Parameter}{\bkmkstart AAAAAAAAKV}
{\bkmkend AAAAAAAAKV}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Oxygen Parameter for mode control. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b fio2_blending_method} {\b Fio2_Blending_Method}{\bkmkstart AAAAAAAAKW}
{\bkmkend AAAAAAAAKW}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fio2_Blending_Method. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b oxygen_blending_status} {\b Oxygen_Blending_Status}{\bkmkstart AAAAAAAAKX}
{\bkmkend AAAAAAAAKX}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Oxygen_Blending_Status. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b O2_DAC_AS_PER_FLOW_RATE_Count}{\bkmkstart AAAAAAAAKY}
{\bkmkend AAAAAAAAKY}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
O2_DAC_AS_PER_FLOW_RATE_Count. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b O2_Low_Count}{\bkmkstart AAAAAAAAKZ}
{\bkmkend AAAAAAAAKZ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check O2_Low_Count. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b O2_High_Count}{\bkmkstart AAAAAAAALA}
{\bkmkend AAAAAAAALA}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check O2_High_Count. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b O2_Sensor_Voltage}{\bkmkstart AAAAAAAALB}
{\bkmkend AAAAAAAALB}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check O2 Sensor Voltage. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Maximum_Limit}{\bkmkstart AAAAAAAALC}
{\bkmkend AAAAAAAALC}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b Last_O2_Dac_Val}{\bkmkstart AAAAAAAALD}
{\bkmkend AAAAAAAALD}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Store Last O2 Dac value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b Achieved_Oxygen_float}{\bkmkstart AAAAAAAALE}
{\bkmkend AAAAAAAALE}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Achieved Oxygen value as float. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

xTaskHandle {\b Oxygen_Blending_Handler}{\bkmkstart AAAAAAAALF}
{\bkmkend AAAAAAAALF}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Oxygen Blending task Handler. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of Oxygen_Blending Concept. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sarath Kumar \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
27/03/24 \par
}}This file contains the Declaration of Oxygen_Blending Concept within a mode, including the initialization \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v fio2_blending_method\:Oxygen_Blending.h}
{\xe \v Oxygen_Blending.h\:fio2_blending_method}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b fio2_blending_method}}}
\par
{\bkmkstart AAAAAAAALG}
{\bkmkend AAAAAAAALG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration for fio2_blending_methods. To Check weather the mode is pressure controlled or volume controlled. }}\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v PRESSURE_CONTROLLED\:Oxygen_Blending.h}
{\xe \v Oxygen_Blending.h\:PRESSURE_CONTROLLED}
{\qr PRESSURE_CONTROLLED{\bkmkstart AAAAAAAALH}
{\bkmkend AAAAAAAALH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
used for Pccmv,pcsimv,backup pccmv. \par
}\cell }{\row }
{\xe \v VOLUME_CONTROLLED\:Oxygen_Blending.h}
{\xe \v Oxygen_Blending.h\:VOLUME_CONTROLLED}
{\qr VOLUME_CONTROLLED{\bkmkstart AAAAAAAALI}
{\bkmkend AAAAAAAALI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
used for Vccmv,Vcsimv \par
}\cell }{\row }
}
}
{\xe \v oxygen_blending_status\:Oxygen_Blending.h}
{\xe \v Oxygen_Blending.h\:oxygen_blending_status}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b oxygen_blending_status}}}
\par
{\bkmkstart AAAAAAAALJ}
{\bkmkend AAAAAAAALJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration for oxygen_blending_status. To Check weather the Oxygen value Reached or not. }}\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v OXYGEN_ACHIEVED\:Oxygen_Blending.h}
{\xe \v Oxygen_Blending.h\:OXYGEN_ACHIEVED}
{\qr OXYGEN_ACHIEVED{\bkmkstart AAAAAAAALK}
{\bkmkend AAAAAAAALK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
when oxygen Achieved \par
}\cell }{\row }
{\xe \v OXYGEN_NOT_ACHIEVED\:Oxygen_Blending.h}
{\xe \v Oxygen_Blending.h\:OXYGEN_NOT_ACHIEVED}
{\qr OXYGEN_NOT_ACHIEVED{\bkmkstart AAAAAAAALL}
{\bkmkend AAAAAAAALL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
when oxygen not Achieved \par
}\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v Calculate_O2\:Oxygen_Blending.h}
{\xe \v Oxygen_Blending.h\:Calculate_O2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Calculate_O2 (uint8_t  {\i FIO2_Val})}}
\par
{\bkmkstart AAAAAAAALM}
{\bkmkend AAAAAAAALM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculate_O2. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Precondition\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
None. \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i FIO2_Val} \cell }{Set fio2 value from mode. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Postcondition\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
None. \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
None.\par
}}Calculate_O2.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Precondition\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
None. \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Postcondition\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
None. \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i FIO2_Val} \cell }{Set fio2 value from mode. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
None. \par
}}}}
{\xe \v High_Oxygen_Achieved\:Oxygen_Blending.h}
{\xe \v Oxygen_Blending.h\:High_Oxygen_Achieved}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void High_Oxygen_Achieved (uint8_t  {\i FIO2_Val}, uint8_t  {\i Achieved_Oxygen})}}
\par
{\bkmkstart AAAAAAAALN}
{\bkmkend AAAAAAAALN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
High_Oxygen_Achieved. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i FIO2_Val} \cell }{Set fio2 value from mode. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Achieved_Oxygen} \cell }{Achieved Oxygen from previous breathe.\cell }
{\row }
}
High_Oxygen_Achieved.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i FIO2_Val} \cell }{Set fio2 value from mode. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Achieved_Oxygen} \cell }{Achieved Oxygen from previous breathe. \cell }
{\row }
}
}}
{\xe \v Low_Oxygen_Achieved\:Oxygen_Blending.h}
{\xe \v Oxygen_Blending.h\:Low_Oxygen_Achieved}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Low_Oxygen_Achieved (uint8_t  {\i FIO2_Val}, uint8_t  {\i Achieved_Oxygen})}}
\par
{\bkmkstart AAAAAAAALO}
{\bkmkend AAAAAAAALO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculate_O2. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i FIO2_Val} \cell }{Set fio2 value from mode. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Achieved_Oxygen} \cell }{Achieved Oxygen from previous breathe.\cell }
{\row }
}
Calculate_O2.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i FIO2_Val} \cell }{Set fio2 value from mode. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Achieved_Oxygen} \cell }{Achieved Oxygen from previous breathe. \cell }
{\row }
}
}}
{\xe \v O2_DAC_Control\:Oxygen_Blending.h}
{\xe \v Oxygen_Blending.h\:O2_DAC_Control}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void O2_DAC_Control (uint8_t  {\i FIO2_Val})}}
\par
{\bkmkstart AAAAAAAALP}
{\bkmkend AAAAAAAALP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
control O2 DAC value. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
control O2 DAC value.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i FIO2_Val} \cell }{Set fio2 value from mode. \cell }
{\row }
}
}}
{\xe \v O2_Initial_Parameter\:Oxygen_Blending.h}
{\xe \v Oxygen_Blending.h\:O2_Initial_Parameter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void O2_Initial_Parameter (uint8_t  {\i FIO2_Val}, uint8_t  {\i Flowrate})}}
\par
{\bkmkstart AAAAAAAALQ}
{\bkmkend AAAAAAAALQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculate_O2. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i FIO2_Val} \cell }{Set fio2 value from mode. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Flowrate} \cell }{Set Flow rate to achieve a O2.\cell }
{\row }
}
Calculate_O2.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i FIO2_Val} \cell }{Set fio2 value from mode. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Flowrate} \cell }{Set Flow rate to achieve a O2. \cell }
{\row }
}
}}
{\xe \v Oxygen_Blending\:Oxygen_Blending.h}
{\xe \v Oxygen_Blending.h\:Oxygen_Blending}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Oxygen_Blending (uint8_t  {\i FIO2_Val})}}
\par
{\bkmkstart AAAAAAAALR}
{\bkmkend AAAAAAAALR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Oxygen_Blending. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i FIO2_Val} \cell }{Set fio2 value from mode.\cell }
{\row }
}
Oxygen_Blending.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i FIO2_Val} \cell }{Set fio2 value from mode. \cell }
{\row }
}
}}
{\xe \v Oxygen_Blending_Task\:Oxygen_Blending.h}
{\xe \v Oxygen_Blending.h\:Oxygen_Blending_Task}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Oxygen_Blending_Task (void *  {\i argument})}}
\par
{\bkmkstart AAAAAAAALS}
{\bkmkend AAAAAAAALS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Oxygen_Blending_Task. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Oxygen_Blending_Task. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Oxygen_Blending.h\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/OXYGEN_BLENDING/Oxygen_Blending.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/OXYGEN_BLENDING/Oxygen_Blending.h}
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
13 {\cf21 #ifndef INC_OXYGEN_BLENDING_H_}\par
14 {\cf21 #define INC_OXYGEN_BLENDING_H_}\par
15 \par
16 {\cf20 /******************************************************************************/}\par
17 {\cf20 /*                                INCLUDE FILES                               */}\par
18 {\cf20 /******************************************************************************/}\par
19 \par
20 {\cf21 #include "stdio.h"}\par
21 {\cf21 #include "stm32f4xx_hal.h"}\par
22 {\cf21 #include "main.h"}\par
23 \par
24 {\cf20 /******************************************************************************/}\par
25 {\cf20 /*                                FUNCTION BODY                               */}\par
26 {\cf20 /******************************************************************************/}\par
27 \par
28 \par
29 {\cf21 #define O2_Sensor_Pin_Voltage Adc.AdcData[1]          }\par
30 {\cf21 #define Parkar_valve_Signal(Y)  DAC1->DHR12R2=Y;      }\par
31 \par
32 \par
38 {\cf17 typedef} {\cf17 struct}\par
39 \{\par
40     {\cf18 float}    OXYGEN_OFFSET_VAL;      \par
41     {\cf18 float}    OXYGEN_MAXIMUM_VAL;     \par
42     uint8_t  Achieved_Oxygen;        \par
43     {\cf18 int}      O2_DAC;                 \par
44     {\cf18 int}      CPAP_O2_DAC;            \par
45     {\cf18 int}      PSV_O2_DAC;             \par
46     {\cf18 int}      BIPAP_O2_DAC;           \par
47 \par
48 \}Oxygen_parameter;\par
49 \par
50 \par
56 {\cf17 typedef} {\cf17 enum}\par
57 \{\par
58     PRESSURE_CONTROLLED,      \par
59     VOLUME_CONTROLLED         \par
60 \}fio2_blending_method;\par
61 \par
62 \par
68 {\cf17 typedef} {\cf17 enum}\par
69 \{\par
70     OXYGEN_ACHIEVED,            \par
71     OXYGEN_NOT_ACHIEVED         \par
72 \}oxygen_blending_status;\par
73 \par
74 \par
75 uint8_t Check_Oxygen_Count;     \par
76 uint8_t O2_Check;               \par
77 uint16_t Temp_Dac,inc_dac;      \par
78 int8_t O2_Flow_Rate;            \par
79 \par
80 Oxygen_parameter Oxygen_Parameter;               \par
81 fio2_blending_method Fio2_Blending_Method;       \par
82 oxygen_blending_status Oxygen_Blending_Status;   \par
83 uint8_t O2_DAC_AS_PER_FLOW_RATE_Count;           \par
84 uint8_t O2_Low_Count;                            \par
85 uint8_t O2_High_Count;                           \par
86 {\cf18 float} O2_Sensor_Voltage;                         \par
87 uint8_t Maximum_Limit;\par
88 uint16_t Last_O2_Dac_Val;                        \par
89 \par
90 \par
91 {\cf18 float} Achieved_Oxygen_float;                    \par
92 \par
93 xTaskHandle Oxygen_Blending_Handler;            \par
94 \par
95 \par
99 {\cf18 void} Oxygen_Blending_Task({\cf18 void} *argument);\par
100 \par
101 \par
102 \par
103 \par
108 {\cf18 void} Oxygen_Blending(uint8_t);\par
109 \par
110 \par
119 {\cf18 void} Calculate_O2(uint8_t);\par
120 \par
121 \par
127 {\cf18 void} O2_Initial_Parameter(uint8_t,uint8_t);\par
128 \par
129 \par
135 {\cf18 void} Low_Oxygen_Achieved(uint8_t,uint8_t);\par
136 \par
142 {\cf18 void} High_Oxygen_Achieved(uint8_t,uint8_t);\par
143 \par
144 \par
148 {\cf18 void} O2_DAC_Control(uint8_t);\par
149 \par
150 \par
151 \par
152 \par
153 \par
154 {\cf18 void} Get_Oxygen_Value(uint8_t);\par
155 uint16_t Set_Initial_O2_DAC_VAL_Pressure_Modes(uint8_t);\par
156 uint16_t Set_Initial_O2_DAC_VAL_Volume_Modes(uint8_t);\par
157 uint16_t Set_Initial_CPAP_O2_DAC_VAL_Pressure_Modes(uint8_t);\par
158 {\cf18 void} Servo_Position_Volume_Controlled_Mode(uint8_t);\par
159 {\cf18 void} Servo_Position_Pressure_Controlled_Mode(uint8_t);\par
160 {\cf18 void} CPAP_Servo_Position_Volume_Controlled_Mode(uint8_t);\par
161 {\cf18 void} Servo_Info(uint8_t);\par
162 \par
163 {\cf21 #endif }{\cf20 /* INC_OXYGEN_BLENDING_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Pc_Simv_Assist_OFF.h\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/PC-SIMV/Pc_Simv_Assist_OFF.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/PC-SIMV/Pc_Simv_Assist_OFF.h}
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20  * PC-SIMV_ASSIST_OFF.h}\par
3 {\cf20  *}\par
4 {\cf20  *  Created on: Feb 14, 2023}\par
5 {\cf20  *      Author: asus}\par
6 {\cf20  */}\par
7 \par
8 {\cf21 #ifndef INC_AERO_INC_PC_SIMV_PC_SIMV_ASSIST_OFF_H_}\par
9 {\cf21 #define INC_AERO_INC_PC_SIMV_PC_SIMV_ASSIST_OFF_H_}\par
10 \par
11 \par
12 {\cf21 #include "stdio.h"}\par
13 {\cf21 #include "stm32f4xx_hal.h"}\par
14 {\cf21 #include "main.h"}\par
15 \par
16 \par
17 \par
18 {\cf17 typedef} {\cf17 enum}\par
19 \{\par
20     ONE_TIME_TRIGGER,\par
21     COUNTINOUS_TRIGGER\par
22 \}trigger_process;\par
23 \par
24 \par
25 {\cf17 typedef} {\cf17 struct}\par
26 \{\par
27     {\cf18 int}  Blower_Wait_Time_Milli_Second;\par
28     {\cf18 int}  Trigger_Check_Wait_Time;\par
29 \}pcsimv;\par
30 \par
31 \par
32 \par
33 \par
34 {\cf17 typedef} {\cf17 struct}\par
35 \{\par
36     uint16_t DAC_VALUE_5;\par
37     uint16_t DAC_VALUE_6;\par
38     uint16_t DAC_VALUE_7;\par
39     uint16_t DAC_VALUE_8;\par
40     uint16_t DAC_VALUE_9;\par
41     uint16_t DAC_VALUE_10;\par
42     uint16_t DAC_VALUE_11;\par
43     uint16_t DAC_VALUE_12;\par
44     uint16_t DAC_VALUE_13;\par
45     uint16_t DAC_VALUE_14;\par
46     uint16_t DAC_VALUE_15;\par
47     uint16_t DAC_VALUE_16;\par
48     uint16_t DAC_VALUE_17;\par
49     uint16_t DAC_VALUE_18;\par
50     uint16_t DAC_VALUE_19;\par
51     uint16_t DAC_VALUE_20;\par
52     uint16_t DAC_VALUE_21;\par
53     uint16_t DAC_VALUE_22;\par
54     uint16_t DAC_VALUE_23;\par
55     uint16_t DAC_VALUE_24;\par
56     uint16_t DAC_VALUE_25;\par
57     uint16_t DAC_VALUE_26;\par
58     uint16_t DAC_VALUE_27;\par
59     uint16_t DAC_VALUE_28;\par
60     uint16_t DAC_VALUE_29;\par
61     uint16_t DAC_VALUE_30;\par
62     uint16_t DAC_VALUE_31;\par
63     uint16_t DAC_VALUE_32;\par
64     uint16_t DAC_VALUE_33;\par
65     uint16_t DAC_VALUE_34;\par
66     uint16_t DAC_VALUE_35;\par
67     uint16_t DAC_VALUE_36;\par
68     uint16_t DAC_VALUE_37;\par
69     uint16_t DAC_VALUE_38;\par
70     uint16_t DAC_VALUE_39;\par
71     uint16_t DAC_VALUE_40;\par
72     uint16_t DAC_VALUE_41;\par
73     uint16_t DAC_VALUE_42;\par
74     uint16_t DAC_VALUE_43;\par
75     uint16_t DAC_VALUE_44;\par
76     uint16_t DAC_VALUE_45;\par
77     uint16_t DAC_VALUE_46;\par
78     uint16_t DAC_VALUE_47;\par
79     uint16_t DAC_VALUE_48;\par
80     uint16_t DAC_VALUE_49;\par
81     uint16_t DAC_VALUE_50;\par
82     uint16_t DAC_VALUE_51;\par
83     uint16_t DAC_VALUE_52;\par
84     uint16_t DAC_VALUE_53;\par
85     uint16_t DAC_VALUE_54;\par
86     uint16_t DAC_VALUE_55;\par
87     uint16_t DAC_VALUE_56;\par
88     uint16_t DAC_VALUE_57;\par
89     uint16_t DAC_VALUE_58;\par
90     uint16_t DAC_VALUE_59;\par
91     uint16_t DAC_VALUE_60;\par
92 \}OVER_ALL_DAC_SIGNAL;\par
93 \par
94 \par
95 {\cf17 typedef} {\cf17 struct}\par
96 \{\par
97     uint16_t APNEA_DAC_VALUE_5;\par
98     uint16_t APNEA_DAC_VALUE_6;\par
99     uint16_t APNEA_DAC_VALUE_7;\par
100     uint16_t APNEA_DAC_VALUE_8;\par
101     uint16_t APNEA_DAC_VALUE_9;\par
102     uint16_t APNEA_DAC_VALUE_10;\par
103     uint16_t APNEA_DAC_VALUE_11;\par
104     uint16_t APNEA_DAC_VALUE_12;\par
105     uint16_t APNEA_DAC_VALUE_13;\par
106     uint16_t APNEA_DAC_VALUE_14;\par
107     uint16_t APNEA_DAC_VALUE_15;\par
108     uint16_t APNEA_DAC_VALUE_16;\par
109     uint16_t APNEA_DAC_VALUE_17;\par
110     uint16_t APNEA_DAC_VALUE_18;\par
111     uint16_t APNEA_DAC_VALUE_19;\par
112     uint16_t APNEA_DAC_VALUE_20;\par
113     uint16_t APNEA_DAC_VALUE_21;\par
114     uint16_t APNEA_DAC_VALUE_22;\par
115     uint16_t APNEA_DAC_VALUE_23;\par
116     uint16_t APNEA_DAC_VALUE_24;\par
117     uint16_t APNEA_DAC_VALUE_25;\par
118     uint16_t APNEA_DAC_VALUE_26;\par
119     uint16_t APNEA_DAC_VALUE_27;\par
120     uint16_t APNEA_DAC_VALUE_28;\par
121     uint16_t APNEA_DAC_VALUE_29;\par
122     uint16_t APNEA_DAC_VALUE_30;\par
123     uint16_t APNEA_DAC_VALUE_31;\par
124     uint16_t APNEA_DAC_VALUE_32;\par
125     uint16_t APNEA_DAC_VALUE_33;\par
126     uint16_t APNEA_DAC_VALUE_34;\par
127     uint16_t APNEA_DAC_VALUE_35;\par
128 \}CPAP_DAC_SIGNAL;\par
129 \par
130 \par
131 pcsimv PCsimv;\par
132 OVER_ALL_DAC_SIGNAL DAC_SIGNALS;\par
133 CPAP_DAC_SIGNAL DAC_SIGNAL;\par
134 \par
135 \par
136 xTaskHandle Pc_Simv_Assist_OFF_Handler;\par
137 {\cf18 void} Pc_Simv_Assist_OFF_Task({\cf18 void} *argument);\par
138 \par
139 {\cf18 void} PC_SIMV_Assist_OFF_Inspiration_Time_Variables_Reset();\par
140 {\cf18 void} PC_SIMV_Assist_OFF_Expiration_Time_Variables_Reset();\par
141 \par
142 \par
143 \par
144 uint16_t TUNE_PEEP_BLOWER(uint16_t *,uint8_t);\par
145 trigger_process Trigger_Process;\par
146 \par
147 \par
148 {\cf21 #endif }{\cf20 /* INC_AERO_INC_PC_SIMV_PC_SIMV_ASSIST_OFF_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/PC-SIMV/Pc_Simv_Assist_ON.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/PC-SIMV/Pc_Simv_Assist_ON.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/PC-SIMV/Pc_Simv_Assist_ON.h}
{\bkmkstart AAAAAAAALT}
{\bkmkend AAAAAAAALT}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
implementation of Pc_Simv_Assist_ON mode. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "stdio.h"}\par
{\f2 #include "stm32f4xx_hal.h"}\par
{\f2 #include "main.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b PC_SIMV_mode_parameter}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure Representing PCSIMV Mode parameter variables. it includes expiration time ,rise time percentage variables. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b E_TIME_TOLERANCE}\~ 30u{\bkmkstart AAAAAAAALU}
{\bkmkend AAAAAAAALU}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ignore expiratory phase of initial 30 of time }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b assist} \{ {\b ASSIST_ON}
, {\b ASSIST_OFF}
 \}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration for assist type. To set a running pcsimv mode is assist on or off. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b trigger_type} \{ {\b Pressure_Trigger}
, {\b Flow_Trigger}
 \}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration for trigger type. To Select a pressure trigger or flow trigger. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Patient_trigger} \{ {\b NO_PATIENT_TRIGGER}
, {\b PATIENT_TRIGGER_HAPPEN}
 \}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration for Patient trigger status. To Know about patient trigger status. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Pc_Simv_Assist_ON_Task} (void *argument)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pc_Simv_Assist_ON_Task. This task is used for control a pc simv mode. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PC_SIMV_Inspiration_Time_Variables_Reset} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_SIMV_Inspiration_Time_Variables_Reset. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PC_SIMV_Expiration_Time_Variables_Reset} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_SIMV_Expiration_Time_Variables_Reset. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PC_SIMV_Assist_ON_Inspiration_Time_Variables_Reset} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_SIMV_Assist_ON_Inspiration_Time_Variables_Reset. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PC_SIMV_Assist_ON_Expiration_Time_Variables_Reset} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_SIMV_Assist_ON_Expiration_Time_Variables_Reset. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

xTaskHandle {\b Pc_Simv_Assist_ON_Handler}{\bkmkstart AAAAAAAALV}
{\bkmkend AAAAAAAALV}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
pc simv asssit on handler }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PC_SIMV_mode_parameter} {\b PC_SIMV}{\bkmkstart AAAAAAAALW}
{\bkmkend AAAAAAAALW}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PCSIMV MODE structure variable. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b assist} {\b Assist_Control}{\bkmkstart AAAAAAAALX}
{\bkmkend AAAAAAAALX}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
assist control structure variable. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b trigger_type} {\b Trigger_Type}{\bkmkstart AAAAAAAALY}
{\bkmkend AAAAAAAALY}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
trigger type structure variable. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Patient_trigger} {\b Patient_Trigger}{\bkmkstart AAAAAAAALZ}
{\bkmkend AAAAAAAALZ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
patient trigger status strucure variable. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
implementation of Pc_Simv_Assist_ON mode. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sarath Kumar \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
27/03/24 \par
}}This file contains the implementation Pc_Simv_Assist_ON mode variables \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v assist\:Pc_Simv_Assist_ON.h}
{\xe \v Pc_Simv_Assist_ON.h\:assist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b assist}}}
\par
{\bkmkstart AAAAAAAAMA}
{\bkmkend AAAAAAAAMA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration for assist type. To set a running pcsimv mode is assist on or off. }}\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v ASSIST_ON\:Pc_Simv_Assist_ON.h}
{\xe \v Pc_Simv_Assist_ON.h\:ASSIST_ON}
{\qr ASSIST_ON{\bkmkstart AAAAAAAAMB}
{\bkmkend AAAAAAAAMB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Assist on type. \par
}\cell }{\row }
{\xe \v ASSIST_OFF\:Pc_Simv_Assist_ON.h}
{\xe \v Pc_Simv_Assist_ON.h\:ASSIST_OFF}
{\qr ASSIST_OFF{\bkmkstart AAAAAAAAMC}
{\bkmkend AAAAAAAAMC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Assist off type. \par
}\cell }{\row }
}
}
{\xe \v Patient_trigger\:Pc_Simv_Assist_ON.h}
{\xe \v Pc_Simv_Assist_ON.h\:Patient_trigger}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Patient_trigger}}}
\par
{\bkmkstart AAAAAAAAMD}
{\bkmkend AAAAAAAAMD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration for Patient trigger status. To Know about patient trigger status. }}\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v NO_PATIENT_TRIGGER\:Pc_Simv_Assist_ON.h}
{\xe \v Pc_Simv_Assist_ON.h\:NO_PATIENT_TRIGGER}
{\qr NO_PATIENT_TRIGGER{\bkmkstart AAAAAAAAME}
{\bkmkend AAAAAAAAME}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
no patient trigger \par
}\cell }{\row }
{\xe \v PATIENT_TRIGGER_HAPPEN\:Pc_Simv_Assist_ON.h}
{\xe \v Pc_Simv_Assist_ON.h\:PATIENT_TRIGGER_HAPPEN}
{\qr PATIENT_TRIGGER_HAPPEN{\bkmkstart AAAAAAAAMF}
{\bkmkend AAAAAAAAMF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
patient trigger happen \par
}\cell }{\row }
}
}
{\xe \v trigger_type\:Pc_Simv_Assist_ON.h}
{\xe \v Pc_Simv_Assist_ON.h\:trigger_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b trigger_type}}}
\par
{\bkmkstart AAAAAAAAMG}
{\bkmkend AAAAAAAAMG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration for trigger type. To Select a pressure trigger or flow trigger. }}\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v Pressure_Trigger\:Pc_Simv_Assist_ON.h}
{\xe \v Pc_Simv_Assist_ON.h\:Pressure_Trigger}
{\qr Pressure_Trigger{\bkmkstart AAAAAAAAMH}
{\bkmkend AAAAAAAAMH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pressure trigger. \par
}\cell }{\row }
{\xe \v Flow_Trigger\:Pc_Simv_Assist_ON.h}
{\xe \v Pc_Simv_Assist_ON.h\:Flow_Trigger}
{\qr Flow_Trigger{\bkmkstart AAAAAAAAMI}
{\bkmkend AAAAAAAAMI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flow trigger. \par
}\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v PC_SIMV_Assist_ON_Expiration_Time_Variables_Reset\:Pc_Simv_Assist_ON.h}
{\xe \v Pc_Simv_Assist_ON.h\:PC_SIMV_Assist_ON_Expiration_Time_Variables_Reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PC_SIMV_Assist_ON_Expiration_Time_Variables_Reset ()}}
\par
{\bkmkstart AAAAAAAAMJ}
{\bkmkend AAAAAAAAMJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_SIMV_Assist_ON_Expiration_Time_Variables_Reset. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_SIMV_Assist_ON_Expiration_Time_Variables_Reset. \par
}}
{\xe \v PC_SIMV_Assist_ON_Inspiration_Time_Variables_Reset\:Pc_Simv_Assist_ON.h}
{\xe \v Pc_Simv_Assist_ON.h\:PC_SIMV_Assist_ON_Inspiration_Time_Variables_Reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PC_SIMV_Assist_ON_Inspiration_Time_Variables_Reset ()}}
\par
{\bkmkstart AAAAAAAAMK}
{\bkmkend AAAAAAAAMK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_SIMV_Assist_ON_Inspiration_Time_Variables_Reset. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_SIMV_Assist_ON_Inspiration_Time_Variables_Reset. \par
}}
{\xe \v Pc_Simv_Assist_ON_Task\:Pc_Simv_Assist_ON.h}
{\xe \v Pc_Simv_Assist_ON.h\:Pc_Simv_Assist_ON_Task}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Pc_Simv_Assist_ON_Task (void *  {\i argument})}}
\par
{\bkmkstart AAAAAAAAML}
{\bkmkend AAAAAAAAML}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pc_Simv_Assist_ON_Task. This task is used for control a pc simv mode. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pc_Simv_Assist_ON_Task. This task is used for control a pc simv mode. \par
}}
{\xe \v PC_SIMV_Expiration_Time_Variables_Reset\:Pc_Simv_Assist_ON.h}
{\xe \v Pc_Simv_Assist_ON.h\:PC_SIMV_Expiration_Time_Variables_Reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PC_SIMV_Expiration_Time_Variables_Reset ()}}
\par
{\bkmkstart AAAAAAAAMM}
{\bkmkend AAAAAAAAMM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_SIMV_Expiration_Time_Variables_Reset. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_SIMV_Expiration_Time_Variables_Reset. \par
}}
{\xe \v PC_SIMV_Inspiration_Time_Variables_Reset\:Pc_Simv_Assist_ON.h}
{\xe \v Pc_Simv_Assist_ON.h\:PC_SIMV_Inspiration_Time_Variables_Reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PC_SIMV_Inspiration_Time_Variables_Reset ()}}
\par
{\bkmkstart AAAAAAAAMN}
{\bkmkend AAAAAAAAMN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_SIMV_Inspiration_Time_Variables_Reset. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_SIMV_Inspiration_Time_Variables_Reset. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Pc_Simv_Assist_ON.h\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/PC-SIMV/Pc_Simv_Assist_ON.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/PC-SIMV/Pc_Simv_Assist_ON.h}
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
12 {\cf21 #ifndef INC_AERO_INC_PC_SIMV_PC_SIMV_ASSIST_ON_H_}\par
13 {\cf21 #define INC_AERO_INC_PC_SIMV_PC_SIMV_ASSIST_ON_H_}\par
14 \par
15 {\cf20 /******************************************************************************/}\par
16 {\cf20 /*                                INCLUDE FILES                               */}\par
17 {\cf20 /******************************************************************************/}\par
18 {\cf21 #include "stdio.h"}\par
19 {\cf21 #include "stm32f4xx_hal.h"}\par
20 {\cf21 #include "main.h"}\par
21 {\cf20 /******************************************************************************/}\par
22 {\cf20 /*                                FUNCTION BODY                               */}\par
23 {\cf20 /******************************************************************************/}\par
24 \par
25 {\cf21 #define E_TIME_TOLERANCE 30u     }\par
26 \par
27 \par
28 \par
35 {\cf17 typedef} {\cf17 struct}\par
36 \{\par
37     uint8_t  PIP_Val;                      \par
38     uint8_t  PEEP_Val;                     \par
39     uint8_t  RESPIRATORY_RATE_Val;         \par
40     uint8_t  FIO2_Val;                     \par
41     {\cf18 float}    RISE_TIME_MS_Val;             \par
42     uint32_t INSPIRATION_TIME;             \par
43     uint32_t EXPIRATION_TIME;              \par
44     uint8_t  Inspiration_Time_Ratio;       \par
45     uint8_t  Expiration_Time_Ratio;        \par
46     uint8_t  Rise_Time;                    \par
47     uint8_t  TRIG_TYPE;                    \par
48     {\cf18 float}    TRIG_LMT;                     \par
49     uint16_t  TRIG_TIME;                   \par
50     uint16_t CALC_TRIG_VAL;                \par
51     uint16_t TOLERANCE_EWAVE;              \par
52     uint16_t TRIG_WINDOW;                  \par
53     uint8_t  Assist_Control;               \par
54     uint8_t  Rise_Time_percentage;         \par
55 \par
56 \}PC_SIMV_mode_parameter;\par
57 \par
58 \par
65 {\cf17 typedef} {\cf17 enum}\par
66 \{\par
67     ASSIST_ON,       \par
68     ASSIST_OFF       \par
69 \}assist;\par
70 \par
76 {\cf17 typedef} {\cf17 enum}\par
77 \{\par
78     Pressure_Trigger,        \par
79     Flow_Trigger             \par
80 \}trigger_type;\par
81 \par
82 \par
88 {\cf17 typedef} {\cf17 enum}\par
89 \{\par
90     NO_PATIENT_TRIGGER,           \par
91     PATIENT_TRIGGER_HAPPEN        \par
92 \}Patient_trigger;\par
93 \par
94 xTaskHandle Pc_Simv_Assist_ON_Handler;        \par
95 \par
100 {\cf18 void} Pc_Simv_Assist_ON_Task({\cf18 void} *argument);\par
101 \par
106 {\cf18 void} PC_SIMV_Inspiration_Time_Variables_Reset();\par
107 \par
111 {\cf18 void} PC_SIMV_Expiration_Time_Variables_Reset();\par
112 \par
116 {\cf18 void} PC_SIMV_Assist_ON_Inspiration_Time_Variables_Reset();\par
117 \par
121 {\cf18 void} PC_SIMV_Assist_ON_Expiration_Time_Variables_Reset();\par
122 \par
123 \par
124 \par
125 \par
126 PC_SIMV_mode_parameter PC_SIMV;           \par
127 assist Assist_Control;                    \par
128 trigger_type Trigger_Type;                \par
129 Patient_trigger Patient_Trigger;          \par
130 \par
131 {\cf21 #endif }{\cf20 /* INC_AERO_INC_PC_SIMV_PC_SIMV_ASSIST_ON_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/PC_CMV/Pc_cmv.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/PC_CMV/Pc_cmv.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/PC_CMV/Pc_cmv.h}
{\bkmkstart AAAAAAAAMO}
{\bkmkend AAAAAAAAMO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of PCCMV mode. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "stdio.h"}\par
{\f2 #include "stm32f4xx_hal.h"}\par
{\f2 #include "main.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b PC_CMV_mode_parameter}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure Representing PCCMV Mode parameter variables. it includes expiration time ,rise time percentage variables. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b One_Minite_In_MS}\~ 60000{\bkmkstart AAAAAAAAMP}
{\bkmkend AAAAAAAAMP}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
one minute for breath update }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Vent_type} \{ {\b ET_TUBE_MODE}
, {\b MASK_MODE}
, {\b NO_MODE}
 \}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration for Ventilation type. To identify the mode type as ET tube or mask mode. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b smooth_ramp_time} \{ {\b Smooth_Ramp_Time_Val_Pending}
, {\b Smooth_Ramp_Time_Val_Finished}
 \}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration for Ramp time status. To check whether the set PIP value is achieved during ramp time. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b breath} \{ {\b Leave_Count_The_Breath}
, {\b Count_The_Breath}
 \}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration for Breath count. To count the number of breaths delivered by the machine or taken by the patient. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Pc_Cmv_Task} (void *argument)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pc_Cmv_Task. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PC_CMV_Inspiration_Time_Variables_Reset} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_CMV_Inspiration_Time_Variables_Reset. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PC_CMV_Expiration_Time_Variables_Reset} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_CMV_Expiration_Time_Variables_Reset. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PIP_Not_Acheieved} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PIP_Not_Acheieved. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PIP_Acheieved} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PIP_Acheieved. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Find_Average_Flow} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Find_Average_Flow. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Vent_type} {\b Vent_Type}{\bkmkstart AAAAAAAAMQ}
{\bkmkend AAAAAAAAMQ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
type of ventilation. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b breath} {\b Breath_Count}{\bkmkstart AAAAAAAAMR}
{\bkmkend AAAAAAAAMR}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
enumeration variable }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b smooth_ramp_time} {\b Smooth_Ramp_Time}{\bkmkstart AAAAAAAAMS}
{\bkmkend AAAAAAAAMS}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ramptime structure variable. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PC_CMV_mode_parameter} {\b PC_CMV}{\bkmkstart AAAAAAAAMT}
{\bkmkend AAAAAAAAMT}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
pccmv mode parameter variable }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

xTaskHandle {\b Pc_Cmv_Handler}{\bkmkstart AAAAAAAAMU}
{\bkmkend AAAAAAAAMU}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
pccmv mode handler }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of PCCMV mode. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sarath Kumar \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
27/03/24 \par
}}This file contains the Declaration PCCMV mode variables \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v breath\:Pc_cmv.h}
{\xe \v Pc_cmv.h\:breath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b breath}}}
\par
{\bkmkstart AAAAAAAAMV}
{\bkmkend AAAAAAAAMV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration for Breath count. To count the number of breaths delivered by the machine or taken by the patient. }}\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v Leave_Count_The_Breath\:Pc_cmv.h}
{\xe \v Pc_cmv.h\:Leave_Count_The_Breath}
{\qr Leave_Count_The_Breath{\bkmkstart AAAAAAAAMW}
{\bkmkend AAAAAAAAMW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Don't count the breath. \par
}\cell }{\row }
{\xe \v Count_The_Breath\:Pc_cmv.h}
{\xe \v Pc_cmv.h\:Count_The_Breath}
{\qr Count_The_Breath{\bkmkstart AAAAAAAAMX}
{\bkmkend AAAAAAAAMX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Count the breath. \par
}\cell }{\row }
}
}
{\xe \v smooth_ramp_time\:Pc_cmv.h}
{\xe \v Pc_cmv.h\:smooth_ramp_time}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b smooth_ramp_time}}}
\par
{\bkmkstart AAAAAAAAMY}
{\bkmkend AAAAAAAAMY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration for Ramp time status. To check whether the set PIP value is achieved during ramp time. }}\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v Smooth_Ramp_Time_Val_Pending\:Pc_cmv.h}
{\xe \v Pc_cmv.h\:Smooth_Ramp_Time_Val_Pending}
{\qr Smooth_Ramp_Time_Val_Pending{\bkmkstart AAAAAAAAMZ}
{\bkmkend AAAAAAAAMZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ramptime not in set time. \par
}\cell }{\row }
{\xe \v Smooth_Ramp_Time_Val_Finished\:Pc_cmv.h}
{\xe \v Pc_cmv.h\:Smooth_Ramp_Time_Val_Finished}
{\qr Smooth_Ramp_Time_Val_Finished{\bkmkstart AAAAAAAANA}
{\bkmkend AAAAAAAANA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ramptime in set time. \par
}\cell }{\row }
}
}
{\xe \v Vent_type\:Pc_cmv.h}
{\xe \v Pc_cmv.h\:Vent_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Vent_type}}}
\par
{\bkmkstart AAAAAAAANB}
{\bkmkend AAAAAAAANB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration for Ventilation type. To identify the mode type as ET tube or mask mode. }}\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v ET_TUBE_MODE\:Pc_cmv.h}
{\xe \v Pc_cmv.h\:ET_TUBE_MODE}
{\qr ET_TUBE_MODE{\bkmkstart AAAAAAAANC}
{\bkmkend AAAAAAAANC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Et tube mode Ventilation. \par
}\cell }{\row }
{\xe \v MASK_MODE\:Pc_cmv.h}
{\xe \v Pc_cmv.h\:MASK_MODE}
{\qr MASK_MODE{\bkmkstart AAAAAAAAND}
{\bkmkend AAAAAAAAND}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
mask mode Ventilation. \par
}\cell }{\row }
{\xe \v NO_MODE\:Pc_cmv.h}
{\xe \v Pc_cmv.h\:NO_MODE}
{\qr NO_MODE{\bkmkstart AAAAAAAANE}
{\bkmkend AAAAAAAANE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
idle. \par
}\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v Find_Average_Flow\:Pc_cmv.h}
{\xe \v Pc_cmv.h\:Find_Average_Flow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Find_Average_Flow ()}}
\par
{\bkmkstart AAAAAAAANF}
{\bkmkend AAAAAAAANF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Find_Average_Flow. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Find_Average_Flow. \par
}}
{\xe \v PC_CMV_Expiration_Time_Variables_Reset\:Pc_cmv.h}
{\xe \v Pc_cmv.h\:PC_CMV_Expiration_Time_Variables_Reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PC_CMV_Expiration_Time_Variables_Reset ()}}
\par
{\bkmkstart AAAAAAAANG}
{\bkmkend AAAAAAAANG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_CMV_Expiration_Time_Variables_Reset. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_CMV_Expiration_Time_Variables_Reset. \par
}}
{\xe \v PC_CMV_Inspiration_Time_Variables_Reset\:Pc_cmv.h}
{\xe \v Pc_cmv.h\:PC_CMV_Inspiration_Time_Variables_Reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PC_CMV_Inspiration_Time_Variables_Reset ()}}
\par
{\bkmkstart AAAAAAAANH}
{\bkmkend AAAAAAAANH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_CMV_Inspiration_Time_Variables_Reset. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_CMV_Inspiration_Time_Variables_Reset. \par
}}
{\xe \v Pc_Cmv_Task\:Pc_cmv.h}
{\xe \v Pc_cmv.h\:Pc_Cmv_Task}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Pc_Cmv_Task (void *  {\i argument})}}
\par
{\bkmkstart AAAAAAAANI}
{\bkmkend AAAAAAAANI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pc_Cmv_Task. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pc_Cmv_Task. \par
}}
{\xe \v PIP_Acheieved\:Pc_cmv.h}
{\xe \v Pc_cmv.h\:PIP_Acheieved}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PIP_Acheieved ()}}
\par
{\bkmkstart AAAAAAAANJ}
{\bkmkend AAAAAAAANJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PIP_Acheieved. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PIP_Acheieved. \par
}}
{\xe \v PIP_Not_Acheieved\:Pc_cmv.h}
{\xe \v Pc_cmv.h\:PIP_Not_Acheieved}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PIP_Not_Acheieved ()}}
\par
{\bkmkstart AAAAAAAANK}
{\bkmkend AAAAAAAANK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PIP_Not_Acheieved. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PIP_Not_Acheieved. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Pc_cmv.h\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/PC_CMV/Pc_cmv.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/PC_CMV/Pc_cmv.h}
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
12 {\cf21 #ifndef INC_PC_CMV_H_}\par
13 {\cf21 #define INC_PC_CMV_H_}\par
14 \par
15 {\cf20 /******************************************************************************/}\par
16 {\cf20 /*                                INCLUDE FILES                               */}\par
17 {\cf20 /******************************************************************************/}\par
18 \par
19 \par
20 {\cf21 #include "stdio.h"}\par
21 {\cf21 #include "stm32f4xx_hal.h"}\par
22 {\cf21 #include "main.h"}\par
23 \par
24 {\cf20 /******************************************************************************/}\par
25 {\cf20 /*                                FUNCTION BODY                               */}\par
26 {\cf20 /******************************************************************************/}\par
27 \par
28 \par
29 {\cf21 #define One_Minite_In_MS 60000             }\par
30 \par
31 \par
37 {\cf17 typedef} {\cf17 struct}\par
38 \{\par
39     uint8_t  PIP_Val;                  \par
40     uint8_t  PEEP_Val;                 \par
41     uint8_t  RESPIRATORY_RATE_Val;     \par
42     uint8_t  FIO2_Val;                 \par
43     {\cf18 float}    RISE_TIME_MS_Val;         \par
44     uint32_t INSPIRATION_TIME;         \par
45     uint32_t EXPIRATION_TIME;          \par
46     uint8_t  Inspiration_Time_Ratio;   \par
47     uint8_t  Expiration_Time_Ratio;    \par
48     uint8_t  Rise_Time;                \par
49     uint8_t  Rise_Time_percentage;     \par
50 \par
51 \}PC_CMV_mode_parameter;\par
52 \par
53 \par
59 {\cf17 typedef} {\cf17 enum}\par
60 \{\par
61     ET_TUBE_MODE,         \par
62     MASK_MODE,            \par
63     NO_MODE               \par
64 \}Vent_type;\par
65 \par
66 Vent_type Vent_Type;    \par
67 \par
68 \par
69 \par
74 {\cf17 typedef} {\cf17 enum}\par
75 \{\par
76     Smooth_Ramp_Time_Val_Pending,      \par
77     Smooth_Ramp_Time_Val_Finished      \par
78 \}smooth_ramp_time;\par
79 \par
80 \par
86 {\cf17 typedef} {\cf17 enum}\par
87 \{\par
88     Leave_Count_The_Breath,         \par
89     Count_The_Breath                \par
90 \}breath;\par
91 \par
92 \par
93 breath Breath_Count;                   \par
94 \par
95 smooth_ramp_time Smooth_Ramp_Time;     \par
96 PC_CMV_mode_parameter PC_CMV;          \par
97 \par
98 \par
99 xTaskHandle Pc_Cmv_Handler;           \par
100 \par
104 {\cf18 void} Pc_Cmv_Task ({\cf18 void} *argument);\par
105 \par
106 \par
110 {\cf18 void} PC_CMV_Inspiration_Time_Variables_Reset();\par
111 \par
115 {\cf18 void} PC_CMV_Expiration_Time_Variables_Reset();\par
116 \par
120 {\cf18 void} PIP_Not_Acheieved();\par
121 \par
125 {\cf18 void} PIP_Acheieved();\par
126 \par
130 {\cf18 void} Find_Average_Flow();           {\cf20 //new}\par
131 \par
132 \par
133 {\cf21 #endif }{\cf20 /* INC_PC_CMV_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/PIP_CONTROL/PIP_Control.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/PIP_CONTROL/PIP_Control.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/PIP_CONTROL/PIP_Control.h}
{\bkmkstart AAAAAAAANL}
{\bkmkend AAAAAAAANL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration to control a PIP. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "stdio.h"}\par
{\f2 #include "stm32f4xx_hal.h"}\par
{\f2 #include "main.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b pip_control_Task}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The structure contains PIP control within the core logic variables. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Pressure_mode_blower_control}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The structure contains blower dac signals for PIP and peep. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b pip_status} \{ {\b PIP_NOT_ACHEIVED}
, {\b PIP_ACHEIVED}
 \}{\bkmkstart AAAAAAAANM}
{\bkmkend AAAAAAAANM}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration of the status regarding PIP achievement. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Read_time_vs_pressure} \{ {\b READ_TIME_OPEN}
, {\b READ_TIME_CLOSE}
 \}{\bkmkstart AAAAAAAANN}
{\bkmkend AAAAAAAANN}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration of the status regarding the PIP achieved time. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Set_pip_Status} \{ {\b SET_PIP_VALUE_NOT_ACHEIVED}
, {\b SET_PIP_VALUE_ACHEIVED}
 \}{\bkmkstart AAAAAAAANO}
{\bkmkend AAAAAAAANO}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration of the status indicating whether the Set PIP value has been achieved or not. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Need_pid_Task_Delay} \{ {\b NO}
, {\b YES}
 \}{\bkmkstart AAAAAAAANP}
{\bkmkend AAAAAAAANP}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration of whether the expiratory valve needs a delay or not. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Tune_pid_Task_Delay} \{ {\b T_OPEN}
, {\b T_LOCK}
 \}{\bkmkstart AAAAAAAANQ}
{\bkmkend AAAAAAAANQ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration of whether the expiratory valve needs a lock or not. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PIP_Control_Task} (void *argument)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PIP_Control_Task. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PIP_Control} (uint8_t)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PIP_Control. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PIP_ACHEIVED_EARLY} (uint8_t, uint16_t)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PIP_ACHEIVED_EARLY. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PIP_ACHEIVED_SLOWLY} (uint16_t)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PIP_ACHEIVED_SLOWLY. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PIP_ACHEIVED_NORMALY} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PIP_ACHEIVED_NORMALY. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b _PIP_NOT_ACHEIVED} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
_PIP_NOT_ACHEIVED. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b BLOWER_ENDING_DAC_SIGNAL_TUNE} (uint8_t, uint32_t, uint8_t)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BLOWER_ENDING_DAC_SIGNAL_TUNE. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b INCREASE_EACH_DAC_SET_CONST} (uint8_t, uint16_t)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
INCREASE_EACH_DAC_SET_CONST. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b pip_control_Task} {\b PIP_control_Task}{\bkmkstart AAAAAAAANR}
{\bkmkend AAAAAAAANR}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure variable. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b pip_status} {\b PIP_Status}{\bkmkstart AAAAAAAANS}
{\bkmkend AAAAAAAANS}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration variable. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Read_time_vs_pressure} {\b Read_Time_vs_Pressure}{\bkmkstart AAAAAAAANT}
{\bkmkend AAAAAAAANT}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration variable. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Set_pip_Status} {\b Set_PIP_Status}{\bkmkstart AAAAAAAANU}
{\bkmkend AAAAAAAANU}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration variable. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Need_pid_Task_Delay} {\b Need_PID_Task_Delay}{\bkmkstart AAAAAAAANV}
{\bkmkend AAAAAAAANV}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration variable. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Tune_pid_Task_Delay} {\b Tune_PID_Task_Delay}{\bkmkstart AAAAAAAANW}
{\bkmkend AAAAAAAANW}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration variable. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Pressure_mode_blower_control} {\b Pressure_Mode_blower_control}{\bkmkstart AAAAAAAANX}
{\bkmkend AAAAAAAANX}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure variable. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b count1}{\bkmkstart AAAAAAAANY}
{\bkmkend AAAAAAAANY}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b count2}{\bkmkstart AAAAAAAANZ}
{\bkmkend AAAAAAAANZ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

xTaskHandle {\b PIP_Control_Task_Handler}{\bkmkstart AAAAAAAAOA}
{\bkmkend AAAAAAAAOA}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Task variable. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration to control a PIP. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sarath Kumar \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
27/03/24 \par
}}This file contains the Declaration to control a PIP. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v _PIP_NOT_ACHEIVED\:PIP_Control.h}
{\xe \v PIP_Control.h\:_PIP_NOT_ACHEIVED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void _PIP_NOT_ACHEIVED ()}}
\par
{\bkmkstart AAAAAAAAOB}
{\bkmkend AAAAAAAAOB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
_PIP_NOT_ACHEIVED. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
_PIP_NOT_ACHEIVED. \par
}}
{\xe \v BLOWER_ENDING_DAC_SIGNAL_TUNE\:PIP_Control.h}
{\xe \v PIP_Control.h\:BLOWER_ENDING_DAC_SIGNAL_TUNE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BLOWER_ENDING_DAC_SIGNAL_TUNE (uint8_t  {\i PIP_VAL}, uint32_t  {\i Inspiration_Time}, uint8_t  {\i Rise_Time_Percent})}}
\par
{\bkmkstart AAAAAAAAOC}
{\bkmkend AAAAAAAAOC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BLOWER_ENDING_DAC_SIGNAL_TUNE. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BLOWER_ENDING_DAC_SIGNAL_TUNE. \par
}}
{\xe \v INCREASE_EACH_DAC_SET_CONST\:PIP_Control.h}
{\xe \v PIP_Control.h\:INCREASE_EACH_DAC_SET_CONST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void INCREASE_EACH_DAC_SET_CONST (uint8_t  {\i PIP_VAL}, uint16_t  {\i Rise_Time_MS})}}
\par
{\bkmkstart AAAAAAAAOD}
{\bkmkend AAAAAAAAOD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
INCREASE_EACH_DAC_SET_CONST. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
INCREASE_EACH_DAC_SET_CONST. \par
}}
{\xe \v PIP_ACHEIVED_EARLY\:PIP_Control.h}
{\xe \v PIP_Control.h\:PIP_ACHEIVED_EARLY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PIP_ACHEIVED_EARLY (uint8_t  {\i PIP_VAL}, uint16_t  {\i Rise_Time_MS})}}
\par
{\bkmkstart AAAAAAAAOE}
{\bkmkend AAAAAAAAOE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PIP_ACHEIVED_EARLY. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PIP_ACHEIVED_EARLY. \par
}}
{\xe \v PIP_ACHEIVED_NORMALY\:PIP_Control.h}
{\xe \v PIP_Control.h\:PIP_ACHEIVED_NORMALY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PIP_ACHEIVED_NORMALY ()}}
\par
{\bkmkstart AAAAAAAAOF}
{\bkmkend AAAAAAAAOF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PIP_ACHEIVED_NORMALY. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PIP_ACHEIVED_NORMALY. \par
}}
{\xe \v PIP_ACHEIVED_SLOWLY\:PIP_Control.h}
{\xe \v PIP_Control.h\:PIP_ACHEIVED_SLOWLY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PIP_ACHEIVED_SLOWLY (uint16_t  {\i Rise_Time_MS})}}
\par
{\bkmkstart AAAAAAAAOG}
{\bkmkend AAAAAAAAOG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PIP_ACHEIVED_SLOWLY. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PIP_ACHEIVED_SLOWLY. \par
}}
{\xe \v PIP_Control\:PIP_Control.h}
{\xe \v PIP_Control.h\:PIP_Control}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PIP_Control (uint8_t  {\i PIP_VAL})}}
\par
{\bkmkstart AAAAAAAAOH}
{\bkmkend AAAAAAAAOH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PIP_Control. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PIP_Control. \par
}}
{\xe \v PIP_Control_Task\:PIP_Control.h}
{\xe \v PIP_Control.h\:PIP_Control_Task}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PIP_Control_Task (void *  {\i argument})}}
\par
{\bkmkstart AAAAAAAAOI}
{\bkmkend AAAAAAAAOI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PIP_Control_Task. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PIP_Control_Task. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PIP_Control.h\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/PIP_CONTROL/PIP_Control.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/PIP_CONTROL/PIP_Control.h}
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
12 {\cf21 #ifndef INC_PIP_CONTROL_H_}\par
13 {\cf21 #define INC_PIP_CONTROL_H_}\par
14 \par
15 \par
16 {\cf21 #include "stdio.h"}\par
17 {\cf21 #include "stm32f4xx_hal.h"}\par
18 {\cf21 #include "main.h"}\par
19 \par
23 {\cf17 typedef} {\cf17 struct}\par
24 \{\par
25     int16_t PIP_Control_Task_Delay;\par
26     int16_t PIP_Control_Event_Occured;\par
27     int16_t PIP_Acheived_Time_Ms;\par
28     int16_t Increase_Each_DAC_SET_CONST;\par
29     uint8_t  Early_Acheived_Ramp_Time_Percentage;\par
30     uint8_t  Last_Early_Acheived_Ramp_Time_Percentage;\par
31     uint8_t  Low_PIP_Count;\par
32     uint16_t  Slowly_Acheived_Ramp_Time_Percentage;\par
33 \par
34 \}pip_control_Task;\par
35 \par
39 {\cf17 typedef} {\cf17 struct}\par
40 \{\par
41     uint16_t BLOWER_DAC_VAL;\par
42     uint16_t LAST_BLOWER_DAC_VAL;\par
43     {\cf18 float}    BLOWER_VOLTAGE_SIGNAL;\par
44     uint16_t BLOWER_ENDING_DAC_SIGNAL;\par
45     {\cf18 float} Blower_Signal_Voltage;\par
46     uint16_t PEEP_BLOWER_DAC_VAL;\par
47     uint16_t LAST_PEEP_BLOWER_DAC_VAL;\par
48 \par
49 \}Pressure_mode_blower_control;\par
50 \par
51 \par
55 {\cf17 typedef} {\cf17 enum}\par
56 \{\par
57     PIP_NOT_ACHEIVED,\par
58     PIP_ACHEIVED\par
59 \}pip_status;\par
60 \par
61 \par
65 {\cf17 typedef} {\cf17 enum}\par
66 \{\par
67     READ_TIME_OPEN,\par
68     READ_TIME_CLOSE\par
69 \}Read_time_vs_pressure;\par
70 \par
71 \par
75 {\cf17 typedef} {\cf17 enum}\par
76 \{\par
77     SET_PIP_VALUE_NOT_ACHEIVED,\par
78     SET_PIP_VALUE_ACHEIVED\par
79 \}Set_pip_Status;\par
80 \par
84 {\cf17 typedef} {\cf17 enum}\par
85 \{\par
86     NO,\par
87     YES\par
88 \}Need_pid_Task_Delay;\par
89 \par
93 {\cf17 typedef} {\cf17 enum}\par
94 \{\par
95     T_OPEN,\par
96     T_LOCK\par
97 \}Tune_pid_Task_Delay;\par
98 \par
99 pip_control_Task PIP_control_Task;                             \par
100 pip_status PIP_Status;                                         \par
101 Read_time_vs_pressure Read_Time_vs_Pressure;                   \par
102 Set_pip_Status Set_PIP_Status;                                 \par
103 Need_pid_Task_Delay Need_PID_Task_Delay;                       \par
104 Tune_pid_Task_Delay Tune_PID_Task_Delay;                       \par
105 Pressure_mode_blower_control Pressure_Mode_blower_control;     \par
106 uint8_t count1,count2;\par
107 \par
108 \par
109 xTaskHandle PIP_Control_Task_Handler;                          \par
110 \par
114 {\cf18 void} PIP_Control_Task({\cf18 void} *argument);\par
115 \par
119 {\cf18 void} PIP_Control(uint8_t);\par
120 \par
124 {\cf18 void} PIP_ACHEIVED_EARLY(uint8_t,uint16_t);\par
125 \par
129 {\cf18 void} PIP_ACHEIVED_SLOWLY(uint16_t);\par
130 \par
134 {\cf18 void} PIP_ACHEIVED_NORMALY();\par
135 \par
139 {\cf18 void} _PIP_NOT_ACHEIVED();\par
140 \par
144 {\cf18 void} BLOWER_ENDING_DAC_SIGNAL_TUNE(uint8_t,uint32_t,uint8_t);\par
145 \par
149 {\cf18 void} INCREASE_EACH_DAC_SET_CONST(uint8_t,uint16_t);\par
150 \par
151 \par
152 {\cf21 #endif }{\cf20 /* INC_PIP_CONTROL_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PSV.h\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/PSV/PSV.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/PSV/PSV.h}
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20  * PSV.h}\par
3 {\cf20  *}\par
4 {\cf20  *  Created on: Feb 18, 2023}\par
5 {\cf20  *      Author: asus}\par
6 {\cf20  */}\par
7 \par
8 {\cf21 #ifndef INC_AERO_INC_PSV_PSV_H_}\par
9 {\cf21 #define INC_AERO_INC_PSV_PSV_H_}\par
10 \par
11 {\cf21 #include "stdio.h"}\par
12 {\cf21 #include "stm32f4xx_hal.h"}\par
13 {\cf21 #include "main.h"}\par
14 \par
15 \par
16 \par
17 {\cf17 typedef} {\cf17 struct}\par
18 \{\par
19     uint16_t  PRESSURE_SUPPORT_Val;\par
20     uint8_t   PEEP_Val;\par
21     uint16_t  TRIG_TYPE;\par
22     {\cf18 float}     TRIG_LMT;\par
23     uint16_t  TRIG_TIME;\par
24     uint16_t  CALC_TRIG_VAL;\par
25     uint16_t  TOLERANCE_EWAVE;\par
26     uint16_t  TRIG_WINDOW;\par
27     uint16_t  APNEA_TIME;\par
28     {\cf18 int}       APNEA_COUNTER;\par
29     {\cf18 int}       PSV_O2_Val;\par
30     uint8_t   VENT_TYPE;\par
31 \}psv_mode_Parameter;\par
32 \par
33 \par
34 {\cf17 typedef} {\cf17 struct}\par
35 \{\par
36     uint16_t BLOWER_DAC_VAL;\par
37     uint16_t LAST_BLOWER_DAC_VAL;\par
38     uint16_t BLOWER_ENDING_DAC_SIGNAL;\par
39     uint16_t PEEP_BLOWER_DAC_VAL;\par
40     uint16_t LAST_PEEP_BLOWER_DAC_VAL;\par
41     {\cf18 float}    Blower_Signal_Voltage;\par
42     {\cf18 float}    BLOWER_VOLTAGE_SIGNAL;\par
43 \par
44 \}Psv_mode_blower_control;\par
45 \par
46 {\cf17 typedef} {\cf17 struct}\par
47 \{\par
48     {\cf18 int} PSV_PEEP_Settle_Time;\par
49     {\cf18 int} Blower_Wait_Time_Milli_Second;\par
50     {\cf18 int} Trigger_Check_Wait_Time;\par
51     {\cf18 int} _INSPIRATION_TIME;\par
52 \}Psv_Flags;\par
53 \par
54 \par
55 {\cf17 typedef} {\cf17 struct}\par
56 \{\par
57     uint32_t PEEP_Cumulative_Val;\par
58     uint32_t PEEP_Event_Count;\par
59     uint8_t  PEEP_AVG_VAL;\par
60 \}psv_peep_average;\par
61 \par
62 {\cf17 typedef} {\cf17 struct}\par
63 \{\par
64     uint8_t  Maximum_PRESSURE_SUPPORT_Acheived;\par
65     uint32_t PRESSURE_SUPPORT_Cumulative_Val;\par
66     uint32_t PRESSURE_SUPPORT_Event_Count;\par
67     uint8_t  PRESSURE_SUPPORT_AVG_VAL;\par
68 \par
69 \}psv_pip_average;\par
70 \par
71 \par
72 \par
73 {\cf17 typedef} {\cf17 enum}\par
74 \{\par
75     NORMAL_PRESSURE,\par
76     OVER_PRESSURE\par
77 \}pressure_status;\par
78 \par
79 xTaskHandle PSV_Handler,PSV_PID_Handler;\par
80 psv_mode_Parameter PSV;\par
81 Psv_Flags PSV_Control;\par
82 Psv_mode_blower_control PSV_Mode_Blower_control;\par
83 psv_peep_average PSV_Peep_Average;\par
84 psv_pip_average PSV_Pip_average;\par
85 pressure_status Pressure_Status;\par
86 \par
87 {\cf18 double} PSV_Flow,PSV_Flow_Cummulative_val;\par
88 {\cf18 int} PSV_Flow_Sensor_Count;\par
89 uint8_t onetime;\par
90 {\cf18 int} PSV_Max_Flow;\par
91 {\cf18 int} Check_Peep_Status_timer,Setteled_Pressure;\par
92 uint8_t O2_Control_PSV;\par
93 \par
94 {\cf18 void} PSV_Task({\cf18 void} *argument);\par
95 {\cf18 void} PSV_PID_Task({\cf18 void} *argument);\par
96 \par
97 \par
98 \par
99 {\cf21 #endif }{\cf20 /* INC_AERO_INC_PSV_PSV_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Sampled_Parameter.h\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/Sampled_Parameter/Sampled_Parameter.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/Sampled_Parameter/Sampled_Parameter.h}
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20  * Sampled_Parameter.h}\par
3 {\cf20  *}\par
4 {\cf20  *  Created on: May 23, 2023}\par
5 {\cf20  *      Author: asus}\par
6 {\cf20  */}\par
7 \par
8 {\cf21 #ifndef INC_AERO_INC_SAMPLED_PARAMETER_SAMPLED_PARAMETER_H_}\par
9 {\cf21 #define INC_AERO_INC_SAMPLED_PARAMETER_SAMPLED_PARAMETER_H_}\par
10 \par
11 {\cf21 #include "stdio.h"}\par
12 {\cf21 #include "stm32f4xx_hal.h"}\par
13 {\cf21 #include "main.h"}\par
14 \par
15 \par
16 {\cf18 int} Max_Flow,Min_Flow;\par
17 \par
18 \par
19 {\cf17 typedef} {\cf17 struct}\par
20 \{\par
21     uint8_t Average_PIP;\par
22     uint8_t Average_PEEP;\par
23     {\cf18 float}   Volume_Max_Insp;\par
24     {\cf18 float}   Volume_Max_Exp;\par
25     uint8_t     MAX_Flow;\par
26     uint8_t     MIN_Flow;\par
27 \}sampled_Parameter_1;\par
28 \par
29 \par
30 {\cf17 typedef} {\cf17 struct}\par
31 \{\par
32   {\cf18 float}   Minite_Volume;\par
33   {\cf18 int}     Total_Tidal_Volume_Int;\par
34   {\cf18 float}   Total_Tidal_Volume_Decimal_1;\par
35   {\cf18 int}     Total_Tidal_Volume_Decimal;\par
36   {\cf18 float}   Total_Tidal_Volume_float;\par
37   uint8_t Acheived_RR;\par
38   uint16_t Acheived_I_Time;\par
39   uint16_t Acheived_E_Time;\par
40   {\cf18 float}   Acheived_I_Time_float;\par
41   {\cf18 float}   Acheived_E_Time_float;\par
42   {\cf18 int}     Acheived_I_Time_int;\par
43   {\cf18 int}     Acheived_E_Time_int;\par
44   {\cf18 float}   Acheived_E_Time_Decimal_1;\par
45   {\cf18 int}     Acheived_E_Time_Decimal;\par
46   {\cf18 float}   Acheived_I_Time_Decimal_1;\par
47   {\cf18 int}     Acheived_I_Time_Decimal;\par
48 \par
49 \}sampled_Parameter_2;\par
50 \par
51 \par
52 \par
53 {\cf17 typedef} {\cf17 struct}\par
54 \{\par
55     uint8_t Compliance;\par
56     uint8_t Plateau_Pressure;\par
57     {\cf18 double} Staic_Compliance;\par
58     uint8_t Staic_Compliance_int;\par
59     uint8_t Staic_Compliance_float;\par
60     {\cf18 double} Dynamic_Compliance;\par
61     uint8_t Dynamic_Compliance_int;\par
62     uint8_t Dynamic_Compliance_float;\par
63     {\cf18 double} Rinsp;\par
64     uint8_t Rinsp_int;\par
65     uint8_t Rinsp_float_1;\par
66     uint8_t Rinsp_float_2;\par
67 \par
68 \}sampled_Parameter_3;\par
69 \par
70 {\cf17 typedef} {\cf17 struct  }__attribute__((packed))\par
71 \{\par
72     uint16_t _header ;\par
73     uint8_t  _length ;\par
74     uint8_t  _PIP_Val;\par
75     uint8_t  _PEEP_Val;\par
76     uint8_t  _VTI_Val_1;\par
77     uint8_t  _VTI_Val_2;\par
78     uint8_t   _FIO2;\par
79     uint8_t   _RR;\par
80     uint8_t  _CRC8;\par
81 \} SAMPLED_PARAMETER_PACKET_1 ;\par
82 \par
83 {\cf17 typedef} {\cf17 struct  }__attribute__((packed))\par
84 \{\par
85     uint16_t _header ;\par
86     uint8_t  _length ;\par
87     uint8_t  _Minite_Volume_int;\par
88     uint8_t  _Minite_Volume_float;\par
89     uint8_t _Static_Compliance_Int;\par
90     uint8_t _Static_Compliance_Float;\par
91     uint8_t _Dynamic_Compliance_Int;\par
92     uint8_t _Dynamic_Compliance_Float;\par
93     uint8_t  _CRC8;\par
94 \} SAMPLED_PARAMETER_PACKET_2 ;\par
95 \par
96 \par
97 {\cf17 typedef} {\cf17 struct  }__attribute__((packed))\par
98 \{\par
99     uint16_t _header ;\par
100     uint8_t  _length ;\par
101     uint8_t  _RInsp_Int;\par
102     uint8_t  _RInsp_Float1;\par
103     uint8_t _MAP_int;\par
104     uint8_t _MAP_float;\par
105     int16_t  _VTE_Val;\par
106     uint8_t  _CRC8;\par
107 \} SAMPLED_PARAMETER_PACKET_3 ;\par
108 \par
109 \par
110 \par
111 {\cf17 typedef} {\cf17 struct  }__attribute__((packed))\par
112 \{\par
113     uint16_t _header ;\par
114     uint8_t  _length ;\par
115     uint8_t  _PIF_Val;\par
116     uint8_t  _PEF_Val;\par
117     uint16_t _I_time_Achieved;\par
118     uint16_t _E_time_Achieved;\par
119     uint8_t _CRC8;\par
120 \} SAMPLED_PARAMETER_PACKET_4;\par
121 \par
122 \par
123 \par
124 {\cf17 typedef} {\cf17 struct  }__attribute__((packed))\par
125 \{\par
126     uint16_t _header ;\par
127     uint8_t  _length ;\par
128     uint8_t  _Plauteu_Pressure;\par
129     uint8_t _I_Ratio_int;\par
130     uint8_t _I_Ratio_float;\par
131     uint8_t _E_Ratio_int;\par
132     uint8_t _E_Ratio_float;\par
133     uint8_t  NC;\par
134     uint8_t _CRC8;\par
135 \} SAMPLED_PARAMETER_PACKET_5;\par
136 \par
137 \par
138 \par
139 {\cf17 typedef} {\cf17 struct}\par
140 \{\par
141     {\cf18 double} MAP;\par
142     uint8_t MAP_int;\par
143     uint8_t MAP_float;\par
144     {\cf18 double} I_Ratio;\par
145     {\cf18 double} E_Ratio;\par
146     uint8_t I_Ratio_int;\par
147     uint8_t E_Ratio_int;\par
148     uint8_t I_Ratio_float;\par
149     uint8_t E_Ratio_float;\par
150 \par
151 \}sampled_Parameter_4;\par
152 \par
153 {\cf17 typedef} {\cf17 enum}\par
154 \{\par
155     First_Frame = 1,\par
156     Second_Frame =2,\par
157     Third_Frame  =3,\par
158     Fourth_Frame =4,\par
159     Fifth_Frame  =5\par
160 \}sampled_parameter_packet;\par
161 \par
162 \par
163 uint8_t Send_Frame;\par
164 sampled_Parameter_1 Sampled_Parameter_1;\par
165 sampled_Parameter_2 Sampled_Parameter_2;\par
166 sampled_Parameter_3 Sampled_Parameter_3;\par
167 sampled_Parameter_4 Sampled_Parameter_4;\par
168 SAMPLED_PARAMETER_PACKET_1 Sampled_Parameter_1_Packet;\par
169 SAMPLED_PARAMETER_PACKET_2 Sampled_Parameter_2_Packet;\par
170 SAMPLED_PARAMETER_PACKET_3 Sampled_Parameter_3_Packet;\par
171 SAMPLED_PARAMETER_PACKET_4 Sampled_Parameter_4_Packet;\par
172 SAMPLED_PARAMETER_PACKET_5 Sampled_Parameter_5_Packet;\par
173 \par
174 \par
175 {\cf18 void} Average_PIP_Func();\par
176 {\cf18 void} Average_PEEP_Func();\par
177 {\cf18 void} Volume_Max_Inspiration_Func();\par
178 {\cf18 void} Volume_Max_Expiration_Func();\par
179 {\cf18 void} Reset_Flag_Func();\par
180 {\cf18 void} Peak_Flow_Inspiration_Func();\par
181 {\cf18 void} Peak_Flow_Expiration_Func();\par
182 {\cf18 void} Sampled_Parameter_Func_1();\par
183 {\cf18 void} Sampled_Parameter_Func_2();\par
184 {\cf18 void} Sampled_Parameter_Func_3();\par
185 {\cf18 void} Minite_Volume_Func();\par
186 {\cf18 void} Inspiration_Time_Func();\par
187 {\cf18 void} Expiration_Time_Func();\par
188 {\cf18 void} Sampled_Parameter_List_1_Transmit();\par
189 {\cf18 void} Sampled_Parameter_List_2_Transmit();\par
190 {\cf18 void} Sampled_Parameter_List_3_Transmit();\par
191 {\cf18 void} Sampled_Parameter_List_4_Transmit();\par
192 {\cf18 void} Sampled_Parameter_List_5_Transmit();\par
193 {\cf18 void} Acheived_RR_Func();\par
194 {\cf18 void} Platau_Pressure();\par
195 {\cf18 void} Sampled_Parameter_Flags_Func();\par
196 {\cf18 void} Static_and_Dynamic_Compliance();\par
197 {\cf18 void} Inspiratory_Resistance();\par
198 {\cf18 void} Mean_Airway_Pressure();\par
199 {\cf18 void} Sampled_Parameter_Func_4();\par
200 {\cf18 void} I_and_E_Ratio_Func();\par
201 \par
202 \par
203 {\cf18 void} Sampled_Parameter_Inspiration_time();\par
204 \par
205 \par
206 {\cf21 #endif }{\cf20 /* INC_AERO_INC_SAMPLED_PARAMETER_SAMPLED_PARAMETER_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/READ_SENSORS_VALUES/Sensor_Read.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/READ_SENSORS_VALUES/Sensor_Read.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/READ_SENSORS_VALUES/Sensor_Read.h}
{\bkmkstart AAAAAAAAOJ}
{\bkmkend AAAAAAAAOJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of All sensor data's reading area. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "stdio.h"}\par
{\f2 #include "stm32f4xx_hal.h"}\par
{\f2 #include "main.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b READ_SENSOR_TASK} (){\bkmkstart AAAAAAAAOK}
{\bkmkend AAAAAAAAOK}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
READ_SENSOR_TASK. This Function calls all sensor Reading functions for every 2 milli-seconds. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b CALIBRATE_SENSOR_TASK} (){\bkmkstart AAAAAAAAOL}
{\bkmkend AAAAAAAAOL}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CALIBRATE_SENSOR_TASK. This function is called from sensor offset task. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MPX5010_read} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MPX5010_read. This function is Calculate the runtime pressure value in cmh20. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MPX7002_read} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MPX7002_read. This function is Calculate the runtime Flow value in L/min. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MPX5010DP_read} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MPX5010DP_read. This function is Calculate the runtime O2 Flow value in L/min. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MPX5010_init} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MPX5010_init. This function is initialize pressure sensor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MPX7002_init} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MPX7002_init. This function is initialize flow sensor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MPX5010DP_init} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MPX5010DP_init. This function is initialize O2 flow sensor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Sensor_Read_Task} (void *argument)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid \zwjSensor read handler Task \par
}}{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

xTaskHandle {\b Sensor_Read_Handler}{\bkmkstart AAAAAAAAOM}
{\bkmkend AAAAAAAAOM}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of All sensor data's reading area. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sarath Kumar \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
27/03/24 \par
}}This file contains the Declaration of All sensor data's reading area. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v MPX5010_init\:Sensor_Read.h}
{\xe \v Sensor_Read.h\:MPX5010_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MPX5010_init ()}}
\par
{\bkmkstart AAAAAAAAON}
{\bkmkend AAAAAAAAON}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MPX5010_init. This function is initialize pressure sensor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MPX5010_init. This function is initialize pressure sensor. \par
}}
{\xe \v MPX5010_read\:Sensor_Read.h}
{\xe \v Sensor_Read.h\:MPX5010_read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MPX5010_read ()}}
\par
{\bkmkstart AAAAAAAAOO}
{\bkmkend AAAAAAAAOO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MPX5010_read. This function is Calculate the runtime pressure value in cmh20. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MPX5010_read. This function is Calculate the runtime pressure value in cmh20.\par
{
\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab {\f2 https://hackaday.com/2019/09/06/sensor-filters-for-coders/}\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab {\f2 https://electronics.stackexchange.com/questions/30370/fast-and-memory-efficient-moving-average-calculation}\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab {\f2 https://stackoverflow.com/questions/12636613/how-to-calculate-moving-average-without-keeping-the-count-and-data-total} \par}
}}
{\xe \v MPX5010DP_init\:Sensor_Read.h}
{\xe \v Sensor_Read.h\:MPX5010DP_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MPX5010DP_init ()}}
\par
{\bkmkstart AAAAAAAAOP}
{\bkmkend AAAAAAAAOP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MPX5010DP_init. This function is initialize O2 flow sensor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MPX5010DP_init. This function is initialize O2 flow sensor. \par
}}
{\xe \v MPX5010DP_read\:Sensor_Read.h}
{\xe \v Sensor_Read.h\:MPX5010DP_read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MPX5010DP_read ()}}
\par
{\bkmkstart AAAAAAAAOQ}
{\bkmkend AAAAAAAAOQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MPX5010DP_read. This function is Calculate the runtime O2 Flow value in L/min. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MPX5010DP_read. This function is Calculate the runtime O2 Flow value in L/min.\par
{
\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab {\f2 https://hackaday.com/2019/09/06/sensor-filters-for-coders/}\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab {\f2 https://electronics.stackexchange.com/questions/30370/fast-and-memory-efficient-moving-average-calculation}\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab {\f2 https://stackoverflow.com/questions/12636613/how-to-calculate-moving-average-without-keeping-the-count-and-data-total} \par}
}}
{\xe \v MPX7002_init\:Sensor_Read.h}
{\xe \v Sensor_Read.h\:MPX7002_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MPX7002_init ()}}
\par
{\bkmkstart AAAAAAAAOR}
{\bkmkend AAAAAAAAOR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MPX7002_init. This function is initialize flow sensor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MPX7002_init. This function is initialize flow sensor. \par
}}
{\xe \v MPX7002_read\:Sensor_Read.h}
{\xe \v Sensor_Read.h\:MPX7002_read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MPX7002_read ()}}
\par
{\bkmkstart AAAAAAAAOS}
{\bkmkend AAAAAAAAOS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MPX7002_read. This function is Calculate the runtime Flow value in L/min. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MPX7002_read. This function is Calculate the runtime Flow value in L/min.\par
{
\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab {\f2 https://hackaday.com/2019/09/06/sensor-filters-for-coders/}\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab {\f2 https://electronics.stackexchange.com/questions/30370/fast-and-memory-efficient-moving-average-calculation}\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab {\f2 https://stackoverflow.com/questions/12636613/how-to-calculate-moving-average-without-keeping-the-count-and-data-total} \par}
}}
{\xe \v Sensor_Read_Task\:Sensor_Read.h}
{\xe \v Sensor_Read.h\:Sensor_Read_Task}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Sensor_Read_Task (void *  {\i argument})}}
\par
{\bkmkstart AAAAAAAAOT}
{\bkmkend AAAAAAAAOT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid \zwjSensor read handler Task \par
}}}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sensor_Read_Task. This task call READ_SENSOR_TASK function.\par
{\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid \zwjSensor read handler Task \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Sensor_Read.h\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/READ_SENSORS_VALUES/Sensor_Read.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/READ_SENSORS_VALUES/Sensor_Read.h}
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
12 {\cf21 #ifndef INC_SENSOR_READ_H_}\par
13 {\cf21 #define INC_SENSOR_READ_H_}\par
14 \par
15 \par
16 \par
17 {\cf21 #include "stdio.h"}\par
18 {\cf21 #include "stm32f4xx_hal.h"}\par
19 {\cf21 #include "main.h"}\par
20 \par
21 \par
26 {\cf18 void} READ_SENSOR_TASK();\par
27 \par
28 \par
33 {\cf18 void} CALIBRATE_SENSOR_TASK();\par
34 \par
35 \par
36 \par
42 {\cf18 void} MPX5010_read();\par
43 \par
44 \par
49 {\cf18 void} MPX7002_read();\par
50 \par
51 \par
56 {\cf18 void} MPX5010DP_read();\par
57 \par
58 \par
63 {\cf18 void} MPX5010_init();\par
64 \par
65 \par
70 {\cf18 void} MPX7002_init();\par
71 \par
76 {\cf18 void} MPX5010DP_init();\par
77 \par
78 xTaskHandle Sensor_Read_Handler;        \par
79 \par
80 \par
85 {\cf18 void} Sensor_Read_Task({\cf18 void} *argument);\par
86 \par
87 \par
88 {\cf21 #endif }{\cf20 /* INC_SENSOR_READ_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/ads1115.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/ads1115.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/ads1115.h}
{\bkmkstart AAAAAAAAOU}
{\bkmkend AAAAAAAAOU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of ADS1115 Module Configuration. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "stdint.h"}\par
{\f2 #include "stm32f4xx_hal.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 
{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ADS1115 Device Address\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ADS1115_ADDRESS}\~ (0X48<<1){\bkmkstart AAAAAAAAOV}
{\bkmkend AAAAAAAAOV}
\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Address. }{
}\par
}\par}
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ADS1115 Operational Status (OS) Configuration\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ADS1115_OS}\~ (0b0 << 7){\bkmkstart AAAAAAAAOW}
{\bkmkend AAAAAAAAOW}
\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Operational Status value. *\zwj/. }{
}\par
}\par}
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ADS1115 Multiplexer Configuration\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ADS1115_MUX_AIN0}\~ (0b100 << 4){\bkmkstart AAAAAAAAOX}
{\bkmkend AAAAAAAAOX}
\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Analog input 0 configuration. }{
}\par
}\par}
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ADS1115_MUX_AIN1}\~ (0b101 << 4){\bkmkstart AAAAAAAAOY}
{\bkmkend AAAAAAAAOY}
\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Analog input 1 configuration. }{
}\par
}\par}
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ADS1115_MUX_AIN2}\~ (0b110 << 4){\bkmkstart AAAAAAAAOZ}
{\bkmkend AAAAAAAAOZ}
\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Analog input 2 configuration. }{
}\par
}\par}
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ADS1115_MUX_AIN3}\~ (0b111 << 4){\bkmkstart AAAAAAAAPA}
{\bkmkend AAAAAAAAPA}
\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Analog input 3 configuration. }{
}\par
}\par}
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ADS1115 Programmable Gain Amplifier (PGA) Configuration\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ADS1115_PGA_TWOTHIRDS}\~ (0b000 << 1){\bkmkstart AAAAAAAAPB}
{\bkmkend AAAAAAAAPB}
\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
2/3x Gain configuration. }{
}\par
}\par}
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ADS1115_PGA_ONE}\~ (0b001 << 1){\bkmkstart AAAAAAAAPC}
{\bkmkend AAAAAAAAPC}
\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1x Gain configuration. }{
}\par
}\par}
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ADS1115_PGA_TWO}\~ (0b010 << 1){\bkmkstart AAAAAAAAPD}
{\bkmkend AAAAAAAAPD}
\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
2x Gain configuration. }{
}\par
}\par}
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ADS1115_PGA_FOUR}\~ (0b011 << 1){\bkmkstart AAAAAAAAPE}
{\bkmkend AAAAAAAAPE}
\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
4x Gain configuration. }{
}\par
}\par}
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ADS1115_PGA_EIGHT}\~ (0b100 << 1){\bkmkstart AAAAAAAAPF}
{\bkmkend AAAAAAAAPF}
\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
8x Gain configuration. }{
}\par
}\par}
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ADS1115_PGA_SIXTEEN}\~ (0b111 << 1){\bkmkstart AAAAAAAAPG}
{\bkmkend AAAAAAAAPG}
\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
16x Gain configuration. }{
}\par
}\par}
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ADS1115 Mode Configuration\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1115_MODE}\~ (0b0)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ADS1115 Data Rate Configuration\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ADS1115_DATA_RATE_8}\~ (0b000 << 5){\bkmkstart AAAAAAAAPH}
{\bkmkend AAAAAAAAPH}
\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data Rate: 8 SPS configuration. }{
}\par
}\par}
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ADS1115_DATA_RATE_16}\~ (0b001 << 5){\bkmkstart AAAAAAAAPI}
{\bkmkend AAAAAAAAPI}
\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data Rate: 16 SPS configuration. }{
}\par
}\par}
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ADS1115_DATA_RATE_32}\~ (0b010 << 5){\bkmkstart AAAAAAAAPJ}
{\bkmkend AAAAAAAAPJ}
\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data Rate: 32 SPS configuration. }{
}\par
}\par}
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ADS1115_DATA_RATE_64}\~ (0b011 << 5){\bkmkstart AAAAAAAAPK}
{\bkmkend AAAAAAAAPK}
\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data Rate: 64 SPS configuration. }{
}\par
}\par}
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ADS1115_DATA_RATE_128}\~ (0b100 << 5){\bkmkstart AAAAAAAAPL}
{\bkmkend AAAAAAAAPL}
\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data Rate: 128 SPS configuration. }{
}\par
}\par}
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ADS1115_DATA_RATE_250}\~ (0b101 << 5){\bkmkstart AAAAAAAAPM}
{\bkmkend AAAAAAAAPM}
\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data Rate: 250 SPS configuration. }{
}\par
}\par}
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ADS1115_DATA_RATE_475}\~ (0b110 << 5){\bkmkstart AAAAAAAAPN}
{\bkmkend AAAAAAAAPN}
\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data Rate: 475 SPS configuration. }{
}\par
}\par}
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ADS1115_DATA_RATE_860}\~ (0b111 << 5){\bkmkstart AAAAAAAAPO}
{\bkmkend AAAAAAAAPO}
\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data Rate: 860 SPS configuration. }{
}\par
}\par}
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ADS1115 Comparator Configuration\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ADS1115_COMP_MODE}\~ (0b0 << 4){\bkmkstart AAAAAAAAPP}
{\bkmkend AAAAAAAAPP}
\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Comparator Mode configuration. }{
}\par
}\par}
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ADS1115_COMP_POL}\~ (0b0 << 3){\bkmkstart AAAAAAAAPQ}
{\bkmkend AAAAAAAAPQ}
\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Comparator Polarity configuration. }{
}\par
}\par}
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ADS1115_COMP_LAT}\~ (0b0 << 2){\bkmkstart AAAAAAAAPR}
{\bkmkend AAAAAAAAPR}
\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Latching Comparator configuration. }{
}\par
}\par}
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ADS1115_COMP_QUE}\~ (0b11){\bkmkstart AAAAAAAAPS}
{\bkmkend AAAAAAAAPS}
\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Comparator Queue configuration. }{
}\par
}\par}
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ADS1115 Register Addresses\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ADS1115_CONVER_REG}\~ 0x0{\bkmkstart AAAAAAAAPT}
{\bkmkend AAAAAAAAPT}
\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Conversion Register address. }{
}\par
}\par}
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ADS1115_CONFIG_REG}\~ 0x1{\bkmkstart AAAAAAAAPU}
{\bkmkend AAAAAAAAPU}
\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configuration Register address. }{
}\par
}\par}
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ADS1115 Timeout Configuration\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ADS1115_TIMEOUT}\~ 1{\bkmkstart AAAAAAAAPV}
{\bkmkend AAAAAAAAPV}
\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Timeout value in milliseconds. }{
}\par
}\par}
}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b ADS1115_Init} (uint8_t ads_reference, I2C_HandleTypeDef *handler)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize the ADS1115 ADC. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b ADS1115_Read} (uint16_t muxPort, float *voltage, I2C_HandleTypeDef *handler)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read analog voltage from the ADS1115. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b Trigger_Ads1115_Raw_Adc}{\bkmkstart AAAAAAAAPW}
{\bkmkend AAAAAAAAPW}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Proximal_Sensor_ADS1115}{\bkmkstart AAAAAAAAPX}
{\bkmkend AAAAAAAAPX}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b _5010DP_Sensor_ADS1115}{\bkmkstart AAAAAAAAPY}
{\bkmkend AAAAAAAAPY}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b ENVITEC_Sensor_ADS1115}{\bkmkstart AAAAAAAAPZ}
{\bkmkend AAAAAAAAPZ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
I2C_HandleTypeDef {\b ADS1115_1_I2C_Handler}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

I2C_HandleTypeDef {\b ADS1115_2_I2C_Handler}{\bkmkstart AAAAAAAAQA}
{\bkmkend AAAAAAAAQA}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

I2C_HandleTypeDef {\b ADS1115_3_I2C_Handler}{\bkmkstart AAAAAAAAQB}
{\bkmkend AAAAAAAAQB}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of ADS1115 Module Configuration. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sarath Kumar \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
27/03/24 \par
}}This file contains the Declaration of ADS1115 Module Configuration, including the initialization \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v ADS1115_MODE\:ads1115.h}
{\xe \v ads1115.h\:ADS1115_MODE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1115_MODE\~ (0b0)}}
\par
{\bkmkstart AAAAAAAAQC}
{\bkmkend AAAAAAAAQC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Mode value. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v ADS1115_Init\:ads1115.h}
{\xe \v ads1115.h\:ADS1115_Init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HAL_StatusTypeDef ADS1115_Init (uint8_t  {\i ads_reference}, I2C_HandleTypeDef *  {\i handler})}}
\par
{\bkmkstart AAAAAAAAQD}
{\bkmkend AAAAAAAAQD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize the ADS1115 ADC. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function initializes the ADS1115 ADC with the specified I2C handler.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i handler} \cell }{Pointer to the I2C handler structure.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
HAL_StatusTypeDef indicating success or failure.\par
}}Initialize the ADS1115 ADC.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i handler} \cell }{Pointer to the I2C handler structure. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Return values\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i HAL} \cell }{status. \cell }
{\row }
}
}}
{\xe \v ADS1115_Read\:ads1115.h}
{\xe \v ads1115.h\:ADS1115_Read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HAL_StatusTypeDef ADS1115_Read (uint16_t  {\i muxPort}, float *  {\i voltage}, I2C_HandleTypeDef *  {\i handler})}}
\par
{\bkmkstart AAAAAAAAQE}
{\bkmkend AAAAAAAAQE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read analog voltage from the ADS1115. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function reads the analog voltage from the specified multiplexer (mux) port of the ADS1115 ADC and returns the result as a floating-point voltage value.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i muxPort} \cell }{The multiplexer (mux) port to read from. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i voltage} \cell }{Pointer to store the read voltage value.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
HAL_StatusTypeDef indicating success or failure.\par
}}Read analog voltage from the ADS1115.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i muxPort} \cell }{Multiplexer configuration for the ADC. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i voltage} \cell }{Pointer to store the converted voltage. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Return values\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i HAL} \cell }{status. \cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v ADS1115_1_I2C_Handler\:ads1115.h}
{\xe \v ads1115.h\:ADS1115_1_I2C_Handler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
I2C_HandleTypeDef ADS1115_1_I2C_Handler}}
\par
{\bkmkstart AAAAAAAAQF}
{\bkmkend AAAAAAAAQF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
I2C Handlers for ADS1115 \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ads1115.h\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/ads1115.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/ads1115.h}
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
13 {\cf21 #ifndef INC_JEEVANLITE_PERIPHERALS_ANALOG_ADS1115_H_}\par
14 {\cf21 #define INC_JEEVANLITE_PERIPHERALS_ANALOG_ADS1115_H_}\par
15 \par
16 {\cf20 /******************************************************************************/}\par
17 {\cf20 /*                                INCLUDE FILES                               */}\par
18 {\cf20 /******************************************************************************/}\par
19 \par
20 {\cf21 #include "stdint.h"}\par
21 {\cf21 #include "stm32f4xx_hal.h"}\par
22 \par
23 {\cf20 /******************************************************************************/}\par
24 {\cf20 /*                                FUNCTION BODY                               */}\par
25 {\cf20 /******************************************************************************/}\par
26 uint16_t Trigger_Ads1115_Raw_Adc;\par
27 uint8_t Proximal_Sensor_ADS1115,_5010DP_Sensor_ADS1115,ENVITEC_Sensor_ADS1115;\par
32 {\cf21 #define ADS1115_ADDRESS (0X48<<1) }\par
39 {\cf21 #define ADS1115_OS (0b0 << 7) }\par
46 {\cf21 #define ADS1115_MUX_AIN0 (0b100 << 4) }\par
47 {\cf21 #define ADS1115_MUX_AIN1 (0b101 << 4) }\par
48 {\cf21 #define ADS1115_MUX_AIN2 (0b110 << 4) }\par
49 {\cf21 #define ADS1115_MUX_AIN3 (0b111 << 4) }\par
56 {\cf21 #define ADS1115_PGA_TWOTHIRDS   (0b000 << 1) }\par
57 {\cf21 #define ADS1115_PGA_ONE         (0b001 << 1) }\par
58 {\cf21 #define ADS1115_PGA_TWO         (0b010 << 1) }\par
59 {\cf21 #define ADS1115_PGA_FOUR        (0b011 << 1) }\par
60 {\cf21 #define ADS1115_PGA_EIGHT       (0b100 << 1) }\par
61 {\cf21 #define ADS1115_PGA_SIXTEEN     (0b111 << 1) }\par
68 {\cf21 #define ADS1115_MODE (0b0) }\par
75 {\cf21 #define ADS1115_DATA_RATE_8     (0b000 << 5)    }\par
76 {\cf21 #define ADS1115_DATA_RATE_16    (0b001 << 5)    }\par
77 {\cf21 #define ADS1115_DATA_RATE_32    (0b010 << 5)    }\par
78 {\cf21 #define ADS1115_DATA_RATE_64    (0b011 << 5)    }\par
79 {\cf21 #define ADS1115_DATA_RATE_128   (0b100 << 5)    }\par
80 {\cf21 #define ADS1115_DATA_RATE_250   (0b101 << 5)    }\par
81 {\cf21 #define ADS1115_DATA_RATE_475   (0b110 << 5)    }\par
82 {\cf21 #define ADS1115_DATA_RATE_860   (0b111 << 5)    }\par
89 {\cf21 #define ADS1115_COMP_MODE   (0b0 << 4) }\par
90 {\cf21 #define ADS1115_COMP_POL    (0b0 << 3) }\par
91 {\cf21 #define ADS1115_COMP_LAT    (0b0 << 2) }\par
92 {\cf21 #define ADS1115_COMP_QUE    (0b11)     }\par
99 {\cf21 #define ADS1115_CONVER_REG 0x0 }\par
100 {\cf21 #define ADS1115_CONFIG_REG 0x1 }\par
107 {\cf21 #define ADS1115_TIMEOUT 1 }\par
113 I2C_HandleTypeDef ADS1115_1_I2C_Handler, ADS1115_2_I2C_Handler,ADS1115_3_I2C_Handler;\par
114 \par
124 HAL_StatusTypeDef ADS1115_Init(uint8_t ads_reference, I2C_HandleTypeDef *handler);\par
125 \par
126 \par
138 HAL_StatusTypeDef ADS1115_Read(uint16_t muxPort, {\cf18 float} *voltage, I2C_HandleTypeDef *handler);\par
139 \par
140 {\cf21 #endif }{\cf20 /* INC_JEEVANLITE_PERIPHERALS_ANALOG_ADS1115_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
constants.h\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/constants.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/constants.h}
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /******************************************************************************/}\par
2 {\cf20 /*                                                                            */}\par
3 {\cf20 /* Project      : JeevanLite                                                  */}\par
4 {\cf20 /*                                                                            */}\par
5 {\cf20 /*----------------------------------------------------------------------------*/}\par
6 {\cf20 /*                                                                            */}\par
7 {\cf20 /* @file        : constants.h                                                 */}\par
8 {\cf20 /* @author      : GOWTHAMAAN, ABS2020E007                                     */}\par
9 {\cf20 /* @date        : 21-11-2023, 15:12                                           */}\par
10 {\cf20 /*                                                                            */}\par
11 {\cf20 /*----------------------------------------------------------------------------*/}\par
12 {\cf20 /* @brief       : System Constants                                            */}\par
13 {\cf20 /******************************************************************************/}\par
14 \par
15 {\cf21 #ifndef INC_JEEVANLITE_SHARED_CONSTANTS_H_}\par
16 {\cf21 #define INC_JEEVANLITE_SHARED_CONSTANTS_H_}\par
17 \par
18 {\cf20 /******************************************************************************/}\par
19 {\cf20 /*                                INCLUDE FILES                               */}\par
20 {\cf20 /******************************************************************************/}\par
21 \par
22 \par
23 \par
24 {\cf20 /******************************************************************************/}\par
25 {\cf20 /*                                FUNCTION BODY                               */}\par
26 {\cf20 /******************************************************************************/}\par
27 \par
28 {\cf21 #define ADC_RESOLUTION 4095}\par
29 {\cf21 #define ADS1115_RESOLUTION 32767}\par
30 {\cf21 #define CALIBRATION_COUNT 1000}\par
31 {\cf21 #define FLOW_DEL_T 2}\par
32 {\cf21 #define VOLUME_MAX 60000}\par
33 \par
34 {\cf21 #endif }{\cf20 /* INC_JEEVANLITE_SHARED_CONSTANTS_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/controlsys.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/controlsys.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/controlsys.h}
{\bkmkstart AAAAAAAAQG}
{\bkmkend AAAAAAAAQG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of control system. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "stdio.h"}\par
{\f2 #include "stm32f4xx_hal.h"}\par
{\f2 #include "main.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b controlsys}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure Representing members used for pid. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b controlsys_Init} ({\b controlsys} *cs)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
controlsys_Init. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b controlsys_Update} ({\b controlsys} *cs, float set, float mea)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
controlsys_Update. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b controlsys} {\b Parker_valve_tune}{\bkmkstart AAAAAAAAQH}
{\bkmkend AAAAAAAAQH}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of control system. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sarath Kumar \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
27/03/24  \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v controlsys_Init\:controlsys.h}
{\xe \v controlsys.h\:controlsys_Init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void controlsys_Init ({\b controlsys} *  {\i cs})}}
\par
{\bkmkstart AAAAAAAAQI}
{\bkmkend AAAAAAAAQI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
controlsys_Init. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i controlsys.} \cell }{\cell }
{\row }
}
controlsys_Init. \par
}}
{\xe \v controlsys_Update\:controlsys.h}
{\xe \v controlsys.h\:controlsys_Update}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float controlsys_Update ({\b controlsys} *  {\i cs}, float  {\i set}, float  {\i mea})}}
\par
{\bkmkstart AAAAAAAAQJ}
{\bkmkend AAAAAAAAQJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
controlsys_Update. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The DAC value corresponds to the proportional valve opening\par
}}controlsys_Update. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
controlsys.h\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/controlsys.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/controlsys.h}
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
11 {\cf21 #ifndef CONTROLSYS_H}\par
12 {\cf21 #define CONTROLSYS_H}\par
13 \par
14 \par
15 {\cf21 #include "stdio.h"}\par
16 {\cf21 #include "stm32f4xx_hal.h"}\par
17 {\cf21 #include "main.h"}\par
18 \par
19 \par
26 {\cf17 typedef} {\cf17 struct }\{\par
27 \par
28     {\cf18 float} Kp;\par
29     {\cf18 float} Ki;\par
30     {\cf18 float} Kd;\par
31     {\cf18 float} tau;\par
32     {\cf18 float} a1;\par
33     {\cf18 float} a2;\par
34     {\cf18 float} b1;\par
35     {\cf18 float} b2;\par
36     {\cf18 float} T;\par
37     {\cf18 float} area;\par
38     {\cf18 float} prevdif;\par
39     {\cf18 float} rate;\par
40     {\cf18 float} prevmea;      \par
41     {\cf18 float} out;\par
42 \par
43 \} controlsys;\par
44 \par
45 \par
50 {\cf18 void}  controlsys_Init(controlsys *cs);\par
51 \par
56 {\cf18 float} controlsys_Update(controlsys *cs, {\cf18 float} set, {\cf18 float} mea);\par
57 \par
58 \par
59 controlsys Parker_valve_tune;\par
60 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/database.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/database.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/database.h}
{\bkmkstart AAAAAAAAQK}
{\bkmkend AAAAAAAAQK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of Graph variables. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "stdint.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b INSTANTANEOUS_VALUE}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure main patient Graph values. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b init_database} (){\bkmkstart AAAAAAAAQL}
{\bkmkend AAAAAAAAQL}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize the graph data. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b INSTANTANEOUS_VALUE} {\b GRAPH_VALUES}{\bkmkstart AAAAAAAAQM}
{\bkmkend AAAAAAAAQM}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
graph data parameter }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b ADC1_DATA} [2]{\bkmkstart AAAAAAAAQN}
{\bkmkend AAAAAAAAQN}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adc value. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of Graph variables. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sarath Kumar \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
27/03/24 \par
}}This file contains the Declaration of Graph variables. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
database.h\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/database.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/database.h}
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
12 {\cf21 #ifndef INC_JEEVANLITE_SHARED_DATABASE_H_}\par
13 {\cf21 #define INC_JEEVANLITE_SHARED_DATABASE_H_}\par
14 \par
15 {\cf20 /******************************************************************************/}\par
16 {\cf20 /*                                INCLUDE FILES                               */}\par
17 {\cf20 /******************************************************************************/}\par
18 \par
19 {\cf21 #include "stdint.h"}\par
20 \par
21 {\cf20 /******************************************************************************/}\par
22 {\cf20 /*                                FUNCTION BODY                               */}\par
23 {\cf20 /******************************************************************************/}\par
24 \par
25 \par
26 \par
31 {\cf17 typedef} {\cf17 struct}\{\par
32     uint8_t pressure;               \par
33     {\cf18 float} flow;                     \par
34     {\cf18 float} volume;                   \par
35     int8_t oxygen;                  \par
36     {\cf18 float} oxygen_flow;              \par
37     int16_t Maximum_oxygen_flow;    \par
38 \}INSTANTANEOUS_VALUE;\par
39 \par
40 INSTANTANEOUS_VALUE GRAPH_VALUES;     \par
41 \par
42 uint16_t ADC1_DATA[2];                \par
43 \par
44 \par
48 {\cf18 void} init_database();\par
49 \par
50 {\cf21 #endif }{\cf20 /* INC_JEEVANLITE_SHARED_DATABASE_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
enum.h\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/enum.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/enum.h}
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /******************************************************************************/}\par
2 {\cf20 /*                                                                            */}\par
3 {\cf20 /* Project      : JeevanLite                                                  */}\par
4 {\cf20 /*                                                                            */}\par
5 {\cf20 /*----------------------------------------------------------------------------*/}\par
6 {\cf20 /*                                                                            */}\par
7 {\cf20 /* @file        : enum.h                                                      */}\par
8 {\cf20 /* @author      : GOWTHAMAAN, ABS2020E007                                     */}\par
9 {\cf20 /* @date        : 20-11-2023, 15:31                                           */}\par
10 {\cf20 /*                                                                            */}\par
11 {\cf20 /*----------------------------------------------------------------------------*/}\par
12 {\cf20 /* @brief       : ENUM Declaration                                            */}\par
13 {\cf20 /******************************************************************************/}\par
14 \par
15 {\cf21 #ifndef INC_JEEVANLITE_SHARED_ENUM_H_}\par
16 {\cf21 #define INC_JEEVANLITE_SHARED_ENUM_H_}\par
17 \par
18 {\cf20 /******************************************************************************/}\par
19 {\cf20 /*                                INCLUDE FILES                               */}\par
20 {\cf20 /******************************************************************************/}\par
21 \par
22 \par
23 {\cf20 /******************************************************************************/}\par
24 {\cf20 /*                                FUNCTION BODY                               */}\par
25 {\cf20 /******************************************************************************/}\par
26 \par
27 \par
34 {\cf17 typedef} {\cf17 enum} \{\par
35     CONTROL_PRESSURE, \par
36     CONTROL_FLOW,     \par
37     CONTROL_SPEED     \par
38 \} CONTROLLER_TYPE;\par
39 \par
40 \par
41 {\cf21 #endif }{\cf20 /* INC_JEEVANLITE_SHARED_ENUM_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/mpx5010.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/mpx5010.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/mpx5010.h}
{\bkmkstart AAAAAAAAQO}
{\bkmkend AAAAAAAAQO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of 5010 Pressure sensor Configuration. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <SENSORS_INTERFACE/sensor.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MPX5010_init} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize the MPX5010 sensor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MPX5010_calibrate} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calibrate the MPX5010 sensor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MPX5010_read} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read data from the MPX5010 sensor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b MPX5010_read_adc} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Perform analog-to-digital conversion for the MPX5010 sensor. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b SENSOR} {\b MPX5010}{\bkmkstart AAAAAAAAQP}
{\bkmkend AAAAAAAAQP}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MPX5010 Sensor - Defined as a generic sensor. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of 5010 Pressure sensor Configuration. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sarath Kumar \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
27/03/24 \par
}}This file contains the Declaration of 5010 Pressure sensor, including the initialization \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v MPX5010_calibrate\:mpx5010.h}
{\xe \v mpx5010.h\:MPX5010_calibrate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MPX5010_calibrate ()}}
\par
{\bkmkstart AAAAAAAAQQ}
{\bkmkend AAAAAAAAQQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calibrate the MPX5010 sensor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calibrate the MPX5010 sensor. \par
}}
{\xe \v MPX5010_init\:mpx5010.h}
{\xe \v mpx5010.h\:MPX5010_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MPX5010_init ()}}
\par
{\bkmkstart AAAAAAAAQR}
{\bkmkend AAAAAAAAQR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize the MPX5010 sensor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize the MPX5010 sensor.\par
MPX5010_init. This function is initialize pressure sensor. \par
}}
{\xe \v MPX5010_read\:mpx5010.h}
{\xe \v mpx5010.h\:MPX5010_read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MPX5010_read ()}}
\par
{\bkmkstart AAAAAAAAQS}
{\bkmkend AAAAAAAAQS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read data from the MPX5010 sensor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read data from the MPX5010 sensor.\par
MPX5010_read. This function is Calculate the runtime pressure value in cmh20.\par
{
\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab {\f2 https://hackaday.com/2019/09/06/sensor-filters-for-coders/}\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab {\f2 https://electronics.stackexchange.com/questions/30370/fast-and-memory-efficient-moving-average-calculation}\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab {\f2 https://stackoverflow.com/questions/12636613/how-to-calculate-moving-average-without-keeping-the-count-and-data-total} \par}
}}
{\xe \v MPX5010_read_adc\:mpx5010.h}
{\xe \v mpx5010.h\:MPX5010_read_adc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float MPX5010_read_adc ()}}
\par
{\bkmkstart AAAAAAAAQT}
{\bkmkend AAAAAAAAQT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Perform analog-to-digital conversion for the MPX5010 sensor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Perform analog-to-digital conversion for the MPX5010 sensor.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Return values\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Vout} \cell }{(in mV) \cell }
{\row }
}
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mpx5010.h\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/mpx5010.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/mpx5010.h}
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
13 {\cf21 #ifndef INC_JEEVANLITE_PERIPHERALS_SENSORS_MPX5010_H_}\par
14 {\cf21 #define INC_JEEVANLITE_PERIPHERALS_SENSORS_MPX5010_H_}\par
15 \par
16 {\cf20 /******************************************************************************/}\par
17 {\cf20 /*                                INCLUDE FILES                               */}\par
18 {\cf20 /******************************************************************************/}\par
19 \par
20 {\cf21 #include <SENSORS_INTERFACE/sensor.h>}\par
21 \par
22 {\cf20 /******************************************************************************/}\par
23 {\cf20 /*                                FUNCTION BODY                               */}\par
24 {\cf20 /******************************************************************************/}\par
25 \par
30 SENSOR MPX5010;\par
31 \par
35 {\cf18 void} MPX5010_init();\par
36 \par
40 {\cf18 void} MPX5010_calibrate();\par
41 \par
45 {\cf18 void} MPX5010_read();\par
46 \par
50 {\cf18 float} MPX5010_read_adc();\par
51 \par
52 {\cf21 #endif }{\cf20 /* INC_JEEVANLITE_PERIPHERALS_SENSORS_MPX5010_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/mpx5010dp.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/mpx5010dp.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/mpx5010dp.h}
{\bkmkstart AAAAAAAAQU}
{\bkmkend AAAAAAAAQU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of mpx5010dp O2 pressure sensor integration. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <SENSORS_INTERFACE/sensor.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MPX5010DP_init} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize the MPX5010DP sensor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MPX5010DP_calibrate} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calibrate the MPX5010DP sensor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MPX5010DP_read} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read data from the MPX5010DP sensor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b MPX5010DP_read_adc} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Perform analog-to-digital conversion for the MPX5010DP sensor. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b SENSOR} {\b MPX5010DP}{\bkmkstart AAAAAAAAQV}
{\bkmkend AAAAAAAAQV}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of mpx5010dp O2 pressure sensor integration. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sarath Kumar \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
27/03/24 \par
}}This file contains the Declaration of mpx5010dp O2 pressure sensor integration, including the initialization. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v MPX5010DP_calibrate\:mpx5010dp.h}
{\xe \v mpx5010dp.h\:MPX5010DP_calibrate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MPX5010DP_calibrate ()}}
\par
{\bkmkstart AAAAAAAAQW}
{\bkmkend AAAAAAAAQW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calibrate the MPX5010DP sensor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calibrate the MPX5010DP sensor. \par
}}
{\xe \v MPX5010DP_init\:mpx5010dp.h}
{\xe \v mpx5010dp.h\:MPX5010DP_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MPX5010DP_init ()}}
\par
{\bkmkstart AAAAAAAAQX}
{\bkmkend AAAAAAAAQX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize the MPX5010DP sensor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize the MPX5010DP sensor.\par
MPX5010DP_init. This function is initialize O2 flow sensor. \par
}}
{\xe \v MPX5010DP_read\:mpx5010dp.h}
{\xe \v mpx5010dp.h\:MPX5010DP_read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MPX5010DP_read ()}}
\par
{\bkmkstart AAAAAAAAQY}
{\bkmkend AAAAAAAAQY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read data from the MPX5010DP sensor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read data from the MPX5010DP sensor.\par
MPX5010DP_read. This function is Calculate the runtime O2 Flow value in L/min.\par
{
\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab {\f2 https://hackaday.com/2019/09/06/sensor-filters-for-coders/}\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab {\f2 https://electronics.stackexchange.com/questions/30370/fast-and-memory-efficient-moving-average-calculation}\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab {\f2 https://stackoverflow.com/questions/12636613/how-to-calculate-moving-average-without-keeping-the-count-and-data-total} \par}
}}
{\xe \v MPX5010DP_read_adc\:mpx5010dp.h}
{\xe \v mpx5010dp.h\:MPX5010DP_read_adc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float MPX5010DP_read_adc ()}}
\par
{\bkmkstart AAAAAAAAQZ}
{\bkmkend AAAAAAAAQZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Perform analog-to-digital conversion for the MPX5010DP sensor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Perform analog-to-digital conversion for the MPX5010DP sensor.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Return values\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Vout} \cell }{(in mV) \cell }
{\row }
}
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mpx5010dp.h\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/mpx5010dp.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/mpx5010dp.h}
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
13 {\cf21 #ifndef INC_JEEVANLITE_PERIPHERALS_SENSORS_MPX5010DP_H_}\par
14 {\cf21 #define INC_JEEVANLITE_PERIPHERALS_SENSORS_MPX5010DP_H_}\par
15 \par
16 {\cf20 /******************************************************************************/}\par
17 {\cf20 /*                                INCLUDE FILES                               */}\par
18 {\cf20 /******************************************************************************/}\par
19 \par
20 {\cf21 #include <SENSORS_INTERFACE/sensor.h>}\par
21 \par
22 {\cf20 /******************************************************************************/}\par
23 {\cf20 /*                                FUNCTION BODY                               */}\par
24 {\cf20 /******************************************************************************/}\par
25 \par
26 SENSOR MPX5010DP;\par
27 \par
31 {\cf18 void} MPX5010DP_init();\par
32 \par
36 {\cf18 void} MPX5010DP_calibrate();\par
37 \par
41 {\cf18 void} MPX5010DP_read();\par
42 \par
46 {\cf18 float} MPX5010DP_read_adc();\par
47 \par
48 \par
49 {\cf21 #endif }{\cf20 /* INC_JEEVANLITE_PERIPHERALS_SENSORS_MPX5010DP_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/mpx7002.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/mpx7002.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/mpx7002.h}
{\bkmkstart AAAAAAAARA}
{\bkmkend AAAAAAAARA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of mpx7002 Sensor integration. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <SENSORS_INTERFACE/sensor.h>}\par
{\f2 #include <SENSORS_INTERFACE/utilities.h>}\par
{\f2 #include "main.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MPX7002_init} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize the MPX7002 sensor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MPX7002_calibrate} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calibrate the MPX7002 sensor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MPX7002_read} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read data from the MPX7002 sensor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b MPX7002_read_adc} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Perform analog-to-digital conversion for the MPX7002 sensor. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b SENSOR} {\b MPX7002}{\bkmkstart AAAAAAAARB}
{\bkmkend AAAAAAAARB}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b KALMAN_CONSTANTS} {\b IIR}{\bkmkstart AAAAAAAARC}
{\bkmkend AAAAAAAARC}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of mpx7002 Sensor integration. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sarath Kumar \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
27/03/24 \par
}}This file contains the Declaration of mpx7002 Sensor integration, including the initialization. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v MPX7002_calibrate\:mpx7002.h}
{\xe \v mpx7002.h\:MPX7002_calibrate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MPX7002_calibrate ()}}
\par
{\bkmkstart AAAAAAAARD}
{\bkmkend AAAAAAAARD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calibrate the MPX7002 sensor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calibrate the MPX7002 sensor. \par
}}
{\xe \v MPX7002_init\:mpx7002.h}
{\xe \v mpx7002.h\:MPX7002_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MPX7002_init ()}}
\par
{\bkmkstart AAAAAAAARE}
{\bkmkend AAAAAAAARE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize the MPX7002 sensor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize the MPX7002 sensor.\par
MPX7002_init. This function is initialize flow sensor. \par
}}
{\xe \v MPX7002_read\:mpx7002.h}
{\xe \v mpx7002.h\:MPX7002_read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MPX7002_read ()}}
\par
{\bkmkstart AAAAAAAARF}
{\bkmkend AAAAAAAARF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read data from the MPX7002 sensor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read data from the MPX7002 sensor.\par
MPX7002_read. This function is Calculate the runtime Flow value in L/min.\par
{
\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab {\f2 https://hackaday.com/2019/09/06/sensor-filters-for-coders/}\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab {\f2 https://electronics.stackexchange.com/questions/30370/fast-and-memory-efficient-moving-average-calculation}\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab {\f2 https://stackoverflow.com/questions/12636613/how-to-calculate-moving-average-without-keeping-the-count-and-data-total} \par}
}}
{\xe \v MPX7002_read_adc\:mpx7002.h}
{\xe \v mpx7002.h\:MPX7002_read_adc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float MPX7002_read_adc ()}}
\par
{\bkmkstart AAAAAAAARG}
{\bkmkend AAAAAAAARG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Perform analog-to-digital conversion for the MPX7002 sensor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Perform analog-to-digital conversion for the MPX7002 sensor.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Return values\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Vout} \cell }{(in mV) \cell }
{\row }
}
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mpx7002.h\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/mpx7002.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/mpx7002.h}
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
13 {\cf21 #ifndef INC_JEEVANLITE_PERIPHERALS_SENSORS_MPX7002_H_}\par
14 {\cf21 #define INC_JEEVANLITE_PERIPHERALS_SENSORS_MPX7002_H_}\par
15 \par
16 {\cf20 /******************************************************************************/}\par
17 {\cf20 /*                                INCLUDE FILES                               */}\par
18 {\cf20 /******************************************************************************/}\par
19 \par
20 {\cf21 #include <SENSORS_INTERFACE/sensor.h>}\par
21 {\cf21 #include <SENSORS_INTERFACE/utilities.h>}\par
22 {\cf21 #include "main.h"}\par
23 {\cf20 /******************************************************************************/}\par
24 {\cf20 /*                                FUNCTION BODY                               */}\par
25 {\cf20 /******************************************************************************/}\par
26 \par
27 SENSOR MPX7002;\par
28 KALMAN_CONSTANTS IIR;\par
29 \par
30 \par
31 \par
32 \par
36 {\cf18 void} MPX7002_init();\par
37 \par
41 {\cf18 void} MPX7002_calibrate();\par
42 \par
46 {\cf18 void} MPX7002_read();\par
47 \par
51 {\cf18 float} MPX7002_read_adc();\par
52 \par
53 {\cf21 #endif }{\cf20 /* INC_JEEVANLITE_PERIPHERALS_SENSORS_MPX7002_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/oom202.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/oom202.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/oom202.h}
{\bkmkstart AAAAAAAARH}
{\bkmkend AAAAAAAARH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of Oxygen_Sensor_Integeration. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <SENSORS_INTERFACE/sensor.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OOM202_init} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize the OOM202 sensor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OOM202_calibrate} (uint8_t)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calibrate the OOM202 sensor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OOM202_calculate_efficiency} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculate the efficiency of the OOM202 sensor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OOM202_read} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read data from the OOM202 sensor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b OOM202_read_adc} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Perform analog-to-digital conversion for the OOM202 sensor. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b SENSOR} {\b OOM202}{\bkmkstart AAAAAAAARI}
{\bkmkend AAAAAAAARI}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OOM202 Sensor - Defined as a generic sensor. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of Oxygen_Sensor_Integeration. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sarath Kumar \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
27/03/24 \par
}}This file contains the Declaration of Oxygen_Sensor_Integeration., including the initialization \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v OOM202_calculate_efficiency\:oom202.h}
{\xe \v oom202.h\:OOM202_calculate_efficiency}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void OOM202_calculate_efficiency ()}}
\par
{\bkmkstart AAAAAAAARJ}
{\bkmkend AAAAAAAARJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculate the efficiency of the OOM202 sensor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculate the efficiency of the OOM202 sensor. \par
}}
{\xe \v OOM202_calibrate\:oom202.h}
{\xe \v oom202.h\:OOM202_calibrate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void OOM202_calibrate (uint8_t  {\i level})}}
\par
{\bkmkstart AAAAAAAARK}
{\bkmkend AAAAAAAARK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calibrate the OOM202 sensor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calibrate the OOM202 sensor. \par
}}
{\xe \v OOM202_init\:oom202.h}
{\xe \v oom202.h\:OOM202_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void OOM202_init ()}}
\par
{\bkmkstart AAAAAAAARL}
{\bkmkend AAAAAAAARL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize the OOM202 sensor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize the OOM202 sensor. \par
}}
{\xe \v OOM202_read\:oom202.h}
{\xe \v oom202.h\:OOM202_read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void OOM202_read ()}}
\par
{\bkmkstart AAAAAAAARM}
{\bkmkend AAAAAAAARM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read data from the OOM202 sensor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read data from the OOM202 sensor.\par
{
\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab {\f2 https://hackaday.com/2019/09/06/sensor-filters-for-coders/}\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab {\f2 https://electronics.stackexchange.com/questions/30370/fast-and-memory-efficient-moving-average-calculation}\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab {\f2 https://stackoverflow.com/questions/12636613/how-to-calculate-moving-average-without-keeping-the-count-and-data-total} \par}
}}
{\xe \v OOM202_read_adc\:oom202.h}
{\xe \v oom202.h\:OOM202_read_adc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float OOM202_read_adc ()}}
\par
{\bkmkstart AAAAAAAARN}
{\bkmkend AAAAAAAARN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Perform analog-to-digital conversion for the OOM202 sensor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Perform analog-to-digital conversion for the OOM202 sensor.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Return values\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Vout} \cell }{(in mV) \cell }
{\row }
}
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
oom202.h\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/oom202.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/oom202.h}
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
13 {\cf21 #ifndef INC_JEEVANLITE_PERIPHERALS_SENSORS_OOM202_H_}\par
14 {\cf21 #define INC_JEEVANLITE_PERIPHERALS_SENSORS_OOM202_H_}\par
15 \par
16 {\cf20 /******************************************************************************/}\par
17 {\cf20 /*                                INCLUDE FILES                               */}\par
18 {\cf20 /******************************************************************************/}\par
19 \par
20 {\cf21 #include <SENSORS_INTERFACE/sensor.h>}\par
21 \par
22 {\cf20 /******************************************************************************/}\par
23 {\cf20 /*                                FUNCTION BODY                               */}\par
24 {\cf20 /******************************************************************************/}\par
25 \par
30 SENSOR OOM202;\par
31 \par
35 {\cf18 void} OOM202_init();\par
36 \par
40 {\cf18 void} OOM202_calibrate(uint8_t);\par
41 \par
45 {\cf18 void} OOM202_calculate_efficiency();\par
46 \par
50 {\cf18 void} OOM202_read();\par
51 \par
55 {\cf18 float} OOM202_read_adc();\par
56 \par
57 \par
58 {\cf21 #endif }{\cf20 /* INC_JEEVANLITE_PERIPHERALS_SENSORS_OOM202_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sensor.h\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/sensor.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/sensor.h}
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /******************************************************************************/}\par
2 {\cf20 /*                                                                            */}\par
3 {\cf20 /* Project      : JeevanLite                                                  */}\par
4 {\cf20 /*                                                                            */}\par
5 {\cf20 /*----------------------------------------------------------------------------*/}\par
6 {\cf20 /*                                                                            */}\par
7 {\cf20 /* @file        : sensor.h                                                */}\par
8 {\cf20 /* @author      : GOWTHAMAAN, ABS2020E007                                     */}\par
9 {\cf20 /* @date        : 21-11-2023, 16:16                                           */}\par
10 {\cf20 /*                                                                            */}\par
11 {\cf20 /*----------------------------------------------------------------------------*/}\par
12 {\cf20 /* @brief       : Sensor Structure                                            */}\par
13 {\cf20 /******************************************************************************/}\par
14 \par
15 {\cf21 #ifndef INC_JEEVANLITE_PERIPHERALS_SENSORS_SENSOR_H_}\par
16 {\cf21 #define INC_JEEVANLITE_PERIPHERALS_SENSORS_SENSOR_H_}\par
17 \par
18 {\cf20 /******************************************************************************/}\par
19 {\cf20 /*                                INCLUDE FILES                               */}\par
20 {\cf20 /******************************************************************************/}\par
21 \par
22 {\cf21 #include "stdint.h"}\par
23 \par
24 {\cf20 /******************************************************************************/}\par
25 {\cf20 /*                                FUNCTION BODY                               */}\par
26 {\cf20 /******************************************************************************/}\par
27 \par
33 {\cf17 typedef} {\cf17 struct}\par
34 \{\par
35     uint16_t offset;              \par
36     uint16_t offset_minimum;      \par
37     uint16_t offset_maximum;      \par
38     uint16_t supply_voltage;      \par
39     {\cf18 float} value;                  \par
40     uint16_t current_reading;     \par
41     uint16_t previous_reading;    \par
42     uint8_t operational_status;   \par
43     uint8_t sensor_ready;         \par
44     {\cf18 float} sensitivity;            \par
45     {\cf18 float} smoothing_factor;       \par
46     uint8_t efficiency;           \par
47 \} SENSOR;\par
48 \par
49 \par
50 {\cf21 #endif }{\cf20 /* INC_JEEVANLITE_PERIPHERALS_SENSORS_SENSOR_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
utilities.h\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/utilities.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/utilities.h}
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /******************************************************************************/}\par
2 {\cf20 /*                                                                            */}\par
3 {\cf20 /* Project      : JeevanLite                                                  */}\par
4 {\cf20 /*                                                                            */}\par
5 {\cf20 /*----------------------------------------------------------------------------*/}\par
6 {\cf20 /*                                                                            */}\par
7 {\cf20 /* @file        : enum.h                                                      */}\par
8 {\cf20 /* @author      : GOWTHAMAAN, ABS2020E007                                     */}\par
9 {\cf20 /* @date        : 20-11-2023, 15:31                                           */}\par
10 {\cf20 /*                                                                            */}\par
11 {\cf20 /*----------------------------------------------------------------------------*/}\par
12 {\cf20 /* @brief       : ENUM Declaration                                            */}\par
13 {\cf20 /******************************************************************************/}\par
14 \par
15 {\cf21 #ifndef INC_JEEVANLITE_SHARED_UTILITIES_H_}\par
16 {\cf21 #define INC_JEEVANLITE_SHARED_UTILITIES_H_}\par
17 \par
18 {\cf20 /******************************************************************************/}\par
19 {\cf20 /*                                INCLUDE FILES                               */}\par
20 {\cf20 /******************************************************************************/}\par
21 \par
22 {\cf21 #include "stdint.h"}\par
23 \par
24 {\cf20 /******************************************************************************/}\par
25 {\cf20 /*                                FUNCTION BODY                               */}\par
26 {\cf20 /******************************************************************************/}\par
27 \par
35 {\cf17 typedef} {\cf17 struct}\{\par
36     {\cf18 float} error_measurement;\par
37     {\cf18 float} error_estimate;\par
38     {\cf18 float} process_variance;\par
39 \}KALMAN_CONSTANTS;\par
40 \par
54 int16_t constraint(int16_t value, int16_t minimum, int16_t maximum);\par
55 \par
59 {\cf18 float} kalman_filter({\cf18 float} mea, {\cf18 float} *err_estimate, {\cf18 float} err_measure, {\cf18 float} q, int8_t last_estimate);\par
60 \par
61 {\cf21 #endif }{\cf20 /* INC_JEEVANLITE_SHARED_UTILITIES_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/wsen10101.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/wsen10101.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/wsen10101.h}
{\bkmkstart AAAAAAAARO}
{\bkmkend AAAAAAAARO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of Worth sensor integration. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <SENSORS_INTERFACE/sensor.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b WSEN10101_init} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize the WSEN10101 sensor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b WSEN10101_calibrate} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calibrate the WSEN10101 sensor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b WSEN10101_read} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read data from the WSEN10101 sensor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b WSEN10101_read_adc} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Perform analog-to-digital conversion for the WSEN10101 sensor. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b SENSOR} {\b WSEN10101}{\bkmkstart AAAAAAAARP}
{\bkmkend AAAAAAAARP}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
WSEN10101 Sensor - Defined as a generic sensor. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of Worth sensor integration. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sarath Kumar \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
27/03/24 \par
}}This file contains the Declaration of Worth sensor integration, including the initialization \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v WSEN10101_calibrate\:wsen10101.h}
{\xe \v wsen10101.h\:WSEN10101_calibrate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void WSEN10101_calibrate ()}}
\par
{\bkmkstart AAAAAAAARQ}
{\bkmkend AAAAAAAARQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calibrate the WSEN10101 sensor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calibrate the WSEN10101 sensor. \par
}}
{\xe \v WSEN10101_init\:wsen10101.h}
{\xe \v wsen10101.h\:WSEN10101_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void WSEN10101_init ()}}
\par
{\bkmkstart AAAAAAAARR}
{\bkmkend AAAAAAAARR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize the WSEN10101 sensor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize the WSEN10101 sensor. \par
}}
{\xe \v WSEN10101_read\:wsen10101.h}
{\xe \v wsen10101.h\:WSEN10101_read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void WSEN10101_read ()}}
\par
{\bkmkstart AAAAAAAARS}
{\bkmkend AAAAAAAARS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read data from the WSEN10101 sensor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read data from the WSEN10101 sensor.\par
{
\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab {\f2 https://hackaday.com/2019/09/06/sensor-filters-for-coders/}\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab {\f2 https://electronics.stackexchange.com/questions/30370/fast-and-memory-efficient-moving-average-calculation}\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab {\f2 https://stackoverflow.com/questions/12636613/how-to-calculate-moving-average-without-keeping-the-count-and-data-total} \par}
}}
{\xe \v WSEN10101_read_adc\:wsen10101.h}
{\xe \v wsen10101.h\:WSEN10101_read_adc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float WSEN10101_read_adc ()}}
\par
{\bkmkstart AAAAAAAART}
{\bkmkend AAAAAAAART}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Perform analog-to-digital conversion for the WSEN10101 sensor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Perform analog-to-digital conversion for the WSEN10101 sensor.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Return values\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Vout} \cell }{(in mV) \cell }
{\row }
}
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
wsen10101.h\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/wsen10101.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_INTERFACE/wsen10101.h}
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
13 {\cf21 #ifndef INC_JEEVANLITE_PERIPHERALS_SENSORS_WSEN10101_H_}\par
14 {\cf21 #define INC_JEEVANLITE_PERIPHERALS_SENSORS_WSEN10101_H_}\par
15 \par
16 {\cf20 /******************************************************************************/}\par
17 {\cf20 /*                                INCLUDE FILES                               */}\par
18 {\cf20 /******************************************************************************/}\par
19 \par
20 {\cf21 #include <SENSORS_INTERFACE/sensor.h>}\par
21 \par
22 {\cf20 /******************************************************************************/}\par
23 {\cf20 /*                                FUNCTION BODY                               */}\par
24 {\cf20 /******************************************************************************/}\par
25 \par
30 SENSOR WSEN10101;\par
31 \par
35 {\cf18 void} WSEN10101_init();\par
36 \par
40 {\cf18 void} WSEN10101_calibrate();\par
41 \par
45 {\cf18 void} WSEN10101_read();\par
46 \par
50 {\cf18 float} WSEN10101_read_adc();\par
51 \par
52 {\cf21 #endif }{\cf20 /* INC_JEEVANLITE_PERIPHERALS_SENSORS_WSEN10101_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_OFFSET/Sensor_Offset.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_OFFSET/Sensor_Offset.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_OFFSET/Sensor_Offset.h}
{\bkmkstart AAAAAAAARU}
{\bkmkend AAAAAAAARU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of Sensor offset calculation. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "stdio.h"}\par
{\f2 #include "stm32f4xx_hal.h"}\par
{\f2 #include "main.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Sensor_Offset_Task} (void *argument){\bkmkstart AAAAAAAARV}
{\bkmkend AAAAAAAARV}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sensor_Offset_Task. It is used to call the sensor offset function from within this task. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b One_Time_Task} (void *argument){\bkmkstart AAAAAAAARW}
{\bkmkend AAAAAAAARW}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
One_Time_Task. It interchanges the phase of the breath cycle. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

xTaskHandle {\b Sensor_Offset_Handler}{\bkmkstart AAAAAAAARX}
{\bkmkend AAAAAAAARX}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sensor offset handler task. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

xTaskHandle {\b One_Time_Handler}{\bkmkstart AAAAAAAARY}
{\bkmkend AAAAAAAARY}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
One_Time_Handler task. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of Sensor offset calculation. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sarath Kumar \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
27/03/24 \par
}}This file contains the Implementation of Sensor offset calculation, including the initialization. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Sensor_Offset.h\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_OFFSET/Sensor_Offset.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SENSORS/SENSORS_OFFSET/Sensor_Offset.h}
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
13 {\cf21 #ifndef INC_SENSOR_OFFSET_H_}\par
14 {\cf21 #define INC_SENSOR_OFFSET_H_}\par
15 \par
16 {\cf20 /******************************************************************************/}\par
17 {\cf20 /*                                INCLUDE FILES                               */}\par
18 {\cf20 /******************************************************************************/}\par
19 \par
20 {\cf21 #include "stdio.h"}\par
21 {\cf21 #include "stm32f4xx_hal.h"}\par
22 {\cf21 #include "main.h"}\par
23 \par
24 \par
25 {\cf20 /******************************************************************************/}\par
26 {\cf20 /*                                FUNCTION BODY                               */}\par
27 {\cf20 /******************************************************************************/}\par
28 \par
29 xTaskHandle Sensor_Offset_Handler;    \par
30 xTaskHandle One_Time_Handler;         \par
31 \par
32 \par
37 {\cf18 void} Sensor_Offset_Task({\cf18 void} *argument);\par
38 \par
43 {\cf18 void} One_Time_Task({\cf18 void} *argument);\par
44 \par
45 {\cf21 #endif }{\cf20 /* INC_SENSOR_OFFSET_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Service.h\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SERVICE/Service.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SERVICE/Service.h}
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20  * Service.h}\par
3 {\cf20  *}\par
4 {\cf20  *  Created on: Dec 27, 2023}\par
5 {\cf20  *      Author: asus}\par
6 {\cf20  */}\par
7 \par
8 {\cf21 #ifndef INC_AERO_INC_SERVICE_SERVICE_H_}\par
9 {\cf21 #define INC_AERO_INC_SERVICE_SERVICE_H_}\par
10 \par
11 \par
12 {\cf21 #include "stdio.h"}\par
13 {\cf21 #include "stm32f4xx_hal.h"}\par
14 {\cf21 #include "main.h"}\par
15 \par
16 \par
17 \par
18 \par
19 {\cf17 typedef} {\cf17 struct }__attribute__((packed))\par
20 \{\par
21     uint16_t  _header ;\par
22     uint8_t   _length ;\par
23     uint8_t   SERVICE_STATUS;\par
24     uint16_t  BLOWER_SIGNAL;\par
25     uint16_t  PROPORTIONAL_VALVE_SIGNAL;\par
26     uint8_t   SENSOR_OFFSET;\par
27     uint8_t   BLOWER_ENABLE;\par
28     uint8_t   EXPIRATORY_VALVE_CONTROL;\par
29     uint8_t   NEBULIZER_CONTROL;\par
30     uint8_t   NC2;\par
31     uint8_t   NC3;\par
32     uint8_t   NC4;\par
33     uint8_t   NC5;\par
34     uint8_t   NC6;\par
35     uint8_t   NC7;\par
36     uint8_t   NC8;\par
37     uint8_t   _CRC8;\par
38 \par
39 \} SERVICE_PACKET;\par
40 \par
41 \par
42 {\cf17 typedef} {\cf17 struct}\par
43 \{\par
44     uint8_t   Service_Status;\par
45     uint16_t  Blower_Signal;\par
46     uint16_t  Proportional_Valve_Signal;\par
47     uint8_t   Sensor_Offset;\par
48     uint8_t   Blower_Enable;\par
49     uint8_t   Expiratory_Valve_Control;\par
50     uint8_t   Nebulizer_Control;\par
51 \}Service;\par
52 \par
53 \par
54 {\cf17 typedef} {\cf17 struct }__attribute__((packed))\par
55 \{\par
56         uint16_t _header ;\par
57         uint8_t  _length ;\par
58         uint8_t   Sensor1_LSB;\par
59         uint8_t   Sensor1_MSB;\par
60         uint8_t   Sensor2_LSB;\par
61         uint8_t   Sensor2_MSB;\par
62         uint8_t   Sensor3_LSB;\par
63         uint8_t   Sensor3_MSB;\par
64         uint8_t   _CRC8;\par
65 \par
66 \} Send_Service_Packet;\par
67 \par
68 \par
69 \par
70 {\cf17 typedef} {\cf17 enum}\par
71 \{\par
72     SERVICE_FAIL          = 0X00,\par
73     SERVICE_PASS          = 0X01,\par
74 \par
75 \}Service_Result;\par
76 \par
77 {\cf18 void} Send_Serviced_Packet();\par
78 Send_Service_Packet SEND_SERVICE_PACKET;\par
79 \par
80 Service SERVICE;\par
81 xTaskHandle Service_Handler;\par
82 \par
83 {\cf18 void} Split_Service_Packets(SERVICE_PACKET *);\par
84 \par
85 {\cf18 void} SERVICE_Task({\cf18 void} *argument);\par
86 \par
87 {\cf21 #endif }{\cf20 /* INC_AERO_INC_SERVICE_SERVICE_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SUCTION.h\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SUCTION/SUCTION.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/SUCTION/SUCTION.h}
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20  * SUCTION.h}\par
3 {\cf20  *}\par
4 {\cf20  *  Created on: Mar 15, 2023}\par
5 {\cf20  *      Author: asus}\par
6 {\cf20  */}\par
7 \par
8 {\cf21 #ifndef INC_AERO_INC_SUCTION_SUCTION_H_}\par
9 {\cf21 #define INC_AERO_INC_SUCTION_SUCTION_H_}\par
10 \par
11 {\cf21 #include "stdio.h"}\par
12 {\cf21 #include "stm32f4xx_hal.h"}\par
13 {\cf21 #include "main.h"}\par
14 \par
15 \par
16 xTaskHandle Suction_Handler;\par
17 {\cf18 void} Suction_Task({\cf18 void} *argument);\par
18 \par
19 {\cf21 #endif }{\cf20 /* INC_AERO_INC_SUCTION_SUCTION_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Task_Create.h\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/TASK_CREATE_&_PERIPHERALS_INIT/Task_Create.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/TASK_CREATE_&_PERIPHERALS_INIT/Task_Create.h}
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20  * Task_Create.h}\par
3 {\cf20  *}\par
4 {\cf20  *  Created on: Jan 18, 2023}\par
5 {\cf20  *      Author: asus}\par
6 {\cf20  */}\par
7 \par
8 {\cf21 #ifndef INC_TASK_CREATE_H_}\par
9 {\cf21 #define INC_TASK_CREATE_H_}\par
10 \par
11 {\cf21 #include "stdio.h"}\par
12 {\cf21 #include "stm32f4xx_hal.h"}\par
13 {\cf21 #include "main.h"}\par
14 \par
15 \par
16 {\cf17 typedef} {\cf17 struct}\par
17 \{\par
18     uint16_t AdcData[3];\par
19 \}ADC_Pheriperal;\par
20 ADC_Pheriperal Adc;\par
21 \par
22 uint32_t free_heap_size;\par
23 \par
24 \par
25 {\cf18 void} Initial_Task_Create();\par
26 {\cf18 void} ADS1115_initialisation();\par
27 \par
28 {\cf21 #endif }{\cf20 /* INC_TASK_CREATE_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Vc_Simv_Assist_OFF.h\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/VC-SIMV/Vc_Simv_Assist_OFF.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/VC-SIMV/Vc_Simv_Assist_OFF.h}
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20  * Vc-Simv_Assist_OFF.h}\par
3 {\cf20  *}\par
4 {\cf20  *  Created on: Feb 17, 2023}\par
5 {\cf20  *      Author: asus}\par
6 {\cf20  */}\par
7 \par
8 {\cf21 #ifndef INC_AERO_INC_VC_SIMV_VC_SIMV_ASSIST_OFF_H_}\par
9 {\cf21 #define INC_AERO_INC_VC_SIMV_VC_SIMV_ASSIST_OFF_H_}\par
10 \par
11 {\cf21 #include "stdio.h"}\par
12 {\cf21 #include "stm32f4xx_hal.h"}\par
13 {\cf21 #include "main.h"}\par
14 \par
15 \par
16 \par
17 {\cf17 typedef} {\cf17 struct}\par
18 \{\par
19     {\cf18 int}  Blower_Wait_Time_Milli_Second;\par
20     {\cf18 int}  Trigger_Check_Wait_Time;\par
21 \}vcsimv;\par
22 \par
23 vcsimv VCsimv;\par
24 \par
25 xTaskHandle Vc_Simv_Assist_OFF_Handler;\par
26 {\cf18 void} Vc_Simv_Assist_OFF_Task({\cf18 void} *argument);\par
27 {\cf18 void} VC_SIMV_Assist_OFF_PATIENT_TRIGGER_HAPPEN_Expiration_Time_Variables_Reset();\par
28 {\cf18 void} VC_SIMV_Assist_OFF_PATIENT_TRIGGER_HAPPEN_Inspiration_Time_Variables_Reset();\par
29 {\cf18 void} VC_SIMV_Assist_OFF_Expiration_Time_Variables_Reset();\par
30 {\cf18 void} VC_SIMV_Assist_OFF_Inspiration_Time_Variables_Reset();\par
31 \par
32 {\cf21 #endif }{\cf20 /* INC_AERO_INC_VC_SIMV_VC_SIMV_ASSIST_OFF_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/VC-SIMV/Vc_Simv_Assist_ON.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/VC-SIMV/Vc_Simv_Assist_ON.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/VC-SIMV/Vc_Simv_Assist_ON.h}
{\bkmkstart AAAAAAAARZ}
{\bkmkend AAAAAAAARZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of VCSIMV ASSSIT ONmode. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "stdio.h"}\par
{\f2 #include "stm32f4xx_hal.h"}\par
{\f2 #include "main.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b VC_SIMV_mode_parameter}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure Representing VCSIMV Mode parameter variables. it includes expiration time ,rise time percentage variables. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Vc_Simv_Assist_ON_Task} (void *argument)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vc_Simv_Assist_ON_Task. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b VC_SIMV_Expiration_Time_Variables_Reset} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_SIMV_Expiration_Time_Variables_Reset. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b VC_SIMV_Inspiration_Time_Variables_Reset} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_SIMV_Inspiration_Time_Variables_Reset. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b VC_SIMV_Assist_ON_Expiration_Time_Variables_Reset} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_SIMV_Assist_ON_Expiration_Time_Variables_Reset. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b VC_SIMV_Assist_ON_Inspiration_Time_Variables_Reset} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_SIMV_Assist_ON_Inspiration_Time_Variables_Reset. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b Volume_max}{\bkmkstart AAAAAAAASA}
{\bkmkend AAAAAAAASA}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
holding maximum value volume value }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b VC_SIMV_mode_parameter} {\b VC_SIMV}{\bkmkstart AAAAAAAASB}
{\bkmkend AAAAAAAASB}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure variable. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

xTaskHandle {\b Vc_Simv_Assist_ON_Handler}{\bkmkstart AAAAAAAASC}
{\bkmkend AAAAAAAASC}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Task handler variable. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of VCSIMV ASSSIT ONmode. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sarath Kumar \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
27/03/24 \par
}}This file contains the Declaration VCSIMV ASSSIT ON mode variables \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v VC_SIMV_Assist_ON_Expiration_Time_Variables_Reset\:Vc_Simv_Assist_ON.h}
{\xe \v Vc_Simv_Assist_ON.h\:VC_SIMV_Assist_ON_Expiration_Time_Variables_Reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void VC_SIMV_Assist_ON_Expiration_Time_Variables_Reset ()}}
\par
{\bkmkstart AAAAAAAASD}
{\bkmkend AAAAAAAASD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_SIMV_Assist_ON_Expiration_Time_Variables_Reset. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_SIMV_Assist_ON_Expiration_Time_Variables_Reset. \par
}}
{\xe \v VC_SIMV_Assist_ON_Inspiration_Time_Variables_Reset\:Vc_Simv_Assist_ON.h}
{\xe \v Vc_Simv_Assist_ON.h\:VC_SIMV_Assist_ON_Inspiration_Time_Variables_Reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void VC_SIMV_Assist_ON_Inspiration_Time_Variables_Reset ()}}
\par
{\bkmkstart AAAAAAAASE}
{\bkmkend AAAAAAAASE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_SIMV_Assist_ON_Inspiration_Time_Variables_Reset. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_SIMV_Assist_ON_Inspiration_Time_Variables_Reset. \par
}}
{\xe \v Vc_Simv_Assist_ON_Task\:Vc_Simv_Assist_ON.h}
{\xe \v Vc_Simv_Assist_ON.h\:Vc_Simv_Assist_ON_Task}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Vc_Simv_Assist_ON_Task (void *  {\i argument})}}
\par
{\bkmkstart AAAAAAAASF}
{\bkmkend AAAAAAAASF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vc_Simv_Assist_ON_Task. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vc_Simv_Assist_ON_Task. \par
}}
{\xe \v VC_SIMV_Expiration_Time_Variables_Reset\:Vc_Simv_Assist_ON.h}
{\xe \v Vc_Simv_Assist_ON.h\:VC_SIMV_Expiration_Time_Variables_Reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void VC_SIMV_Expiration_Time_Variables_Reset ()}}
\par
{\bkmkstart AAAAAAAASG}
{\bkmkend AAAAAAAASG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_SIMV_Expiration_Time_Variables_Reset. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_SIMV_Expiration_Time_Variables_Reset. \par
}}
{\xe \v VC_SIMV_Inspiration_Time_Variables_Reset\:Vc_Simv_Assist_ON.h}
{\xe \v Vc_Simv_Assist_ON.h\:VC_SIMV_Inspiration_Time_Variables_Reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void VC_SIMV_Inspiration_Time_Variables_Reset ()}}
\par
{\bkmkstart AAAAAAAASH}
{\bkmkend AAAAAAAASH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_SIMV_Inspiration_Time_Variables_Reset. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_SIMV_Inspiration_Time_Variables_Reset. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Vc_Simv_Assist_ON.h\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/VC-SIMV/Vc_Simv_Assist_ON.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/VC-SIMV/Vc_Simv_Assist_ON.h}
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
12 {\cf21 #ifndef INC_AERO_INC_VC_SIMV_VC_SIMV_ASSIST_ON_H_}\par
13 {\cf21 #define INC_AERO_INC_VC_SIMV_VC_SIMV_ASSIST_ON_H_}\par
14 \par
15 {\cf21 #include "stdio.h"}\par
16 {\cf21 #include "stm32f4xx_hal.h"}\par
17 {\cf21 #include "main.h"}\par
18 \par
19 \par
24 {\cf17 typedef} {\cf17 struct}\par
25 \{\par
26     uint16_t VOLUME_Val;\par
27     uint8_t  PEEP_Val;\par
28     uint8_t  RESPIRATORY_RATE_Val;\par
29     uint8_t  FIO2_Val;\par
30     uint32_t INSPIRATION_TIME;\par
31     uint32_t EXPIRATION_TIME;\par
32     uint8_t  Inspiration_Time_Ratio;\par
33     uint8_t  Expiration_Time_Ratio;\par
34     uint8_t  FLOW_RATE_Val;\par
35 \par
36     uint8_t  TRIG_TYPE;\par
37     {\cf18 float}  TRIG_LMT;\par
38     uint16_t  TRIG_TIME;\par
39     uint16_t CALC_TRIG_VAL;\par
40     uint16_t TOLERANCE_EWAVE;\par
41     uint16_t TRIG_WINDOW;\par
42     uint8_t  Assist_Control;\par
43 \par
44 \}VC_SIMV_mode_parameter;\par
45 \par
46 {\cf18 int} Volume_max;                             \par
47 VC_SIMV_mode_parameter VC_SIMV;             \par
48 \par
49 xTaskHandle Vc_Simv_Assist_ON_Handler;      \par
50 \par
54 {\cf18 void} Vc_Simv_Assist_ON_Task({\cf18 void} *argument);\par
58 {\cf18 void} VC_SIMV_Expiration_Time_Variables_Reset();\par
62 {\cf18 void} VC_SIMV_Inspiration_Time_Variables_Reset();\par
66 {\cf18 void} VC_SIMV_Assist_ON_Expiration_Time_Variables_Reset();\par
70 {\cf18 void} VC_SIMV_Assist_ON_Inspiration_Time_Variables_Reset();\par
71 \par
72 {\cf21 #endif }{\cf20 /* INC_AERO_INC_VC_SIMV_VC_SIMV_ASSIST_ON_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/VC_CMV/Vc_Cmv.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/VC_CMV/Vc_Cmv.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/VC_CMV/Vc_Cmv.h}
{\bkmkstart AAAAAAAASI}
{\bkmkend AAAAAAAASI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of VCCMV mode. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "stdio.h"}\par
{\f2 #include "stm32f4xx_hal.h"}\par
{\f2 #include "main.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b VC_CMV_mode_parameter}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure Representing VCCMV Mode parameter variables. it includes expiration time ,rise time percentage variables. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Flow_status} \{ {\b Flow_fine}
, {\b Low_Flow_Problem}
, {\b High_Flow_Problem}
 \}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration for Flow achieved status type. To identify whether the flow has been achieved or not. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b set_flow_value} \{ {\b Not_Detect}
, {\b Detect}
 \}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration for Set Flow achieved or not. To identify whether the achieved flow has been detected within a set value. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Blower_stat} \{ {\b BlOWER_ON}
, {\b BlOWER_OFF}
 \}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration for blower need to on or off in vc cmv mode control algorithm. To update the blower DAC value using this enumeration. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Vc_Cmv_Task} (void *argument)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Task variable. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b VC_CMV_Inspiration_Time_Variables_Reset} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_CMV_Inspiration_Time_Variables_Reset. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b VC_CMV_Expiration_Time_Variables_Reset} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_CMV_Expiration_Time_Variables_Reset. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Volume_Not_Acheieved} (){\bkmkstart AAAAAAAASJ}
{\bkmkend AAAAAAAASJ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Volume_Not_Acheieved. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Volume_Acheieved} (){\bkmkstart AAAAAAAASK}
{\bkmkend AAAAAAAASK}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Volume_Acheieved. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Reset_Blower_Status} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset_Blower_Status. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b LOW_Compliance_DAC_value} (uint8_t)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LOW_Compliance_DAC_value. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Flow_status} {\b Flow_increment}{\bkmkstart AAAAAAAASL}
{\bkmkend AAAAAAAASL}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration variable. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b set_flow_value} {\b Set_Flow_value}{\bkmkstart AAAAAAAASM}
{\bkmkend AAAAAAAASM}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration variable. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b LOW_COMPLIANCE_DAC}{\bkmkstart AAAAAAAASN}
{\bkmkend AAAAAAAASN}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
identify compliance dac variable }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int8_t {\b Low_Flow_Rate}{\bkmkstart AAAAAAAASO}
{\bkmkend AAAAAAAASO}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
detect low flow rate variable }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Stop_Increment_Count}{\bkmkstart AAAAAAAASP}
{\bkmkend AAAAAAAASP}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Last_Flow_increment}{\bkmkstart AAAAAAAASQ}
{\bkmkend AAAAAAAASQ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stop_Increment_Count, Last_Flow_increment variable. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b VC_CMV_mode_parameter} {\b VC_CMV}{\bkmkstart AAAAAAAASR}
{\bkmkend AAAAAAAASR}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure variable. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

xTaskHandle {\b Vc_Cmv_Handler}{\bkmkstart AAAAAAAASS}
{\bkmkend AAAAAAAASS}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Task handler name. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of VCCMV mode. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sarath Kumar \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
27/03/24 \par
}}This file contains the Declaration VCCMV mode variables \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v Blower_stat\:Vc_Cmv.h}
{\xe \v Vc_Cmv.h\:Blower_stat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Blower_stat}}}
\par
{\bkmkstart AAAAAAAAST}
{\bkmkend AAAAAAAAST}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration for blower need to on or off in vc cmv mode control algorithm. To update the blower DAC value using this enumeration. }}\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v BlOWER_ON\:Vc_Cmv.h}
{\xe \v Vc_Cmv.h\:BlOWER_ON}
{\qr BlOWER_ON{\bkmkstart AAAAAAAASU}
{\bkmkend AAAAAAAASU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BlOWER_ON. \par
}\cell }{\row }
{\xe \v BlOWER_OFF\:Vc_Cmv.h}
{\xe \v Vc_Cmv.h\:BlOWER_OFF}
{\qr BlOWER_OFF{\bkmkstart AAAAAAAASV}
{\bkmkend AAAAAAAASV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BlOWER_OFF. \par
}\cell }{\row }
}
}
{\xe \v Flow_status\:Vc_Cmv.h}
{\xe \v Vc_Cmv.h\:Flow_status}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Flow_status}}}
\par
{\bkmkstart AAAAAAAASW}
{\bkmkend AAAAAAAASW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration for Flow achieved status type. To identify whether the flow has been achieved or not. }}\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v Flow_fine\:Vc_Cmv.h}
{\xe \v Vc_Cmv.h\:Flow_fine}
{\qr Flow_fine{\bkmkstart AAAAAAAASX}
{\bkmkend AAAAAAAASX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
flow achieved normal. \par
}\cell }{\row }
{\xe \v Low_Flow_Problem\:Vc_Cmv.h}
{\xe \v Vc_Cmv.h\:Low_Flow_Problem}
{\qr Low_Flow_Problem{\bkmkstart AAAAAAAASY}
{\bkmkend AAAAAAAASY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
low flow achieved. \par
}\cell }{\row }
{\xe \v High_Flow_Problem\:Vc_Cmv.h}
{\xe \v Vc_Cmv.h\:High_Flow_Problem}
{\qr High_Flow_Problem{\bkmkstart AAAAAAAASZ}
{\bkmkend AAAAAAAASZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
high flow achieved. \par
}\cell }{\row }
}
}
{\xe \v set_flow_value\:Vc_Cmv.h}
{\xe \v Vc_Cmv.h\:set_flow_value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b set_flow_value}}}
\par
{\bkmkstart AAAAAAAATA}
{\bkmkend AAAAAAAATA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration for Set Flow achieved or not. To identify whether the achieved flow has been detected within a set value. }}\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v Not_Detect\:Vc_Cmv.h}
{\xe \v Vc_Cmv.h\:Not_Detect}
{\qr Not_Detect{\bkmkstart AAAAAAAATB}
{\bkmkend AAAAAAAATB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flow not detect. \par
}\cell }{\row }
{\xe \v Detect\:Vc_Cmv.h}
{\xe \v Vc_Cmv.h\:Detect}
{\qr Detect{\bkmkstart AAAAAAAATC}
{\bkmkend AAAAAAAATC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flow detected. \par
}\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v LOW_Compliance_DAC_value\:Vc_Cmv.h}
{\xe \v Vc_Cmv.h\:LOW_Compliance_DAC_value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LOW_Compliance_DAC_value (uint8_t  {\i Flow_Rate})}}
\par
{\bkmkstart AAAAAAAATD}
{\bkmkend AAAAAAAATD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LOW_Compliance_DAC_value. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LOW_Compliance_DAC_value. \par
}}
{\xe \v Reset_Blower_Status\:Vc_Cmv.h}
{\xe \v Vc_Cmv.h\:Reset_Blower_Status}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Reset_Blower_Status ()}}
\par
{\bkmkstart AAAAAAAATE}
{\bkmkend AAAAAAAATE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset_Blower_Status. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset_Blower_Status. \par
}}
{\xe \v VC_CMV_Expiration_Time_Variables_Reset\:Vc_Cmv.h}
{\xe \v Vc_Cmv.h\:VC_CMV_Expiration_Time_Variables_Reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void VC_CMV_Expiration_Time_Variables_Reset ()}}
\par
{\bkmkstart AAAAAAAATF}
{\bkmkend AAAAAAAATF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_CMV_Expiration_Time_Variables_Reset. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_CMV_Expiration_Time_Variables_Reset. \par
}}
{\xe \v VC_CMV_Inspiration_Time_Variables_Reset\:Vc_Cmv.h}
{\xe \v Vc_Cmv.h\:VC_CMV_Inspiration_Time_Variables_Reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void VC_CMV_Inspiration_Time_Variables_Reset ()}}
\par
{\bkmkstart AAAAAAAATG}
{\bkmkend AAAAAAAATG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_CMV_Inspiration_Time_Variables_Reset. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_CMV_Inspiration_Time_Variables_Reset. \par
}}
{\xe \v Vc_Cmv_Task\:Vc_Cmv.h}
{\xe \v Vc_Cmv.h\:Vc_Cmv_Task}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Vc_Cmv_Task (void *  {\i argument})}}
\par
{\bkmkstart AAAAAAAATH}
{\bkmkend AAAAAAAATH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Task variable. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Task variable. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Vc_Cmv.h\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/VC_CMV/Vc_Cmv.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/VC_CMV/Vc_Cmv.h}
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
12 {\cf21 #ifndef INC_VC_CMV_H_}\par
13 {\cf21 #define INC_VC_CMV_H_}\par
14 \par
15 {\cf21 #include "stdio.h"}\par
16 {\cf21 #include "stm32f4xx_hal.h"}\par
17 {\cf21 #include "main.h"}\par
18 \par
24 {\cf17 typedef} {\cf17 struct}\par
25 \{\par
26     uint16_t VOLUME_Val;               \par
27     uint8_t  PEEP_Val;                 \par
28     uint8_t  RESPIRATORY_RATE_Val;     \par
29     uint8_t  FIO2_Val;                 \par
30     uint32_t INSPIRATION_TIME;         \par
31     uint32_t EXPIRATION_TIME;          \par
32     uint8_t  Inspiration_Time_Ratio;   \par
33     uint8_t  Expiration_Time_Ratio;    \par
34     uint8_t  FLOW_RATE_Val;            \par
35 \par
36 \}VC_CMV_mode_parameter;\par
37 \par
38 \par
43 {\cf17 typedef} {\cf17 enum}\par
44 \{\par
45     Flow_fine,            \par
46     Low_Flow_Problem,     \par
47     High_Flow_Problem     \par
48 \}Flow_status;\par
49 \par
54 {\cf17 typedef} {\cf17 enum}\par
55 \{\par
56     Not_Detect,           \par
57     Detect                \par
58 \}set_flow_value;\par
59 \par
60 \par
61 \par
66 {\cf17 typedef} {\cf17 enum}\par
67 \{\par
68     BlOWER_ON,     \par
69     BlOWER_OFF     \par
70 \}Blower_stat;\par
71 \par
72 Flow_status Flow_increment;   \par
73 \par
74 set_flow_value Set_Flow_value;    \par
75 uint16_t LOW_COMPLIANCE_DAC;      \par
76 int8_t Low_Flow_Rate;             \par
77 uint8_t Stop_Increment_Count,Last_Flow_increment;   \par
78 \par
79 VC_CMV_mode_parameter VC_CMV;         \par
80 \par
81 xTaskHandle Vc_Cmv_Handler;           \par
82 {\cf18 void} Vc_Cmv_Task ({\cf18 void} *argument);    \par
83 \par
84 \par
85 \par
89 {\cf18 void} VC_CMV_Inspiration_Time_Variables_Reset();\par
93 {\cf18 void} VC_CMV_Expiration_Time_Variables_Reset();\par
97 {\cf18 void} Volume_Not_Acheieved();\par
101 {\cf18 void} Volume_Acheieved();\par
105 {\cf18 void} Reset_Blower_Status();\par
109 uint16_t LOW_Compliance_DAC_value(uint8_t);\par
110 \par
111 \par
112 {\cf21 #endif }{\cf20 /* INC_VC_CMV_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/VOLUME_CONTROL/Volume_control.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/VOLUME_CONTROL/Volume_control.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/VOLUME_CONTROL/Volume_control.h}
{\bkmkstart AAAAAAAATI}
{\bkmkend AAAAAAAATI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of inspiration time Volume control mode. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "stdio.h"}\par
{\f2 #include "stm32f4xx_hal.h"}\par
{\f2 #include "main.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b volume_control_Task}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure Controls volume and flow achieved status. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Volume_mode_blower_control}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure control Blower Character.. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b volume_achieved_status} \{ {\b VOLUME_NOT_ACHIEVED}
, {\b VOLUME_ACHIEVED}
 \}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
enumeration for volume achieved status. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b flow_achieved_status} \{ {\b FLOW_NOT_ACHIEVED}
, {\b FLOW_ACHIEVED}
 \}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
enumeration for Flow achieved status. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Task_Wait_time} \{ {\b One_Millisecond_Delay} =1
, {\b Two_Millisecond_Delay} =2
, {\b Ten_Millisecond_Delay} =10
, {\b Twenty_MilliSecond_Delay} =20
, {\b Hundred_Millisecond_Delay} =100
, {\b Four_Second_Delay} =4000
 \}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
enumeration for task delay }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Volume_Control_Task} (void *argument)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
volume control task }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Volume_Control} (uint16_t, uint8_t, uint8_t)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Volume_Control. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Flow_Restriction_Control} (uint16_t, uint8_t, uint8_t)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flow_Restriction_Control. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b VOLUME_STOP_POINT} (uint16_t, uint16_t)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VOLUME_STOP_POINT. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b TUNE_INITIAL_DAC_VAL} (uint16_t, uint8_t, uint8_t)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TUNE_INITIAL_DAC_VAL. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b flow_Rate_control} (uint8_t){\bkmkstart AAAAAAAATJ}
{\bkmkend AAAAAAAATJ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
flow_Rate_control. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Cut_Off_Region} (uint8_t)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cut_Off_Region. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b Flow_Cummulative_Val}{\bkmkstart AAAAAAAATK}
{\bkmkend AAAAAAAATK}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
calculate flow average }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b Flow_Count}{\bkmkstart AAAAAAAATL}
{\bkmkend AAAAAAAATL}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
calculate flow average }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int16_t {\b Avg_Flow}{\bkmkstart AAAAAAAATM}
{\bkmkend AAAAAAAATM}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
calculate flow average }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b volume_control_Task} {\b Volume_control_Task}{\bkmkstart AAAAAAAATN}
{\bkmkend AAAAAAAATN}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure variable. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Volume_mode_blower_control} {\b Volume_Mode_Blower_control}{\bkmkstart AAAAAAAATO}
{\bkmkend AAAAAAAATO}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure variable. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b volume_achieved_status} {\b Volume_Achieved_Status}{\bkmkstart AAAAAAAATP}
{\bkmkend AAAAAAAATP}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration variable. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b flow_achieved_status} {\b Maximum_Flow_Achieved}{\bkmkstart AAAAAAAATQ}
{\bkmkend AAAAAAAATQ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration variable. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

xTaskHandle {\b Volume_Control_Task_Handler}{\bkmkstart AAAAAAAATR}
{\bkmkend AAAAAAAATR}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Task handler variable. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of inspiration time Volume control mode. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sarath Kumar \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
27/03/24 \par
}}This file contains the Declaration inspiration time Volume control mode variables \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v flow_achieved_status\:Volume_control.h}
{\xe \v Volume_control.h\:flow_achieved_status}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b flow_achieved_status}}}
\par
{\bkmkstart AAAAAAAATS}
{\bkmkend AAAAAAAATS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
enumeration for Flow achieved status. }}\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v FLOW_NOT_ACHIEVED\:Volume_control.h}
{\xe \v Volume_control.h\:FLOW_NOT_ACHIEVED}
{\qr FLOW_NOT_ACHIEVED{\bkmkstart AAAAAAAATT}
{\bkmkend AAAAAAAATT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
when Flow not achieved time. \par
}\cell }{\row }
{\xe \v FLOW_ACHIEVED\:Volume_control.h}
{\xe \v Volume_control.h\:FLOW_ACHIEVED}
{\qr FLOW_ACHIEVED{\bkmkstart AAAAAAAATU}
{\bkmkend AAAAAAAATU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
when Flow not achieved time. \par
}\cell }{\row }
}
}
{\xe \v Task_Wait_time\:Volume_control.h}
{\xe \v Volume_control.h\:Task_Wait_time}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Task_Wait_time}}}
\par
{\bkmkstart AAAAAAAATV}
{\bkmkend AAAAAAAATV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
enumeration for task delay }}\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v One_Millisecond_Delay\:Volume_control.h}
{\xe \v Volume_control.h\:One_Millisecond_Delay}
{\qr One_Millisecond_Delay{\bkmkstart AAAAAAAATW}
{\bkmkend AAAAAAAATW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
one milli second delay \par
}\cell }{\row }
{\xe \v Two_Millisecond_Delay\:Volume_control.h}
{\xe \v Volume_control.h\:Two_Millisecond_Delay}
{\qr Two_Millisecond_Delay{\bkmkstart AAAAAAAATX}
{\bkmkend AAAAAAAATX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Two milli second delay. \par
}\cell }{\row }
{\xe \v Ten_Millisecond_Delay\:Volume_control.h}
{\xe \v Volume_control.h\:Ten_Millisecond_Delay}
{\qr Ten_Millisecond_Delay{\bkmkstart AAAAAAAATY}
{\bkmkend AAAAAAAATY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ten milli second delay. \par
}\cell }{\row }
{\xe \v Twenty_MilliSecond_Delay\:Volume_control.h}
{\xe \v Volume_control.h\:Twenty_MilliSecond_Delay}
{\qr Twenty_MilliSecond_Delay{\bkmkstart AAAAAAAATZ}
{\bkmkend AAAAAAAATZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Twenty milli second delay. \par
}\cell }{\row }
{\xe \v Hundred_Millisecond_Delay\:Volume_control.h}
{\xe \v Volume_control.h\:Hundred_Millisecond_Delay}
{\qr Hundred_Millisecond_Delay{\bkmkstart AAAAAAAAUA}
{\bkmkend AAAAAAAAUA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
hundred milli second delay \par
}\cell }{\row }
{\xe \v Four_Second_Delay\:Volume_control.h}
{\xe \v Volume_control.h\:Four_Second_Delay}
{\qr Four_Second_Delay{\bkmkstart AAAAAAAAUB}
{\bkmkend AAAAAAAAUB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
four thousand milli second delay \par
}\cell }{\row }
}
}
{\xe \v volume_achieved_status\:Volume_control.h}
{\xe \v Volume_control.h\:volume_achieved_status}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b volume_achieved_status}}}
\par
{\bkmkstart AAAAAAAAUC}
{\bkmkend AAAAAAAAUC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
enumeration for volume achieved status. }}\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v VOLUME_NOT_ACHIEVED\:Volume_control.h}
{\xe \v Volume_control.h\:VOLUME_NOT_ACHIEVED}
{\qr VOLUME_NOT_ACHIEVED{\bkmkstart AAAAAAAAUD}
{\bkmkend AAAAAAAAUD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
when volume not achieved time. \par
}\cell }{\row }
{\xe \v VOLUME_ACHIEVED\:Volume_control.h}
{\xe \v Volume_control.h\:VOLUME_ACHIEVED}
{\qr VOLUME_ACHIEVED{\bkmkstart AAAAAAAAUE}
{\bkmkend AAAAAAAAUE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
when volume achieved time. \par
}\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v Cut_Off_Region\:Volume_control.h}
{\xe \v Volume_control.h\:Cut_Off_Region}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Cut_Off_Region (uint8_t  {\i Set_Flow_Rate})}}
\par
{\bkmkstart AAAAAAAAUF}
{\bkmkend AAAAAAAAUF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cut_Off_Region. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cut_Off_Region. \par
}}
{\xe \v Flow_Restriction_Control\:Volume_control.h}
{\xe \v Volume_control.h\:Flow_Restriction_Control}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Flow_Restriction_Control (uint16_t  {\i Set_Volume_Val}, uint8_t  {\i Set_Flow_Rate}, uint8_t  {\i Volume_Stop_Value})}}
\par
{\bkmkstart AAAAAAAAUG}
{\bkmkend AAAAAAAAUG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flow_Restriction_Control. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flow_Restriction_Control. \par
}}
{\xe \v TUNE_INITIAL_DAC_VAL\:Volume_control.h}
{\xe \v Volume_control.h\:TUNE_INITIAL_DAC_VAL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t TUNE_INITIAL_DAC_VAL (uint16_t  {\i Previous_Dac_Val}, uint8_t  {\i Flow_Rate}, uint8_t  {\i Flow_Max})}}
\par
{\bkmkstart AAAAAAAAUH}
{\bkmkend AAAAAAAAUH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TUNE_INITIAL_DAC_VAL. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TUNE_INITIAL_DAC_VAL. \par
}}
{\xe \v Volume_Control\:Volume_control.h}
{\xe \v Volume_control.h\:Volume_Control}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Volume_Control (uint16_t  {\i Set_Volume_Val}, uint8_t  {\i Set_Flow_Rate}, uint8_t  {\i Volume_Stop_Value})}}
\par
{\bkmkstart AAAAAAAAUI}
{\bkmkend AAAAAAAAUI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Volume_Control. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Volume_Control. \par
}}
{\xe \v Volume_Control_Task\:Volume_control.h}
{\xe \v Volume_control.h\:Volume_Control_Task}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Volume_Control_Task (void *  {\i argument})}}
\par
{\bkmkstart AAAAAAAAUJ}
{\bkmkend AAAAAAAAUJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
volume control task }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
volume control task \par
}}
{\xe \v VOLUME_STOP_POINT\:Volume_control.h}
{\xe \v Volume_control.h\:VOLUME_STOP_POINT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void VOLUME_STOP_POINT (uint16_t  {\i Set_Volume}, uint16_t  {\i Achieved_Volume})}}
\par
{\bkmkstart AAAAAAAAUK}
{\bkmkend AAAAAAAAUK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VOLUME_STOP_POINT. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VOLUME_STOP_POINT. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Volume_control.h\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/VOLUME_CONTROL/Volume_control.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/Aero_Inc/VOLUME_CONTROL/Volume_control.h}
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
12 {\cf21 #ifndef INC_VOLUME_CONTROL_H_}\par
13 {\cf21 #define INC_VOLUME_CONTROL_H_}\par
14 \par
15 {\cf21 #include "stdio.h"}\par
16 {\cf21 #include "stm32f4xx_hal.h"}\par
17 {\cf21 #include "main.h"}\par
18 \par
19 \par
24 {\cf17 typedef} {\cf17 struct}\par
25 \{\par
26     uint8_t  Volume_Stop_Value;      \par
27     uint8_t  Flow_Max_Achieved;      \par
28     uint16_t Achieved_Volume;        \par
29     uint8_t  LOW_Flow_Max_Achieved;  \par
30 \par
31 \}volume_control_Task;\par
32 \par
33 \par
38 {\cf17 typedef} {\cf17 struct}\par
39 \{\par
40     uint16_t BLOWER_DAC_VAL;                     \par
41     uint16_t INITIAL_BLOWER_DAC_VAL;             \par
42     uint16_t INITIAL_BLOWER_DAC_VAL_TRIGGER;     \par
43     uint16_t PREVIOUS_INITIAL_BLOWER_DAC_VAL;    \par
44     {\cf18 float} Blower_Signal_Voltage;                 \par
45     uint16_t PEEP_BLOWER_DAC_VAL;                \par
46     uint16_t LAST_PEEP_BLOWER_DAC_VAL;           \par
47 \}Volume_mode_blower_control;\par
48 \par
52 {\cf17 typedef} {\cf17 enum}\par
53 \{\par
54     VOLUME_NOT_ACHIEVED,     \par
55     VOLUME_ACHIEVED          \par
56 \}volume_achieved_status;\par
57 \par
58 \par
62 {\cf17 typedef} {\cf17 enum}\par
63 \{\par
64     FLOW_NOT_ACHIEVED,       \par
65     FLOW_ACHIEVED            \par
66 \}flow_achieved_status;\par
67 \par
71 {\cf17 typedef} {\cf17 enum}\par
72 \{\par
73     One_Millisecond_Delay    =1,          \par
74     Two_Millisecond_Delay    =2,          \par
75     Ten_Millisecond_Delay    =10,         \par
76     Twenty_MilliSecond_Delay =20,         \par
77     Hundred_Millisecond_Delay=100,        \par
78     Four_Second_Delay        =4000,       \par
79 \}Task_Wait_time;\par
80 \par
81 {\cf18 float} Flow_Cummulative_Val;       \par
82 {\cf18 float} Flow_Count;                 \par
83 int16_t Avg_Flow;                 \par
84 \par
85 volume_control_Task Volume_control_Task;                 \par
86 Volume_mode_blower_control Volume_Mode_Blower_control;   \par
87 \par
88 volume_achieved_status Volume_Achieved_Status;   \par
89 flow_achieved_status Maximum_Flow_Achieved;      \par
90 \par
91 xTaskHandle Volume_Control_Task_Handler;      \par
92 {\cf18 void} Volume_Control_Task ({\cf18 void} *argument);    \par
93 \par
97 {\cf18 void} Volume_Control(uint16_t,uint8_t,uint8_t);\par
98 \par
102 {\cf18 void} Flow_Restriction_Control(uint16_t,uint8_t,uint8_t);\par
103 \par
107 {\cf18 void} VOLUME_STOP_POINT(uint16_t,uint16_t);\par
111 uint16_t TUNE_INITIAL_DAC_VAL(uint16_t, uint8_t ,uint8_t );\par
115 {\cf18 void} flow_Rate_control(uint8_t);\par
119 {\cf18 void} Cut_Off_Region(uint8_t);\par
120 \par
121 {\cf21 #endif }{\cf20 /* INC_VOLUME_CONTROL_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FreeRTOSConfig.h\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/FreeRTOSConfig.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/FreeRTOSConfig.h}
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /* USER CODE BEGIN Header */}\par
2 {\cf20 /*}\par
3 {\cf20  * FreeRTOS Kernel V10.3.1}\par
4 {\cf20  * Portion Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.}\par
5 {\cf20  * Portion Copyright (C) 2019 StMicroelectronics, Inc.  All Rights Reserved.}\par
6 {\cf20  *}\par
7 {\cf20  * Permission is hereby granted, free of charge, to any person obtaining a copy of}\par
8 {\cf20  * this software and associated documentation files (the "Software"), to deal in}\par
9 {\cf20  * the Software without restriction, including without limitation the rights to}\par
10 {\cf20  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of}\par
11 {\cf20  * the Software, and to permit persons to whom the Software is furnished to do so,}\par
12 {\cf20  * subject to the following conditions:}\par
13 {\cf20  *}\par
14 {\cf20  * The above copyright notice and this permission notice shall be included in all}\par
15 {\cf20  * copies or substantial portions of the Software.}\par
16 {\cf20  *}\par
17 {\cf20  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR}\par
18 {\cf20  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS}\par
19 {\cf20  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR}\par
20 {\cf20  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER}\par
21 {\cf20  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN}\par
22 {\cf20  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.}\par
23 {\cf20  *}\par
24 {\cf20  * http://www.FreeRTOS.org}\par
25 {\cf20  * http://aws.amazon.com/freertos}\par
26 {\cf20  *}\par
27 {\cf20  * 1 tab == 4 spaces!}\par
28 {\cf20  */}\par
29 {\cf20 /* USER CODE END Header */}\par
30 \par
31 {\cf21 #ifndef FREERTOS_CONFIG_H}\par
32 {\cf21 #define FREERTOS_CONFIG_H}\par
33 \par
34 {\cf20 /*-----------------------------------------------------------}\par
35 {\cf20  * Application specific definitions.}\par
36 {\cf20  *}\par
37 {\cf20  * These definitions should be adjusted for your particular hardware and}\par
38 {\cf20  * application requirements.}\par
39 {\cf20  *}\par
40 {\cf20  * These parameters and more are described within the 'configuration' section of the}\par
41 {\cf20  * FreeRTOS API documentation available on the FreeRTOS.org web site.}\par
42 {\cf20  *}\par
43 {\cf20  * See http://www.freertos.org/a00110.html}\par
44 {\cf20  *----------------------------------------------------------*/}\par
45 \par
46 {\cf20 /* USER CODE BEGIN Includes */}\par
47 {\cf20 /* Section where include file can be added */}\par
48 {\cf20 /* USER CODE END Includes */}\par
49 \par
50 {\cf20 /* Ensure definitions are only used by the compiler, and not by the assembler. */}\par
51 {\cf21 #if defined(__ICCARM__) || defined(__CC_ARM) || defined(__GNUC__)}\par
52 {\cf21   #include <stdint.h>}\par
53   {\cf17 extern} uint32_t SystemCoreClock;\par
54 {\cf21 #endif}\par
55 {\cf21 #define configENABLE_FPU                         0}\par
56 {\cf21 #define configENABLE_MPU                         0}\par
57 \par
58 {\cf21 #define configUSE_PREEMPTION                     1}\par
59 {\cf21 #define configSUPPORT_STATIC_ALLOCATION          1}\par
60 {\cf21 #define configSUPPORT_DYNAMIC_ALLOCATION         1}\par
61 {\cf21 #define configUSE_IDLE_HOOK                      0}\par
62 {\cf21 #define configUSE_TICK_HOOK                      0}\par
63 {\cf21 #define configCPU_CLOCK_HZ                       ( SystemCoreClock )}\par
64 {\cf21 #define configTICK_RATE_HZ                       ((TickType_t)1000)}\par
65 {\cf21 #define configMAX_PRIORITIES                     ( 7 )}\par
66 {\cf21 #define configMINIMAL_STACK_SIZE                 ((uint16_t)128)}\par
67 {\cf21 #define configTOTAL_HEAP_SIZE                    ((size_t)(1024 * 70))}\par
68 {\cf21 #define configMAX_TASK_NAME_LEN                  ( 16 )}\par
69 {\cf21 #define configUSE_16_BIT_TICKS                   0}\par
70 {\cf21 #define configUSE_MUTEXES                        1}\par
71 {\cf21 #define configQUEUE_REGISTRY_SIZE                8}\par
72 {\cf21 #define configUSE_PORT_OPTIMISED_TASK_SELECTION  1}\par
73 {\cf20 /* USER CODE BEGIN MESSAGE_BUFFER_LENGTH_TYPE */}\par
74 {\cf20 /* Defaults to size_t for backward compatibility, but can be changed}\par
75 {\cf20    if lengths will always be less than the number of bytes in a size_t. */}\par
76 {\cf21 #define configMESSAGE_BUFFER_LENGTH_TYPE         size_t}\par
77 {\cf20 /* USER CODE END MESSAGE_BUFFER_LENGTH_TYPE */}\par
78 \par
79 {\cf20 /* Co-routine definitions. */}\par
80 {\cf21 #define configUSE_CO_ROUTINES                    0}\par
81 {\cf21 #define configMAX_CO_ROUTINE_PRIORITIES          ( 2 )}\par
82 \par
83 {\cf20 /* Software timer definitions. */}\par
84 {\cf21 #define configUSE_TIMERS                         1}\par
85 {\cf21 #define configTIMER_TASK_PRIORITY                ( 2 )}\par
86 {\cf21 #define configTIMER_QUEUE_LENGTH                 10}\par
87 {\cf21 #define configTIMER_TASK_STACK_DEPTH             256}\par
88 \par
89 {\cf20 /* Set the following definitions to 1 to include the API function, or zero}\par
90 {\cf20 to exclude the API function. */}\par
91 {\cf21 #define INCLUDE_vTaskPrioritySet             1}\par
92 {\cf21 #define INCLUDE_uxTaskPriorityGet            1}\par
93 {\cf21 #define INCLUDE_vTaskDelete                  1}\par
94 {\cf21 #define INCLUDE_vTaskCleanUpResources        0}\par
95 {\cf21 #define INCLUDE_vTaskSuspend                 1}\par
96 {\cf21 #define INCLUDE_vTaskDelayUntil              0}\par
97 {\cf21 #define INCLUDE_vTaskDelay                   1}\par
98 {\cf21 #define INCLUDE_xTaskGetSchedulerState       1}\par
99 \par
100 {\cf20 /* Cortex-M specific definitions. */}\par
101 {\cf21 #ifdef __NVIC_PRIO_BITS}\par
102  {\cf20 /* __BVIC_PRIO_BITS will be specified when CMSIS is being used. */}\par
103 {\cf21  #define configPRIO_BITS         __NVIC_PRIO_BITS}\par
104 {\cf21 #else}\par
105 {\cf21  #define configPRIO_BITS         4}\par
106 {\cf21 #endif}\par
107 \par
108 {\cf20 /* The lowest interrupt priority that can be used in a call to a "set priority"}\par
109 {\cf20 function. */}\par
110 {\cf21 #define configLIBRARY_LOWEST_INTERRUPT_PRIORITY   15}\par
111 \par
112 {\cf20 /* The highest interrupt priority that can be used by any interrupt service}\par
113 {\cf20 routine that makes calls to interrupt safe FreeRTOS API functions.  DO NOT CALL}\par
114 {\cf20 INTERRUPT SAFE FREERTOS API FUNCTIONS FROM ANY INTERRUPT THAT HAS A HIGHER}\par
115 {\cf20 PRIORITY THAN THIS! (higher priorities are lower numeric values. */}\par
116 {\cf21 #define configLIBRARY_MAX_SYSCALL_INTERRUPT_PRIORITY 5}\par
117 \par
118 {\cf20 /* Interrupt priorities used by the kernel port layer itself.  These are generic}\par
119 {\cf20 to all Cortex-M ports, and do not rely on any particular library functions. */}\par
120 {\cf21 #define configKERNEL_INTERRUPT_PRIORITY         ( configLIBRARY_LOWEST_INTERRUPT_PRIORITY << (8 - configPRIO_BITS) )}\par
121 {\cf20 /* !!!! configMAX_SYSCALL_INTERRUPT_PRIORITY must not be set to zero !!!!}\par
122 {\cf20 See http://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html. */}\par
123 {\cf21 #define configMAX_SYSCALL_INTERRUPT_PRIORITY    ( configLIBRARY_MAX_SYSCALL_INTERRUPT_PRIORITY << (8 - configPRIO_BITS) )}\par
124 \par
125 {\cf20 /* Normal assert() semantics without relying on the provision of an assert.h}\par
126 {\cf20 header file. */}\par
127 {\cf20 /* USER CODE BEGIN 1 */}\par
128 {\cf21 #define configASSERT( x ) if ((x) == 0) \{taskDISABLE_INTERRUPTS(); for( ;; );\}}\par
129 {\cf20 /* USER CODE END 1 */}\par
130 \par
131 {\cf20 /* Definitions that map the FreeRTOS port interrupt handlers to their CMSIS}\par
132 {\cf20 standard names. */}\par
133 {\cf21 #define vPortSVCHandler    SVC_Handler}\par
134 {\cf21 #define xPortPendSVHandler PendSV_Handler}\par
135 \par
136 {\cf20 /* IMPORTANT: This define is commented when used with STM32Cube firmware, when the timebase source is SysTick,}\par
137 {\cf20               to prevent overwriting SysTick_Handler defined within STM32Cube HAL */}\par
138 \par
139 {\cf21 #define xPortSysTickHandler SysTick_Handler}\par
140 \par
141 {\cf20 /* USER CODE BEGIN Defines */}\par
142 {\cf20 /* Section where parameter definitions can be added (for instance, to override default ones in FreeRTOS.h) */}\par
143 {\cf20 /* USER CODE END Defines */}\par
144 \par
145 {\cf21 #endif }{\cf20 /* FREERTOS_CONFIG_H */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/main.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/main.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/main.h}
{\bkmkstart AAAAAAAAUL}
{\bkmkend AAAAAAAAUL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
: Header for main.c file. This file contains the common defines of the application. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "stm32f4xx_hal.h"}\par
{\f2 #include "FreeRTOS.h"}\par
{\f2 #include "task.h"}\par
{\f2 #include "timers.h"}\par
{\f2 #include "queue.h"}\par
{\f2 #include "semphr.h"}\par
{\f2 #include "event_groups.h"}\par
{\f2 #include "string.h"}\par
{\f2 #include "stdio.h"}\par
{\f2 #include "math.h"}\par
{\f2 #include "Sensor_Offset.h"}\par
{\f2 #include "Task_Create.h"}\par
{\f2 #include "Problems_Happen.h"}\par
{\f2 #include "Two_Milli_Second_Task.h"}\par
{\f2 #include "Sensor_Read.h"}\par
{\f2 #include "Bluetooth_Graph.h"}\par
{\f2 #include "Macros.h"}\par
{\f2 #include "Bluetooth_Data_Split.h"}\par
{\f2 #include "Pc_cmv.h"}\par
{\f2 #include "Mode_Initial_Flag_Set.h"}\par
{\f2 #include "PIP_Control.h"}\par
{\f2 #include "Common_Parameter.h"}\par
{\f2 #include "Vc_Cmv.h"}\par
{\f2 #include "Volume_control.h"}\par
{\f2 #include "Expiratory_Valve_Control_Pressure_Mode.h"}\par
{\f2 #include "Expiratory_Valve_Control_Volume_Mode.h"}\par
{\f2 #include "Oxygen_Blending.h"}\par
{\f2 #include "Alert.h"}\par
{\f2 #include "Pc_Simv_Assist_ON.h"}\par
{\f2 #include "Pc_Simv_Assist_OFF.h"}\par
{\f2 #include "Vc_Simv_Assist_ON.h"}\par
{\f2 #include "Vc_Simv_Assist_OFF.h"}\par
{\f2 #include "PSV.h"}\par
{\f2 #include "Backup_Pc_cmv.h"}\par
{\f2 #include "BiPap.h"}\par
{\f2 #include "Cpap.h"}\par
{\f2 #include "APRV.h"}\par
{\f2 #include "Nebuliser.h"}\par
{\f2 #include "SUCTION.h"}\par
{\f2 #include "HFNC.h"}\par
{\f2 #include "Calibration.h"}\par
{\f2 #include "Sampled_Parameter.h"}\par
{\f2 #include <SENSORS_INTERFACE/database.h>}\par
{\f2 #include <SENSORS_INTERFACE/sensor.h>}\par
{\f2 #include <SENSORS_INTERFACE/utilities.h>}\par
{\f2 #include <SENSORS_INTERFACE/wsen10101.h>}\par
{\f2 #include <SENSORS_INTERFACE/oom202.h>}\par
{\f2 #include <SENSORS_INTERFACE/ads1115.h>}\par
{\f2 #include <SENSORS_INTERFACE/controlsys.h>}\par
{\f2 #include "Service.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b VOL_ARR_SIZE}\~ 60{\bkmkstart AAAAAAAAUM}
{\bkmkend AAAAAAAAUM}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Blower_Enable_Pin}\~ GPIO_PIN_5{\bkmkstart AAAAAAAAUN}
{\bkmkend AAAAAAAAUN}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Blower_Enable_GPIO_Port}\~ GPIOE{\bkmkstart AAAAAAAAUO}
{\bkmkend AAAAAAAAUO}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Pressure_Sensor_Pin}\~ GPIO_PIN_3{\bkmkstart AAAAAAAAUP}
{\bkmkend AAAAAAAAUP}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Pressure_Sensor_GPIO_Port}\~ GPIOA{\bkmkstart AAAAAAAAUQ}
{\bkmkend AAAAAAAAUQ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Blower_Signal_Pin}\~ GPIO_PIN_4{\bkmkstart AAAAAAAAUR}
{\bkmkend AAAAAAAAUR}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Blower_Signal_GPIO_Port}\~ GPIOA{\bkmkstart AAAAAAAAUS}
{\bkmkend AAAAAAAAUS}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Propotional_valve_signal_Pin}\~ GPIO_PIN_5{\bkmkstart AAAAAAAAUT}
{\bkmkend AAAAAAAAUT}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Propotional_valve_signal_GPIO_Port}\~ GPIOA{\bkmkstart AAAAAAAAUU}
{\bkmkend AAAAAAAAUU}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Battery_Voltage_Read_New_Pin}\~ GPIO_PIN_6{\bkmkstart AAAAAAAAUV}
{\bkmkend AAAAAAAAUV}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Battery_Voltage_Read_New_GPIO_Port}\~ GPIOA{\bkmkstart AAAAAAAAUW}
{\bkmkend AAAAAAAAUW}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b AC_DC_Supply_new_Pin}\~ GPIO_PIN_7{\bkmkstart AAAAAAAAUX}
{\bkmkend AAAAAAAAUX}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b AC_DC_Supply_new_GPIO_Port}\~ GPIOA{\bkmkstart AAAAAAAAUY}
{\bkmkend AAAAAAAAUY}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b AC_DC_Supply_new_EXTI_IRQn}\~ EXTI9_5_IRQn{\bkmkstart AAAAAAAAUZ}
{\bkmkend AAAAAAAAUZ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Battery_Voltage_Read_Pin}\~ GPIO_PIN_5{\bkmkstart AAAAAAAAVA}
{\bkmkend AAAAAAAAVA}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Battery_Voltage_Read_GPIO_Port}\~ GPIOC{\bkmkstart AAAAAAAAVB}
{\bkmkend AAAAAAAAVB}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ADS1115_SCL_Pin}\~ GPIO_PIN_10{\bkmkstart AAAAAAAAVC}
{\bkmkend AAAAAAAAVC}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ADS1115_SCL_GPIO_Port}\~ GPIOB{\bkmkstart AAAAAAAAVD}
{\bkmkend AAAAAAAAVD}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ADS1115_SDA_Pin}\~ GPIO_PIN_11{\bkmkstart AAAAAAAAVE}
{\bkmkend AAAAAAAAVE}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ADS1115_SDA_GPIO_Port}\~ GPIOB{\bkmkstart AAAAAAAAVF}
{\bkmkend AAAAAAAAVF}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Expiratory_Valve_Control_Pin}\~ GPIO_PIN_13{\bkmkstart AAAAAAAAVG}
{\bkmkend AAAAAAAAVG}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Expiratory_Valve_Control_GPIO_Port}\~ GPIOB{\bkmkstart AAAAAAAAVH}
{\bkmkend AAAAAAAAVH}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Nebuliser_Motor_Control_Pin}\~ GPIO_PIN_15{\bkmkstart AAAAAAAAVI}
{\bkmkend AAAAAAAAVI}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Nebuliser_Motor_Control_GPIO_Port}\~ GPIOB{\bkmkstart AAAAAAAAVJ}
{\bkmkend AAAAAAAAVJ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Bluetooth_Tx_Pin}\~ GPIO_PIN_6{\bkmkstart AAAAAAAAVK}
{\bkmkend AAAAAAAAVK}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Bluetooth_Tx_GPIO_Port}\~ GPIOC{\bkmkstart AAAAAAAAVL}
{\bkmkend AAAAAAAAVL}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Blutooth_Rx_Pin}\~ GPIO_PIN_7{\bkmkstart AAAAAAAAVM}
{\bkmkend AAAAAAAAVM}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b Blutooth_Rx_GPIO_Port}\~ GPIOC{\bkmkstart AAAAAAAAVN}
{\bkmkend AAAAAAAAVN}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Error_Handler} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function is executed in case of error occurrence. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

ADC_HandleTypeDef {\b hadc1}{\bkmkstart AAAAAAAAVO}
{\bkmkend AAAAAAAAVO}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

DMA_HandleTypeDef {\b hdma_adc1}{\bkmkstart AAAAAAAAVP}
{\bkmkend AAAAAAAAVP}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

DAC_HandleTypeDef {\b hdac}{\bkmkstart AAAAAAAAVQ}
{\bkmkend AAAAAAAAVQ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

UART_HandleTypeDef {\b huart6}{\bkmkstart AAAAAAAAVR}
{\bkmkend AAAAAAAAVR}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

TIM_HandleTypeDef {\b htim3}{\bkmkstart AAAAAAAAVS}
{\bkmkend AAAAAAAAVS}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

TIM_HandleTypeDef {\b htim4}{\bkmkstart AAAAAAAAVT}
{\bkmkend AAAAAAAAVT}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

I2C_HandleTypeDef {\b hi2c1}{\bkmkstart AAAAAAAAVU}
{\bkmkend AAAAAAAAVU}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

I2C_HandleTypeDef {\b hi2c2}{\bkmkstart AAAAAAAAVV}
{\bkmkend AAAAAAAAVV}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

I2C_HandleTypeDef {\b hi2c3}{\bkmkstart AAAAAAAAVW}
{\bkmkend AAAAAAAAVW}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Device_Control}{\bkmkstart AAAAAAAAVX}
{\bkmkend AAAAAAAAVX}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b Pressure_Trigger_Offset}{\bkmkstart AAAAAAAAVY}
{\bkmkend AAAAAAAAVY}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b Flow_Trigger_Offset}{\bkmkstart AAAAAAAAVZ}
{\bkmkend AAAAAAAAVZ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b Patient_Trigger_Count}{\bkmkstart AAAAAAAAWA}
{\bkmkend AAAAAAAAWA}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Smooth_Ramp_Time_Val}{\bkmkstart AAAAAAAAWB}
{\bkmkend AAAAAAAAWB}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Smooth_Ramp_Time_Val_Count}{\bkmkstart AAAAAAAAWC}
{\bkmkend AAAAAAAAWC}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b FLOW_TRIGGER}{\bkmkstart AAAAAAAAWD}
{\bkmkend AAAAAAAAWD}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b LAST_FLOW_TRIGGER}{\bkmkstart AAAAAAAAWE}
{\bkmkend AAAAAAAAWE}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int16_t {\b Raw_volt_Flow_Trigger}{\bkmkstart AAAAAAAAWF}
{\bkmkend AAAAAAAAWF}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int16_t {\b Raw_volt_Flow_Trigger_Temp}{\bkmkstart AAAAAAAAWG}
{\bkmkend AAAAAAAAWG}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE}{\bkmkstart AAAAAAAAWH}
{\bkmkend AAAAAAAAWH}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DAC_VALUE_2}{\bkmkstart AAAAAAAAWI}
{\bkmkend AAAAAAAAWI}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Volume_Array} [VOL_ARR_SIZE]{\bkmkstart AAAAAAAAWJ}
{\bkmkend AAAAAAAAWJ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b Volume_Array_count}{\bkmkstart AAAAAAAAWK}
{\bkmkend AAAAAAAAWK}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b INCREMENT_DAC_VAL_PER_ITERATION}{\bkmkstart AAAAAAAAWL}
{\bkmkend AAAAAAAAWL}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b HFNC_O2_DAC_VALUE}{\bkmkstart AAAAAAAAWM}
{\bkmkend AAAAAAAAWM}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b One_Minite_Or_60000_Ms}{\bkmkstart AAAAAAAAWN}
{\bkmkend AAAAAAAAWN}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Breath_In_Minite}{\bkmkstart AAAAAAAAWO}
{\bkmkend AAAAAAAAWO}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Breath}{\bkmkstart AAAAAAAAWP}
{\bkmkend AAAAAAAAWP}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b Received_APP_data_found}{\bkmkstart AAAAAAAAWQ}
{\bkmkend AAAAAAAAWQ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b Received_index_Number}{\bkmkstart AAAAAAAAWR}
{\bkmkend AAAAAAAAWR}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b Received_index_number2}{\bkmkstart AAAAAAAAWS}
{\bkmkend AAAAAAAAWS}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b arrangecount}{\bkmkstart AAAAAAAAWT}
{\bkmkend AAAAAAAAWT}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b Total_Volume_Achieved_Time}{\bkmkstart AAAAAAAAWU}
{\bkmkend AAAAAAAAWU}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b Volume_Achieved_Time}{\bkmkstart AAAAAAAAWV}
{\bkmkend AAAAAAAAWV}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

SemaphoreHandle_t {\b binarysem}{\bkmkstart AAAAAAAAWW}
{\bkmkend AAAAAAAAWW}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b Bat_Avg}{\bkmkstart AAAAAAAAWX}
{\bkmkend AAAAAAAAWX}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b Bat_Avg_count}{\bkmkstart AAAAAAAAWY}
{\bkmkend AAAAAAAAWY}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Battery_Voltage}{\bkmkstart AAAAAAAAWZ}
{\bkmkend AAAAAAAAWZ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Blower_Status}{\bkmkstart AAAAAAAAXA}
{\bkmkend AAAAAAAAXA}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b Alert_Check_Time}{\bkmkstart AAAAAAAAXB}
{\bkmkend AAAAAAAAXB}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b ET_O2_Envitec_Tune_Value1}{\bkmkstart AAAAAAAAXC}
{\bkmkend AAAAAAAAXC}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b ET_O2_Envitec_Tune_Value2}{\bkmkstart AAAAAAAAXD}
{\bkmkend AAAAAAAAXD}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b ET_O2_Envitec_Tune_Value3}{\bkmkstart AAAAAAAAXE}
{\bkmkend AAAAAAAAXE}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
: Header for main.c file. This file contains the common defines of the application. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
: Main program body\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Attention\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}Copyright (c) 2023 STMicroelectronics. All rights reserved.\par
This software is licensed under terms that can be found in the LICENSE file in the root directory of this software component. If no LICENSE file comes with this software, it is provided AS-IS. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v Error_Handler\:main.h}
{\xe \v main.h\:Error_Handler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Error_Handler (void )}}
\par
{\bkmkstart AAAAAAAAXF}
{\bkmkend AAAAAAAAXF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function is executed in case of error occurrence. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Return values\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None} \cell }{\cell }
{\row }
}
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.h\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/main.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/main.h}
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /* USER CODE BEGIN Header */}\par
19 {\cf20 /* USER CODE END Header */}\par
20 \par
21 {\cf20 /* Define to prevent recursive inclusion -------------------------------------*/}\par
22 {\cf21 #ifndef __MAIN_H}\par
23 {\cf21 #define __MAIN_H}\par
24 \par
25 {\cf21 #ifdef __cplusplus}\par
26 {\cf17 extern} {\cf22 "C"} \{\par
27 {\cf21 #endif}\par
28 \par
29 {\cf20 /* Includes ------------------------------------------------------------------*/}\par
30 {\cf21 #include "stm32f4xx_hal.h"}\par
31 \par
32 {\cf20 /* Private includes ----------------------------------------------------------*/}\par
33 {\cf20 /* USER CODE BEGIN Includes */}\par
34 {\cf21 #include "FreeRTOS.h"}\par
35 {\cf21 #include "task.h"}\par
36 {\cf21 #include "timers.h"}\par
37 {\cf21 #include "queue.h"}\par
38 {\cf21 #include "semphr.h"}\par
39 {\cf21 #include "event_groups.h"}\par
40 {\cf21 #include "string.h"}\par
41 {\cf21 #include "stdio.h"}\par
42 {\cf21 #include "math.h"}\par
43 {\cf21 #include "Sensor_Offset.h"}\par
44 {\cf21 #include "Task_Create.h"}\par
45 {\cf21 #include "Problems_Happen.h"}\par
46 \par
47 {\cf21 #include "Two_Milli_Second_Task.h"}\par
48 {\cf21 #include "Sensor_Read.h"}\par
49 {\cf21 #include "Bluetooth_Graph.h"}\par
50 {\cf21 #include "Macros.h"}\par
51 {\cf21 #include "Bluetooth_Data_Split.h"}\par
52 {\cf21 #include "Pc_cmv.h"}\par
53 {\cf21 #include "Mode_Initial_Flag_Set.h"}\par
54 {\cf21 #include "PIP_Control.h"}\par
55 {\cf21 #include "Common_Parameter.h"}\par
56 {\cf21 #include "Vc_Cmv.h"}\par
57 {\cf21 #include "Volume_control.h"}\par
58 {\cf21 #include "Expiratory_Valve_Control_Pressure_Mode.h"}\par
59 {\cf21 #include "Expiratory_Valve_Control_Volume_Mode.h"}\par
60 {\cf21 #include "Oxygen_Blending.h"}\par
61 {\cf21 #include "Alert.h"}\par
62 {\cf21 #include "Pc_Simv_Assist_ON.h"}\par
63 {\cf21 #include "Pc_Simv_Assist_OFF.h"}\par
64 {\cf21 #include "Vc_Simv_Assist_ON.h"}\par
65 {\cf21 #include "Vc_Simv_Assist_OFF.h"}\par
66 {\cf21 #include "PSV.h"}\par
67 {\cf21 #include "Backup_Pc_cmv.h"}\par
68 {\cf21 #include "BiPap.h"}\par
69 {\cf21 #include "Cpap.h"}\par
70 {\cf21 #include "APRV.h"}\par
71 {\cf21 #include "Nebuliser.h"}\par
72 {\cf21 #include "SUCTION.h"}\par
73 {\cf21 #include "HFNC.h"}\par
74 {\cf21 #include "Calibration.h"}\par
75 {\cf21 #include "Sampled_Parameter.h"}\par
76 \par
77 \par
78 \par
79 {\cf21 #include <SENSORS_INTERFACE/database.h>}\par
80 {\cf21 #include <SENSORS_INTERFACE/sensor.h>}\par
81 {\cf21 #include <SENSORS_INTERFACE/utilities.h>}\par
82 {\cf21 #include <SENSORS_INTERFACE/wsen10101.h>}\par
83 {\cf21 #include <SENSORS_INTERFACE/oom202.h>}\par
84 {\cf21 #include <SENSORS_INTERFACE/ads1115.h>}\par
85 \par
86 {\cf21 #include <SENSORS_INTERFACE/controlsys.h>}\par
87 \par
88 {\cf21 #include "Service.h"}\par
89 \par
90 {\cf20 /* USER CODE END Includes */}\par
91 \par
92 {\cf20 /* Exported types ------------------------------------------------------------*/}\par
93 {\cf20 /* USER CODE BEGIN ET */}\par
94 \par
95 {\cf20 /* USER CODE END ET */}\par
96 \par
97 {\cf20 /* Exported constants --------------------------------------------------------*/}\par
98 {\cf20 /* USER CODE BEGIN EC */}\par
99 \par
100 {\cf20 /* USER CODE END EC */}\par
101 \par
102 {\cf20 /* Exported macro ------------------------------------------------------------*/}\par
103 {\cf20 /* USER CODE BEGIN EM */}\par
104 {\cf21 #define VOL_ARR_SIZE 60}\par
105 \par
106 \par
107 ADC_HandleTypeDef hadc1;\par
108 DMA_HandleTypeDef hdma_adc1;\par
109 DAC_HandleTypeDef hdac;\par
110 \par
111 UART_HandleTypeDef huart6;\par
112 \par
113 TIM_HandleTypeDef htim3;\par
114 TIM_HandleTypeDef htim4;\par
115 \par
116 I2C_HandleTypeDef hi2c1;\par
117 I2C_HandleTypeDef hi2c2;\par
118 I2C_HandleTypeDef hi2c3;\par
119 \par
120 uint8_t Device_Control;\par
121 {\cf18 int} Pressure_Trigger_Offset;\par
122 {\cf18 int} Flow_Trigger_Offset;\par
123 uint32_t Patient_Trigger_Count;\par
124 uint8_t Smooth_Ramp_Time_Val,Smooth_Ramp_Time_Val_Count;\par
125 \par
126 \par
127 uint8_t FLOW_TRIGGER,LAST_FLOW_TRIGGER;\par
128 int16_t Raw_volt_Flow_Trigger,Raw_volt_Flow_Trigger_Temp;\par
129 uint16_t DAC_VALUE,DAC_VALUE_2;\par
130 \par
131 uint8_t  Volume_Array[VOL_ARR_SIZE];\par
132 uint16_t Volume_Array_count;\par
133 uint8_t INCREMENT_DAC_VAL_PER_ITERATION;\par
134 \par
135 uint16_t HFNC_O2_DAC_VALUE;\par
136 uint16_t One_Minite_Or_60000_Ms;\par
137 uint8_t Breath_In_Minite,Breath;\par
138 {\cf18 int} Received_APP_data_found,Received_index_Number,Received_index_number2;\par
139 {\cf18 int} arrangecount;\par
140 uint16_t Total_Volume_Achieved_Time;\par
141 uint16_t Volume_Achieved_Time;\par
142 SemaphoreHandle_t  binarysem;\par
143 {\cf18 float} Bat_Avg,Bat_Avg_count;\par
144 uint8_t Battery_Voltage;\par
145 uint8_t Blower_Status;\par
146 uint32_t Alert_Check_Time;\par
147 \par
148 uint8_t ET_O2_Envitec_Tune_Value1;\par
149 uint8_t ET_O2_Envitec_Tune_Value2;\par
150 uint8_t ET_O2_Envitec_Tune_Value3;\par
151 {\cf20 /* USER CODE END EM */}\par
152 \par
153 {\cf20 /* Exported functions prototypes ---------------------------------------------*/}\par
154 {\cf18 void} Error_Handler({\cf18 void});\par
155 \par
156 {\cf20 /* USER CODE BEGIN EFP */}\par
157 \par
158 {\cf20 /* USER CODE END EFP */}\par
159 \par
160 {\cf20 /* Private defines -----------------------------------------------------------*/}\par
161 {\cf21 #define Blower_Enable_Pin GPIO_PIN_5}\par
162 {\cf21 #define Blower_Enable_GPIO_Port GPIOE}\par
163 {\cf21 #define Pressure_Sensor_Pin GPIO_PIN_3}\par
164 {\cf21 #define Pressure_Sensor_GPIO_Port GPIOA}\par
165 {\cf21 #define Blower_Signal_Pin GPIO_PIN_4}\par
166 {\cf21 #define Blower_Signal_GPIO_Port GPIOA}\par
167 {\cf21 #define Propotional_valve_signal_Pin GPIO_PIN_5}\par
168 {\cf21 #define Propotional_valve_signal_GPIO_Port GPIOA}\par
169 {\cf21 #define Battery_Voltage_Read_New_Pin GPIO_PIN_6}\par
170 {\cf21 #define Battery_Voltage_Read_New_GPIO_Port GPIOA}\par
171 {\cf21 #define AC_DC_Supply_new_Pin GPIO_PIN_7}\par
172 {\cf21 #define AC_DC_Supply_new_GPIO_Port GPIOA}\par
173 {\cf21 #define AC_DC_Supply_new_EXTI_IRQn EXTI9_5_IRQn}\par
174 {\cf21 #define Battery_Voltage_Read_Pin GPIO_PIN_5}\par
175 {\cf21 #define Battery_Voltage_Read_GPIO_Port GPIOC}\par
176 {\cf21 #define ADS1115_SCL_Pin GPIO_PIN_10}\par
177 {\cf21 #define ADS1115_SCL_GPIO_Port GPIOB}\par
178 {\cf21 #define ADS1115_SDA_Pin GPIO_PIN_11}\par
179 {\cf21 #define ADS1115_SDA_GPIO_Port GPIOB}\par
180 {\cf21 #define Expiratory_Valve_Control_Pin GPIO_PIN_13}\par
181 {\cf21 #define Expiratory_Valve_Control_GPIO_Port GPIOB}\par
182 {\cf21 #define Nebuliser_Motor_Control_Pin GPIO_PIN_15}\par
183 {\cf21 #define Nebuliser_Motor_Control_GPIO_Port GPIOB}\par
184 {\cf21 #define Bluetooth_Tx_Pin GPIO_PIN_6}\par
185 {\cf21 #define Bluetooth_Tx_GPIO_Port GPIOC}\par
186 {\cf21 #define Blutooth_Rx_Pin GPIO_PIN_7}\par
187 {\cf21 #define Blutooth_Rx_GPIO_Port GPIOC}\par
188 {\cf20 /* USER CODE BEGIN Private defines */}\par
189 \par
190 {\cf20 /* USER CODE END Private defines */}\par
191 \par
192 {\cf21 #ifdef __cplusplus}\par
193 \}\par
194 {\cf21 #endif}\par
195 \par
196 {\cf21 #endif }{\cf20 /* __MAIN_H */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
stm32f4xx_hal_conf.h\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/stm32f4xx_hal_conf.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/stm32f4xx_hal_conf.h}
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /* USER CODE BEGIN Header */}\par
21 {\cf20 /* USER CODE END Header */}\par
22 \par
23 {\cf20 /* Define to prevent recursive inclusion -------------------------------------*/}\par
24 {\cf21 #ifndef __STM32F4xx_HAL_CONF_H}\par
25 {\cf21 #define __STM32F4xx_HAL_CONF_H}\par
26 \par
27 {\cf21 #ifdef __cplusplus}\par
28  {\cf17 extern} {\cf22 "C"} \{\par
29 {\cf21 #endif}\par
30 \par
31 {\cf20 /* Exported types ------------------------------------------------------------*/}\par
32 {\cf20 /* Exported constants --------------------------------------------------------*/}\par
33 \par
34 {\cf20 /* ########################## Module Selection ############################## */}\par
38 {\cf21 #define HAL_MODULE_ENABLED}\par
39 \par
40 {\cf21   #define HAL_ADC_MODULE_ENABLED}\par
41 {\cf20 /* #define HAL_CRYP_MODULE_ENABLED   */}\par
42 {\cf20 /* #define HAL_CAN_MODULE_ENABLED   */}\par
43 {\cf20 /* #define HAL_CRC_MODULE_ENABLED   */}\par
44 {\cf20 /* #define HAL_CAN_LEGACY_MODULE_ENABLED   */}\par
45 {\cf20 /* #define HAL_CRYP_MODULE_ENABLED   */}\par
46 {\cf21 #define HAL_DAC_MODULE_ENABLED}\par
47 {\cf20 /* #define HAL_DCMI_MODULE_ENABLED   */}\par
48 {\cf20 /* #define HAL_DMA2D_MODULE_ENABLED   */}\par
49 {\cf20 /* #define HAL_ETH_MODULE_ENABLED   */}\par
50 {\cf20 /* #define HAL_NAND_MODULE_ENABLED   */}\par
51 {\cf20 /* #define HAL_NOR_MODULE_ENABLED   */}\par
52 {\cf20 /* #define HAL_PCCARD_MODULE_ENABLED   */}\par
53 {\cf20 /* #define HAL_SRAM_MODULE_ENABLED   */}\par
54 {\cf20 /* #define HAL_SDRAM_MODULE_ENABLED   */}\par
55 {\cf20 /* #define HAL_HASH_MODULE_ENABLED   */}\par
56 {\cf21 #define HAL_I2C_MODULE_ENABLED}\par
57 {\cf20 /* #define HAL_I2S_MODULE_ENABLED   */}\par
58 {\cf20 /* #define HAL_IWDG_MODULE_ENABLED   */}\par
59 {\cf20 /* #define HAL_LTDC_MODULE_ENABLED   */}\par
60 {\cf20 /* #define HAL_RNG_MODULE_ENABLED   */}\par
61 {\cf20 /* #define HAL_RTC_MODULE_ENABLED   */}\par
62 {\cf20 /* #define HAL_SAI_MODULE_ENABLED   */}\par
63 {\cf20 /* #define HAL_SD_MODULE_ENABLED   */}\par
64 {\cf20 /* #define HAL_MMC_MODULE_ENABLED   */}\par
65 {\cf20 /* #define HAL_SPI_MODULE_ENABLED   */}\par
66 {\cf21 #define HAL_TIM_MODULE_ENABLED}\par
67 {\cf21 #define HAL_UART_MODULE_ENABLED}\par
68 {\cf20 /* #define HAL_USART_MODULE_ENABLED   */}\par
69 {\cf20 /* #define HAL_IRDA_MODULE_ENABLED   */}\par
70 {\cf20 /* #define HAL_SMARTCARD_MODULE_ENABLED   */}\par
71 {\cf20 /* #define HAL_SMBUS_MODULE_ENABLED   */}\par
72 {\cf20 /* #define HAL_WWDG_MODULE_ENABLED   */}\par
73 {\cf20 /* #define HAL_PCD_MODULE_ENABLED   */}\par
74 {\cf20 /* #define HAL_HCD_MODULE_ENABLED   */}\par
75 {\cf20 /* #define HAL_DSI_MODULE_ENABLED   */}\par
76 {\cf20 /* #define HAL_QSPI_MODULE_ENABLED   */}\par
77 {\cf20 /* #define HAL_QSPI_MODULE_ENABLED   */}\par
78 {\cf20 /* #define HAL_CEC_MODULE_ENABLED   */}\par
79 {\cf20 /* #define HAL_FMPI2C_MODULE_ENABLED   */}\par
80 {\cf20 /* #define HAL_FMPSMBUS_MODULE_ENABLED   */}\par
81 {\cf20 /* #define HAL_SPDIFRX_MODULE_ENABLED   */}\par
82 {\cf20 /* #define HAL_DFSDM_MODULE_ENABLED   */}\par
83 {\cf20 /* #define HAL_LPTIM_MODULE_ENABLED   */}\par
84 {\cf21 #define HAL_GPIO_MODULE_ENABLED}\par
85 {\cf21 #define HAL_EXTI_MODULE_ENABLED}\par
86 {\cf21 #define HAL_DMA_MODULE_ENABLED}\par
87 {\cf21 #define HAL_RCC_MODULE_ENABLED}\par
88 {\cf21 #define HAL_FLASH_MODULE_ENABLED}\par
89 {\cf21 #define HAL_PWR_MODULE_ENABLED}\par
90 {\cf21 #define HAL_CORTEX_MODULE_ENABLED}\par
91 \par
92 {\cf20 /* ########################## HSE/HSI Values adaptation ##################### */}\par
98 {\cf21 #if !defined  (HSE_VALUE)}\par
99 {\cf21   #define HSE_VALUE    16000000U }\par
100 {\cf21 #endif }{\cf20 /* HSE_VALUE */}{\cf21 }\par
101 \par
102 {\cf21 #if !defined  (HSE_STARTUP_TIMEOUT)}\par
103 {\cf21   #define HSE_STARTUP_TIMEOUT    100U   }\par
104 {\cf21 #endif }{\cf20 /* HSE_STARTUP_TIMEOUT */}{\cf21 }\par
105 \par
111 {\cf21 #if !defined  (HSI_VALUE)}\par
112 {\cf21   #define HSI_VALUE    ((uint32_t)16000000U) }\par
113 {\cf21 #endif }{\cf20 /* HSI_VALUE */}{\cf21 }\par
114 \par
118 {\cf21 #if !defined  (LSI_VALUE)}\par
119 {\cf21  #define LSI_VALUE  32000U       }\par
120 {\cf21 #endif }{\cf20 /* LSI_VALUE */}{\cf21                       }\par
126 {\cf21 #if !defined  (LSE_VALUE)}\par
127 {\cf21  #define LSE_VALUE  32768U    }\par
128 {\cf21 #endif }{\cf20 /* LSE_VALUE */}{\cf21 }\par
129 \par
130 {\cf21 #if !defined  (LSE_STARTUP_TIMEOUT)}\par
131 {\cf21   #define LSE_STARTUP_TIMEOUT    5000U   }\par
132 {\cf21 #endif }{\cf20 /* LSE_STARTUP_TIMEOUT */}{\cf21 }\par
133 \par
139 {\cf21 #if !defined  (EXTERNAL_CLOCK_VALUE)}\par
140 {\cf21   #define EXTERNAL_CLOCK_VALUE    12288000U }\par
141 {\cf21 #endif }{\cf20 /* EXTERNAL_CLOCK_VALUE */}{\cf21 }\par
142 \par
143 {\cf20 /* Tip: To avoid modifying this file each time you need to use different HSE,}\par
144 {\cf20    ===  you can define the HSE value in your toolchain compiler preprocessor. */}\par
145 \par
146 {\cf20 /* ########################### System Configuration ######################### */}\par
150 {\cf21 #define  VDD_VALUE            3300U }\par
151 {\cf21 #define  TICK_INT_PRIORITY            15U   }\par
152 {\cf21 #define  USE_RTOS                     0U}\par
153 {\cf21 #define  PREFETCH_ENABLE              1U}\par
154 {\cf21 #define  INSTRUCTION_CACHE_ENABLE     1U}\par
155 {\cf21 #define  DATA_CACHE_ENABLE            1U}\par
156 \par
157 {\cf21 #define  USE_HAL_ADC_REGISTER_CALLBACKS         0U }{\cf20 /* ADC register callback disabled       */}{\cf21 }\par
158 {\cf21 #define  USE_HAL_CAN_REGISTER_CALLBACKS         0U }{\cf20 /* CAN register callback disabled       */}{\cf21 }\par
159 {\cf21 #define  USE_HAL_CEC_REGISTER_CALLBACKS         0U }{\cf20 /* CEC register callback disabled       */}{\cf21 }\par
160 {\cf21 #define  USE_HAL_CRYP_REGISTER_CALLBACKS        0U }{\cf20 /* CRYP register callback disabled      */}{\cf21 }\par
161 {\cf21 #define  USE_HAL_DAC_REGISTER_CALLBACKS         0U }{\cf20 /* DAC register callback disabled       */}{\cf21 }\par
162 {\cf21 #define  USE_HAL_DCMI_REGISTER_CALLBACKS        0U }{\cf20 /* DCMI register callback disabled      */}{\cf21 }\par
163 {\cf21 #define  USE_HAL_DFSDM_REGISTER_CALLBACKS       0U }{\cf20 /* DFSDM register callback disabled     */}{\cf21 }\par
164 {\cf21 #define  USE_HAL_DMA2D_REGISTER_CALLBACKS       0U }{\cf20 /* DMA2D register callback disabled     */}{\cf21 }\par
165 {\cf21 #define  USE_HAL_DSI_REGISTER_CALLBACKS         0U }{\cf20 /* DSI register callback disabled       */}{\cf21 }\par
166 {\cf21 #define  USE_HAL_ETH_REGISTER_CALLBACKS         0U }{\cf20 /* ETH register callback disabled       */}{\cf21 }\par
167 {\cf21 #define  USE_HAL_HASH_REGISTER_CALLBACKS        0U }{\cf20 /* HASH register callback disabled      */}{\cf21 }\par
168 {\cf21 #define  USE_HAL_HCD_REGISTER_CALLBACKS         0U }{\cf20 /* HCD register callback disabled       */}{\cf21 }\par
169 {\cf21 #define  USE_HAL_I2C_REGISTER_CALLBACKS         0U }{\cf20 /* I2C register callback disabled       */}{\cf21 }\par
170 {\cf21 #define  USE_HAL_FMPI2C_REGISTER_CALLBACKS      0U }{\cf20 /* FMPI2C register callback disabled    */}{\cf21 }\par
171 {\cf21 #define  USE_HAL_FMPSMBUS_REGISTER_CALLBACKS    0U }{\cf20 /* FMPSMBUS register callback disabled  */}{\cf21 }\par
172 {\cf21 #define  USE_HAL_I2S_REGISTER_CALLBACKS         0U }{\cf20 /* I2S register callback disabled       */}{\cf21 }\par
173 {\cf21 #define  USE_HAL_IRDA_REGISTER_CALLBACKS        0U }{\cf20 /* IRDA register callback disabled      */}{\cf21 }\par
174 {\cf21 #define  USE_HAL_LPTIM_REGISTER_CALLBACKS       0U }{\cf20 /* LPTIM register callback disabled     */}{\cf21 }\par
175 {\cf21 #define  USE_HAL_LTDC_REGISTER_CALLBACKS        0U }{\cf20 /* LTDC register callback disabled      */}{\cf21 }\par
176 {\cf21 #define  USE_HAL_MMC_REGISTER_CALLBACKS         0U }{\cf20 /* MMC register callback disabled       */}{\cf21 }\par
177 {\cf21 #define  USE_HAL_NAND_REGISTER_CALLBACKS        0U }{\cf20 /* NAND register callback disabled      */}{\cf21 }\par
178 {\cf21 #define  USE_HAL_NOR_REGISTER_CALLBACKS         0U }{\cf20 /* NOR register callback disabled       */}{\cf21 }\par
179 {\cf21 #define  USE_HAL_PCCARD_REGISTER_CALLBACKS      0U }{\cf20 /* PCCARD register callback disabled    */}{\cf21 }\par
180 {\cf21 #define  USE_HAL_PCD_REGISTER_CALLBACKS         0U }{\cf20 /* PCD register callback disabled       */}{\cf21 }\par
181 {\cf21 #define  USE_HAL_QSPI_REGISTER_CALLBACKS        0U }{\cf20 /* QSPI register callback disabled      */}{\cf21 }\par
182 {\cf21 #define  USE_HAL_RNG_REGISTER_CALLBACKS         0U }{\cf20 /* RNG register callback disabled       */}{\cf21 }\par
183 {\cf21 #define  USE_HAL_RTC_REGISTER_CALLBACKS         0U }{\cf20 /* RTC register callback disabled       */}{\cf21 }\par
184 {\cf21 #define  USE_HAL_SAI_REGISTER_CALLBACKS         0U }{\cf20 /* SAI register callback disabled       */}{\cf21 }\par
185 {\cf21 #define  USE_HAL_SD_REGISTER_CALLBACKS          0U }{\cf20 /* SD register callback disabled        */}{\cf21 }\par
186 {\cf21 #define  USE_HAL_SMARTCARD_REGISTER_CALLBACKS   0U }{\cf20 /* SMARTCARD register callback disabled */}{\cf21 }\par
187 {\cf21 #define  USE_HAL_SDRAM_REGISTER_CALLBACKS       0U }{\cf20 /* SDRAM register callback disabled     */}{\cf21 }\par
188 {\cf21 #define  USE_HAL_SRAM_REGISTER_CALLBACKS        0U }{\cf20 /* SRAM register callback disabled      */}{\cf21 }\par
189 {\cf21 #define  USE_HAL_SPDIFRX_REGISTER_CALLBACKS     0U }{\cf20 /* SPDIFRX register callback disabled   */}{\cf21 }\par
190 {\cf21 #define  USE_HAL_SMBUS_REGISTER_CALLBACKS       0U }{\cf20 /* SMBUS register callback disabled     */}{\cf21 }\par
191 {\cf21 #define  USE_HAL_SPI_REGISTER_CALLBACKS         0U }{\cf20 /* SPI register callback disabled       */}{\cf21 }\par
192 {\cf21 #define  USE_HAL_TIM_REGISTER_CALLBACKS         0U }{\cf20 /* TIM register callback disabled       */}{\cf21 }\par
193 {\cf21 #define  USE_HAL_UART_REGISTER_CALLBACKS        0U }{\cf20 /* UART register callback disabled      */}{\cf21 }\par
194 {\cf21 #define  USE_HAL_USART_REGISTER_CALLBACKS       0U }{\cf20 /* USART register callback disabled     */}{\cf21 }\par
195 {\cf21 #define  USE_HAL_WWDG_REGISTER_CALLBACKS        0U }{\cf20 /* WWDG register callback disabled      */}{\cf21 }\par
196 \par
197 {\cf20 /* ########################## Assert Selection ############################## */}\par
202 {\cf20 /* #define USE_FULL_ASSERT    1U */}\par
203 \par
204 {\cf20 /* ################## Ethernet peripheral configuration ##################### */}\par
205 \par
206 {\cf20 /* Section 1 : Ethernet peripheral configuration */}\par
207 \par
208 {\cf20 /* MAC ADDRESS: MAC_ADDR0:MAC_ADDR1:MAC_ADDR2:MAC_ADDR3:MAC_ADDR4:MAC_ADDR5 */}\par
209 {\cf21 #define MAC_ADDR0   2U}\par
210 {\cf21 #define MAC_ADDR1   0U}\par
211 {\cf21 #define MAC_ADDR2   0U}\par
212 {\cf21 #define MAC_ADDR3   0U}\par
213 {\cf21 #define MAC_ADDR4   0U}\par
214 {\cf21 #define MAC_ADDR5   0U}\par
215 \par
216 {\cf20 /* Definition of the Ethernet driver buffers size and count */}\par
217 {\cf21 #define ETH_RX_BUF_SIZE                ETH_MAX_PACKET_SIZE }{\cf20 /* buffer size for receive               */}{\cf21 }\par
218 {\cf21 #define ETH_TX_BUF_SIZE                ETH_MAX_PACKET_SIZE }{\cf20 /* buffer size for transmit              */}{\cf21 }\par
219 {\cf21 #define ETH_RXBUFNB                    4U       }{\cf20 /* 4 Rx buffers of size ETH_RX_BUF_SIZE  */}{\cf21 }\par
220 {\cf21 #define ETH_TXBUFNB                    4U       }{\cf20 /* 4 Tx buffers of size ETH_TX_BUF_SIZE  */}{\cf21 }\par
221 \par
222 {\cf20 /* Section 2: PHY configuration section */}\par
223 \par
224 {\cf20 /* DP83848_PHY_ADDRESS Address*/}\par
225 {\cf21 #define DP83848_PHY_ADDRESS           0x01U}\par
226 {\cf20 /* PHY Reset delay these values are based on a 1 ms Systick interrupt*/}\par
227 {\cf21 #define PHY_RESET_DELAY                 0x000000FFU}\par
228 {\cf20 /* PHY Configuration delay */}\par
229 {\cf21 #define PHY_CONFIG_DELAY                0x00000FFFU}\par
230 \par
231 {\cf21 #define PHY_READ_TO                     0x0000FFFFU}\par
232 {\cf21 #define PHY_WRITE_TO                    0x0000FFFFU}\par
233 \par
234 {\cf20 /* Section 3: Common PHY Registers */}\par
235 \par
236 {\cf21 #define PHY_BCR                         ((uint16_t)0x0000U)    }\par
237 {\cf21 #define PHY_BSR                         ((uint16_t)0x0001U)    }\par
239 {\cf21 #define PHY_RESET                       ((uint16_t)0x8000U)  }\par
240 {\cf21 #define PHY_LOOPBACK                    ((uint16_t)0x4000U)  }\par
241 {\cf21 #define PHY_FULLDUPLEX_100M             ((uint16_t)0x2100U)  }\par
242 {\cf21 #define PHY_HALFDUPLEX_100M             ((uint16_t)0x2000U)  }\par
243 {\cf21 #define PHY_FULLDUPLEX_10M              ((uint16_t)0x0100U)  }\par
244 {\cf21 #define PHY_HALFDUPLEX_10M              ((uint16_t)0x0000U)  }\par
245 {\cf21 #define PHY_AUTONEGOTIATION             ((uint16_t)0x1000U)  }\par
246 {\cf21 #define PHY_RESTART_AUTONEGOTIATION     ((uint16_t)0x0200U)  }\par
247 {\cf21 #define PHY_POWERDOWN                   ((uint16_t)0x0800U)  }\par
248 {\cf21 #define PHY_ISOLATE                     ((uint16_t)0x0400U)  }\par
250 {\cf21 #define PHY_AUTONEGO_COMPLETE           ((uint16_t)0x0020U)  }\par
251 {\cf21 #define PHY_LINKED_STATUS               ((uint16_t)0x0004U)  }\par
252 {\cf21 #define PHY_JABBER_DETECTION            ((uint16_t)0x0002U)  }\par
254 {\cf20 /* Section 4: Extended PHY Registers */}\par
255 {\cf21 #define PHY_SR                          ((uint16_t)0x10U)    }\par
257 {\cf21 #define PHY_SPEED_STATUS                ((uint16_t)0x0002U)  }\par
258 {\cf21 #define PHY_DUPLEX_STATUS               ((uint16_t)0x0004U)  }\par
260 {\cf20 /* ################## SPI peripheral configuration ########################## */}\par
261 \par
262 {\cf20 /* CRC FEATURE: Use to activate CRC feature inside HAL SPI Driver}\par
263 {\cf20 * Activated: CRC code is present inside driver}\par
264 {\cf20 * Deactivated: CRC code cleaned from driver}\par
265 {\cf20 */}\par
266 \par
267 {\cf21 #define USE_SPI_CRC                     0U}\par
268 \par
269 {\cf20 /* Includes ------------------------------------------------------------------*/}\par
274 {\cf21 #ifdef HAL_RCC_MODULE_ENABLED}\par
275 {\cf21   #include "stm32f4xx_hal_rcc.h"}\par
276 {\cf21 #endif }{\cf20 /* HAL_RCC_MODULE_ENABLED */}{\cf21 }\par
277 \par
278 {\cf21 #ifdef HAL_GPIO_MODULE_ENABLED}\par
279 {\cf21   #include "stm32f4xx_hal_gpio.h"}\par
280 {\cf21 #endif }{\cf20 /* HAL_GPIO_MODULE_ENABLED */}{\cf21 }\par
281 \par
282 {\cf21 #ifdef HAL_EXTI_MODULE_ENABLED}\par
283 {\cf21   #include "stm32f4xx_hal_exti.h"}\par
284 {\cf21 #endif }{\cf20 /* HAL_EXTI_MODULE_ENABLED */}{\cf21 }\par
285 \par
286 {\cf21 #ifdef HAL_DMA_MODULE_ENABLED}\par
287 {\cf21   #include "stm32f4xx_hal_dma.h"}\par
288 {\cf21 #endif }{\cf20 /* HAL_DMA_MODULE_ENABLED */}{\cf21 }\par
289 \par
290 {\cf21 #ifdef HAL_CORTEX_MODULE_ENABLED}\par
291 {\cf21   #include "stm32f4xx_hal_cortex.h"}\par
292 {\cf21 #endif }{\cf20 /* HAL_CORTEX_MODULE_ENABLED */}{\cf21 }\par
293 \par
294 {\cf21 #ifdef HAL_ADC_MODULE_ENABLED}\par
295 {\cf21   #include "stm32f4xx_hal_adc.h"}\par
296 {\cf21 #endif }{\cf20 /* HAL_ADC_MODULE_ENABLED */}{\cf21 }\par
297 \par
298 {\cf21 #ifdef HAL_CAN_MODULE_ENABLED}\par
299 {\cf21   #include "stm32f4xx_hal_can.h"}\par
300 {\cf21 #endif }{\cf20 /* HAL_CAN_MODULE_ENABLED */}{\cf21 }\par
301 \par
302 {\cf21 #ifdef HAL_CAN_LEGACY_MODULE_ENABLED}\par
303 {\cf21   #include "stm32f4xx_hal_can_legacy.h"}\par
304 {\cf21 #endif }{\cf20 /* HAL_CAN_LEGACY_MODULE_ENABLED */}{\cf21 }\par
305 \par
306 {\cf21 #ifdef HAL_CRC_MODULE_ENABLED}\par
307 {\cf21   #include "stm32f4xx_hal_crc.h"}\par
308 {\cf21 #endif }{\cf20 /* HAL_CRC_MODULE_ENABLED */}{\cf21 }\par
309 \par
310 {\cf21 #ifdef HAL_CRYP_MODULE_ENABLED}\par
311 {\cf21   #include "stm32f4xx_hal_cryp.h"}\par
312 {\cf21 #endif }{\cf20 /* HAL_CRYP_MODULE_ENABLED */}{\cf21 }\par
313 \par
314 {\cf21 #ifdef HAL_DMA2D_MODULE_ENABLED}\par
315 {\cf21   #include "stm32f4xx_hal_dma2d.h"}\par
316 {\cf21 #endif }{\cf20 /* HAL_DMA2D_MODULE_ENABLED */}{\cf21 }\par
317 \par
318 {\cf21 #ifdef HAL_DAC_MODULE_ENABLED}\par
319 {\cf21   #include "stm32f4xx_hal_dac.h"}\par
320 {\cf21 #endif }{\cf20 /* HAL_DAC_MODULE_ENABLED */}{\cf21 }\par
321 \par
322 {\cf21 #ifdef HAL_DCMI_MODULE_ENABLED}\par
323 {\cf21   #include "stm32f4xx_hal_dcmi.h"}\par
324 {\cf21 #endif }{\cf20 /* HAL_DCMI_MODULE_ENABLED */}{\cf21 }\par
325 \par
326 {\cf21 #ifdef HAL_ETH_MODULE_ENABLED}\par
327 {\cf21   #include "stm32f4xx_hal_eth.h"}\par
328 {\cf21 #endif }{\cf20 /* HAL_ETH_MODULE_ENABLED */}{\cf21 }\par
329 \par
330 {\cf21 #ifdef HAL_FLASH_MODULE_ENABLED}\par
331 {\cf21   #include "stm32f4xx_hal_flash.h"}\par
332 {\cf21 #endif }{\cf20 /* HAL_FLASH_MODULE_ENABLED */}{\cf21 }\par
333 \par
334 {\cf21 #ifdef HAL_SRAM_MODULE_ENABLED}\par
335 {\cf21   #include "stm32f4xx_hal_sram.h"}\par
336 {\cf21 #endif }{\cf20 /* HAL_SRAM_MODULE_ENABLED */}{\cf21 }\par
337 \par
338 {\cf21 #ifdef HAL_NOR_MODULE_ENABLED}\par
339 {\cf21   #include "stm32f4xx_hal_nor.h"}\par
340 {\cf21 #endif }{\cf20 /* HAL_NOR_MODULE_ENABLED */}{\cf21 }\par
341 \par
342 {\cf21 #ifdef HAL_NAND_MODULE_ENABLED}\par
343 {\cf21   #include "stm32f4xx_hal_nand.h"}\par
344 {\cf21 #endif }{\cf20 /* HAL_NAND_MODULE_ENABLED */}{\cf21 }\par
345 \par
346 {\cf21 #ifdef HAL_PCCARD_MODULE_ENABLED}\par
347 {\cf21   #include "stm32f4xx_hal_pccard.h"}\par
348 {\cf21 #endif }{\cf20 /* HAL_PCCARD_MODULE_ENABLED */}{\cf21 }\par
349 \par
350 {\cf21 #ifdef HAL_SDRAM_MODULE_ENABLED}\par
351 {\cf21   #include "stm32f4xx_hal_sdram.h"}\par
352 {\cf21 #endif }{\cf20 /* HAL_SDRAM_MODULE_ENABLED */}{\cf21 }\par
353 \par
354 {\cf21 #ifdef HAL_HASH_MODULE_ENABLED}\par
355 {\cf21  #include "stm32f4xx_hal_hash.h"}\par
356 {\cf21 #endif }{\cf20 /* HAL_HASH_MODULE_ENABLED */}{\cf21 }\par
357 \par
358 {\cf21 #ifdef HAL_I2C_MODULE_ENABLED}\par
359 {\cf21  #include "stm32f4xx_hal_i2c.h"}\par
360 {\cf21 #endif }{\cf20 /* HAL_I2C_MODULE_ENABLED */}{\cf21 }\par
361 \par
362 {\cf21 #ifdef HAL_SMBUS_MODULE_ENABLED}\par
363 {\cf21  #include "stm32f4xx_hal_smbus.h"}\par
364 {\cf21 #endif }{\cf20 /* HAL_SMBUS_MODULE_ENABLED */}{\cf21 }\par
365 \par
366 {\cf21 #ifdef HAL_I2S_MODULE_ENABLED}\par
367 {\cf21  #include "stm32f4xx_hal_i2s.h"}\par
368 {\cf21 #endif }{\cf20 /* HAL_I2S_MODULE_ENABLED */}{\cf21 }\par
369 \par
370 {\cf21 #ifdef HAL_IWDG_MODULE_ENABLED}\par
371 {\cf21  #include "stm32f4xx_hal_iwdg.h"}\par
372 {\cf21 #endif }{\cf20 /* HAL_IWDG_MODULE_ENABLED */}{\cf21 }\par
373 \par
374 {\cf21 #ifdef HAL_LTDC_MODULE_ENABLED}\par
375 {\cf21  #include "stm32f4xx_hal_ltdc.h"}\par
376 {\cf21 #endif }{\cf20 /* HAL_LTDC_MODULE_ENABLED */}{\cf21 }\par
377 \par
378 {\cf21 #ifdef HAL_PWR_MODULE_ENABLED}\par
379 {\cf21  #include "stm32f4xx_hal_pwr.h"}\par
380 {\cf21 #endif }{\cf20 /* HAL_PWR_MODULE_ENABLED */}{\cf21 }\par
381 \par
382 {\cf21 #ifdef HAL_RNG_MODULE_ENABLED}\par
383 {\cf21  #include "stm32f4xx_hal_rng.h"}\par
384 {\cf21 #endif }{\cf20 /* HAL_RNG_MODULE_ENABLED */}{\cf21 }\par
385 \par
386 {\cf21 #ifdef HAL_RTC_MODULE_ENABLED}\par
387 {\cf21  #include "stm32f4xx_hal_rtc.h"}\par
388 {\cf21 #endif }{\cf20 /* HAL_RTC_MODULE_ENABLED */}{\cf21 }\par
389 \par
390 {\cf21 #ifdef HAL_SAI_MODULE_ENABLED}\par
391 {\cf21  #include "stm32f4xx_hal_sai.h"}\par
392 {\cf21 #endif }{\cf20 /* HAL_SAI_MODULE_ENABLED */}{\cf21 }\par
393 \par
394 {\cf21 #ifdef HAL_SD_MODULE_ENABLED}\par
395 {\cf21  #include "stm32f4xx_hal_sd.h"}\par
396 {\cf21 #endif }{\cf20 /* HAL_SD_MODULE_ENABLED */}{\cf21 }\par
397 \par
398 {\cf21 #ifdef HAL_SPI_MODULE_ENABLED}\par
399 {\cf21  #include "stm32f4xx_hal_spi.h"}\par
400 {\cf21 #endif }{\cf20 /* HAL_SPI_MODULE_ENABLED */}{\cf21 }\par
401 \par
402 {\cf21 #ifdef HAL_TIM_MODULE_ENABLED}\par
403 {\cf21  #include "stm32f4xx_hal_tim.h"}\par
404 {\cf21 #endif }{\cf20 /* HAL_TIM_MODULE_ENABLED */}{\cf21 }\par
405 \par
406 {\cf21 #ifdef HAL_UART_MODULE_ENABLED}\par
407 {\cf21  #include "stm32f4xx_hal_uart.h"}\par
408 {\cf21 #endif }{\cf20 /* HAL_UART_MODULE_ENABLED */}{\cf21 }\par
409 \par
410 {\cf21 #ifdef HAL_USART_MODULE_ENABLED}\par
411 {\cf21  #include "stm32f4xx_hal_usart.h"}\par
412 {\cf21 #endif }{\cf20 /* HAL_USART_MODULE_ENABLED */}{\cf21 }\par
413 \par
414 {\cf21 #ifdef HAL_IRDA_MODULE_ENABLED}\par
415 {\cf21  #include "stm32f4xx_hal_irda.h"}\par
416 {\cf21 #endif }{\cf20 /* HAL_IRDA_MODULE_ENABLED */}{\cf21 }\par
417 \par
418 {\cf21 #ifdef HAL_SMARTCARD_MODULE_ENABLED}\par
419 {\cf21  #include "stm32f4xx_hal_smartcard.h"}\par
420 {\cf21 #endif }{\cf20 /* HAL_SMARTCARD_MODULE_ENABLED */}{\cf21 }\par
421 \par
422 {\cf21 #ifdef HAL_WWDG_MODULE_ENABLED}\par
423 {\cf21  #include "stm32f4xx_hal_wwdg.h"}\par
424 {\cf21 #endif }{\cf20 /* HAL_WWDG_MODULE_ENABLED */}{\cf21 }\par
425 \par
426 {\cf21 #ifdef HAL_PCD_MODULE_ENABLED}\par
427 {\cf21  #include "stm32f4xx_hal_pcd.h"}\par
428 {\cf21 #endif }{\cf20 /* HAL_PCD_MODULE_ENABLED */}{\cf21 }\par
429 \par
430 {\cf21 #ifdef HAL_HCD_MODULE_ENABLED}\par
431 {\cf21  #include "stm32f4xx_hal_hcd.h"}\par
432 {\cf21 #endif }{\cf20 /* HAL_HCD_MODULE_ENABLED */}{\cf21 }\par
433 \par
434 {\cf21 #ifdef HAL_DSI_MODULE_ENABLED}\par
435 {\cf21  #include "stm32f4xx_hal_dsi.h"}\par
436 {\cf21 #endif }{\cf20 /* HAL_DSI_MODULE_ENABLED */}{\cf21 }\par
437 \par
438 {\cf21 #ifdef HAL_QSPI_MODULE_ENABLED}\par
439 {\cf21  #include "stm32f4xx_hal_qspi.h"}\par
440 {\cf21 #endif }{\cf20 /* HAL_QSPI_MODULE_ENABLED */}{\cf21 }\par
441 \par
442 {\cf21 #ifdef HAL_CEC_MODULE_ENABLED}\par
443 {\cf21  #include "stm32f4xx_hal_cec.h"}\par
444 {\cf21 #endif }{\cf20 /* HAL_CEC_MODULE_ENABLED */}{\cf21 }\par
445 \par
446 {\cf21 #ifdef HAL_FMPI2C_MODULE_ENABLED}\par
447 {\cf21  #include "stm32f4xx_hal_fmpi2c.h"}\par
448 {\cf21 #endif }{\cf20 /* HAL_FMPI2C_MODULE_ENABLED */}{\cf21 }\par
449 \par
450 {\cf21 #ifdef HAL_FMPSMBUS_MODULE_ENABLED}\par
451 {\cf21  #include "stm32f4xx_hal_fmpsmbus.h"}\par
452 {\cf21 #endif }{\cf20 /* HAL_FMPSMBUS_MODULE_ENABLED */}{\cf21 }\par
453 \par
454 {\cf21 #ifdef HAL_SPDIFRX_MODULE_ENABLED}\par
455 {\cf21  #include "stm32f4xx_hal_spdifrx.h"}\par
456 {\cf21 #endif }{\cf20 /* HAL_SPDIFRX_MODULE_ENABLED */}{\cf21 }\par
457 \par
458 {\cf21 #ifdef HAL_DFSDM_MODULE_ENABLED}\par
459 {\cf21  #include "stm32f4xx_hal_dfsdm.h"}\par
460 {\cf21 #endif }{\cf20 /* HAL_DFSDM_MODULE_ENABLED */}{\cf21 }\par
461 \par
462 {\cf21 #ifdef HAL_LPTIM_MODULE_ENABLED}\par
463 {\cf21  #include "stm32f4xx_hal_lptim.h"}\par
464 {\cf21 #endif }{\cf20 /* HAL_LPTIM_MODULE_ENABLED */}{\cf21 }\par
465 \par
466 {\cf21 #ifdef HAL_MMC_MODULE_ENABLED}\par
467 {\cf21  #include "stm32f4xx_hal_mmc.h"}\par
468 {\cf21 #endif }{\cf20 /* HAL_MMC_MODULE_ENABLED */}{\cf21 }\par
469 \par
470 {\cf20 /* Exported macro ------------------------------------------------------------*/}\par
471 {\cf21 #ifdef  USE_FULL_ASSERT}\par
480 {\cf21   #define assert_param(expr) ((expr) ? (void)0U : assert_failed((uint8_t *)__FILE__, __LINE__))}\par
481 {\cf20 /* Exported functions ------------------------------------------------------- */}\par
482   {\cf18 void} assert_failed(uint8_t* file, uint32_t line);\par
483 {\cf21 #else}\par
484 {\cf21   #define assert_param(expr) ((void)0U)}\par
485 {\cf21 #endif }{\cf20 /* USE_FULL_ASSERT */}{\cf21 }\par
486 \par
487 {\cf21 #ifdef __cplusplus}\par
488 \}\par
489 {\cf21 #endif}\par
490 \par
491 {\cf21 #endif }{\cf20 /* __STM32F4xx_HAL_CONF_H */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/stm32f4xx_it.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/stm32f4xx_it.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/stm32f4xx_it.h}
{\bkmkstart AAAAAAAAXG}
{\bkmkend AAAAAAAAXG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file contains the headers of the interrupt handlers. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b NMI_Handler} (void){\bkmkstart AAAAAAAAXH}
{\bkmkend AAAAAAAAXH}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function handles Non maskable interrupt. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b HardFault_Handler} (void){\bkmkstart AAAAAAAAXI}
{\bkmkend AAAAAAAAXI}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function handles Hard fault interrupt. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b MemManage_Handler} (void){\bkmkstart AAAAAAAAXJ}
{\bkmkend AAAAAAAAXJ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function handles Memory management fault. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b BusFault_Handler} (void){\bkmkstart AAAAAAAAXK}
{\bkmkend AAAAAAAAXK}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function handles Pre-fetch fault, memory access fault. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b UsageFault_Handler} (void){\bkmkstart AAAAAAAAXL}
{\bkmkend AAAAAAAAXL}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function handles Undefined instruction or illegal state. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b DebugMon_Handler} (void){\bkmkstart AAAAAAAAXM}
{\bkmkend AAAAAAAAXM}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function handles Debug monitor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b EXTI2_IRQHandler} (void){\bkmkstart AAAAAAAAXN}
{\bkmkend AAAAAAAAXN}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function handles EXTI line2 interrupt. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b EXTI9_5_IRQHandler} (void){\bkmkstart AAAAAAAAXO}
{\bkmkend AAAAAAAAXO}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function handles EXTI line[9:5] interrupts. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b TIM6_DAC_IRQHandler} (void){\bkmkstart AAAAAAAAXP}
{\bkmkend AAAAAAAAXP}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function handles TIM6 global interrupt, DAC1 and DAC2 underrun error interrupts. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b DMA2_Stream0_IRQHandler} (void){\bkmkstart AAAAAAAAXQ}
{\bkmkend AAAAAAAAXQ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function handles DMA2 stream0 global interrupt. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b USART6_IRQHandler} (void){\bkmkstart AAAAAAAAXR}
{\bkmkend AAAAAAAAXR}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function handles USART6 global interrupt. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file contains the headers of the interrupt handlers. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Attention\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}Copyright (c) 2023 STMicroelectronics. All rights reserved.\par
This software is licensed under terms that can be found in the LICENSE file in the root directory of this software component. If no LICENSE file comes with this software, it is provided AS-IS. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
stm32f4xx_it.h\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/stm32f4xx_it.h}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Inc/stm32f4xx_it.h}
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /* USER CODE BEGIN Header */}\par
18 {\cf20 /* USER CODE END Header */}\par
19 \par
20 {\cf20 /* Define to prevent recursive inclusion -------------------------------------*/}\par
21 {\cf21 #ifndef __STM32F4xx_IT_H}\par
22 {\cf21 #define __STM32F4xx_IT_H}\par
23 \par
24 {\cf21 #ifdef __cplusplus}\par
25  {\cf17 extern} {\cf22 "C"} \{\par
26 {\cf21 #endif}\par
27 \par
28 {\cf20 /* Private includes ----------------------------------------------------------*/}\par
29 {\cf20 /* USER CODE BEGIN Includes */}\par
30 \par
31 {\cf20 /* USER CODE END Includes */}\par
32 \par
33 {\cf20 /* Exported types ------------------------------------------------------------*/}\par
34 {\cf20 /* USER CODE BEGIN ET */}\par
35 \par
36 {\cf20 /* USER CODE END ET */}\par
37 \par
38 {\cf20 /* Exported constants --------------------------------------------------------*/}\par
39 {\cf20 /* USER CODE BEGIN EC */}\par
40 \par
41 {\cf20 /* USER CODE END EC */}\par
42 \par
43 {\cf20 /* Exported macro ------------------------------------------------------------*/}\par
44 {\cf20 /* USER CODE BEGIN EM */}\par
45 \par
46 {\cf20 /* USER CODE END EM */}\par
47 \par
48 {\cf20 /* Exported functions prototypes ---------------------------------------------*/}\par
49 {\cf18 void} NMI_Handler({\cf18 void});\par
50 {\cf18 void} HardFault_Handler({\cf18 void});\par
51 {\cf18 void} MemManage_Handler({\cf18 void});\par
52 {\cf18 void} BusFault_Handler({\cf18 void});\par
53 {\cf18 void} UsageFault_Handler({\cf18 void});\par
54 {\cf18 void} DebugMon_Handler({\cf18 void});\par
55 {\cf18 void} EXTI2_IRQHandler({\cf18 void});\par
56 {\cf18 void} EXTI9_5_IRQHandler({\cf18 void});\par
57 {\cf18 void} TIM6_DAC_IRQHandler({\cf18 void});\par
58 {\cf18 void} DMA2_Stream0_IRQHandler({\cf18 void});\par
59 {\cf18 void} USART6_IRQHandler({\cf18 void});\par
60 {\cf20 /* USER CODE BEGIN EFP */}\par
61 \par
62 {\cf20 /* USER CODE END EFP */}\par
63 \par
64 {\cf21 #ifdef __cplusplus}\par
65 \}\par
66 {\cf21 #endif}\par
67 \par
68 {\cf21 #endif }{\cf20 /* __STM32F4xx_IT_H */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/ALERT/Alert.c File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/ALERT/Alert.c}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/ALERT/Alert.c}
{\bkmkstart AAAAAAAAXS}
{\bkmkend AAAAAAAAXS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of an indicator for abnormal status of the ventilator. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Alert.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Convert_Battery_Percentage} (){\bkmkstart AAAAAAAAXT}
{\bkmkend AAAAAAAAXT}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert_Battery_Percentage. This function calculate the battery percentage in device. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Split_Alert_Parameter_Packets} (ALERT_RANGE_PACKET *Receive_Graph_Packet)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SEND_ALERT_PACKET. This function store the alert range data using alert_Range structure. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SEND_ALERT_PACKET} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SEND_ALERT_PACKET. This function send the alert frame from the {\b Bluetooth_Data_Send()} function. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Clear_All_Alert_Bits} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clear_All_Alert_Bits. This function resets all alert bits when the alert frame is sent. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Alert_Task} (void *argument)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alert_Task. This alert task runs only during inspiration time to check for patient circuit disconnection alerts and proximal sensor reverse direction. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Alert_Flags_Reset} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alert_Flags_Reset. This function resets all the alerts that occur once when the mode starts. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Check_Alert} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check_Alert. This function calls all alert functions from here. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Alert_Inspiration_Time_Parameter} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alert_Inspiration_Time_Parameter. This function stores the data from the previous breath. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b AC_Supply_or_Battery_Supply_Indication} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
AC_Supply_or_Battery_Supply_Indication. This This function checks whether the device is running on battery mode or AC supply mode. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Alert_Expiration_Time_Parameter} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alert_Expiration_Time_Parameter. This function reset the alert flags during expiration time. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Pip_Alert} (uint8_t PIP)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pip_Alert. This function checks whether the PIP value exceeds the alert limit. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Peep_Alert} (uint8_t PEEP)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Peep_Alert. This function checks whether the PEEP value exceeds the alert limit. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Tidal_Volume_Alert} (int Maximum_Volume_Achieved)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tidal_Volume_Alert. This function checks whether the Tidal volume value exceeds the alert limit. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Minite_Volume_Alert} (int {\b Achieved_Minite_Volume})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Minite_Volume_Alert. This function checks whether the minite volume value exceeds the alert limit. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Respiratory_Rate_Alert} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Respiratory_Rate_Alert. This function checks whether the Respiratory rate value exceeds the alert limit. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Oxygen_Supply_Alert} (uint8_t FIO2_Val, uint8_t Maximum_oxygen_flow)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Oxygen_Supply_Alert. This function checks whether any abnormal condition has occurred in the oxygen inlet section. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Oxygen_Blending_Alert} (uint8_t FIO2_Val, uint8_t Achieved_Oxygen)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Oxygen_Blending_Alert. his function Checks whether Achieved_Oxygen value exceeds the alert limit. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Leak_Alert} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Leak_Alert. This function Checks for any leaks in the breathing circuit. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Patient_Circuit_Disconnected_Alert} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Patient_Circuit_Disconnected_Alert. This function checks if the breathing circuit is disconnected from the device. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Proximal_Flow_Sensor_Reverse_Direction} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Proximal_Flow_Sensor_Reverse_Direction. This function checks if the proximal flow sensor is connected in the reverse direction. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b LED_Alert} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LED_Alert. This function controls the alert indication LED. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Hide_Alert_1} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hide_Alert_1. This function resets the alert bits when an alert occurs due to the patient circuit being disconnected from the device. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Hide_Alert_2} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hide_Alert_2. This function resets the alert bits when an alert occurs due to the proximal flow sensor is connected in the reverse direction. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Read_Battery_Voltage} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert_Battery_Percentage. This function calculate the analog value of battery percentage in device. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Achieved_Respiratory_Count} =0{\bkmkstart AAAAAAAAXU}
{\bkmkend AAAAAAAAXU}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
stores Achieved_Respiratory_Count }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Achieved_One_RR} =0{\bkmkstart AAAAAAAAXV}
{\bkmkend AAAAAAAAXV}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
stores Achieved_One_RR }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b Total_Tidal_volume}{\bkmkstart AAAAAAAAXW}
{\bkmkend AAAAAAAAXW}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b Maximum_Tidal_Volume_Achieved}{\bkmkstart AAAAAAAAXX}
{\bkmkend AAAAAAAAXX}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b Achieved_Minite_Volume} =0{\bkmkstart AAAAAAAAXY}
{\bkmkend AAAAAAAAXY}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
stores volume related data }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b RR_E_TIME_ACHIEVED} =0{\bkmkstart AAAAAAAAXZ}
{\bkmkend AAAAAAAAXZ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
trace expiration time }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b RR_I_TIME_ACHIEVED} =0{\bkmkstart AAAAAAAAYA}
{\bkmkend AAAAAAAAYA}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
trace inspiration time }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b Insp_Volume}{\bkmkstart AAAAAAAAYB}
{\bkmkend AAAAAAAAYB}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b Exp_Volume}{\bkmkstart AAAAAAAAYC}
{\bkmkend AAAAAAAAYC}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
stores volume related data }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b Leak}{\bkmkstart AAAAAAAAYD}
{\bkmkend AAAAAAAAYD}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
stores leak information }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Oxygen_Supply_Failed} = NO{\bkmkstart AAAAAAAAYE}
{\bkmkend AAAAAAAAYE}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
stores oxygen supply status }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Patient_Ckt_Discon} = 0{\bkmkstart AAAAAAAAYF}
{\bkmkend AAAAAAAAYF}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
stores patient circuit disconnection }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Proximal_Flow_Sensor_Reverse} = 0{\bkmkstart AAAAAAAAYG}
{\bkmkend AAAAAAAAYG}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
stores Proximal_Flow_Sensor_Reverse }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Toggle} =0{\bkmkstart AAAAAAAAYH}
{\bkmkend AAAAAAAAYH}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
battery related variables }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b old_State} =1{\bkmkstart AAAAAAAAYI}
{\bkmkend AAAAAAAAYI}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Newstate} =0{\bkmkstart AAAAAAAAYJ}
{\bkmkend AAAAAAAAYJ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
battery related variables }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b Battery_Raw_Value}{\bkmkstart AAAAAAAAYK}
{\bkmkend AAAAAAAAYK}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
battery related variables }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Battery_Voltage_old} =100{\bkmkstart AAAAAAAAYL}
{\bkmkend AAAAAAAAYL}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Battery_Voltage_new} =0{\bkmkstart AAAAAAAAYM}
{\bkmkend AAAAAAAAYM}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
battery related variables }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Alert_Check_Time_vc} = 50{\bkmkstart AAAAAAAAYN}
{\bkmkend AAAAAAAAYN}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of an indicator for abnormal status of the ventilator. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sarath Kumar \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
27/03/24 \par
}}This file contains the Implementation of an indicator for abnormal status of the ventilator, including the initialization. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v AC_Supply_or_Battery_Supply_Indication\:Alert.c}
{\xe \v Alert.c\:AC_Supply_or_Battery_Supply_Indication}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void AC_Supply_or_Battery_Supply_Indication ()}}
\par
{\bkmkstart AAAAAAAAYO}
{\bkmkend AAAAAAAAYO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
AC_Supply_or_Battery_Supply_Indication. This This function checks whether the device is running on battery mode or AC supply mode. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
AC_Supply_or_Battery_Supply_Indication. \par
}}
{\xe \v Alert_Expiration_Time_Parameter\:Alert.c}
{\xe \v Alert.c\:Alert_Expiration_Time_Parameter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Alert_Expiration_Time_Parameter ()}}
\par
{\bkmkstart AAAAAAAAYP}
{\bkmkend AAAAAAAAYP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alert_Expiration_Time_Parameter. This function reset the alert flags during expiration time. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alert_Expiration_Time_Parameter. \par
}}
{\xe \v Alert_Flags_Reset\:Alert.c}
{\xe \v Alert.c\:Alert_Flags_Reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Alert_Flags_Reset ()}}
\par
{\bkmkstart AAAAAAAAYQ}
{\bkmkend AAAAAAAAYQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alert_Flags_Reset. This function resets all the alerts that occur once when the mode starts. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alert_Flags_Reset. \par
}}
{\xe \v Alert_Inspiration_Time_Parameter\:Alert.c}
{\xe \v Alert.c\:Alert_Inspiration_Time_Parameter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Alert_Inspiration_Time_Parameter ()}}
\par
{\bkmkstart AAAAAAAAYR}
{\bkmkend AAAAAAAAYR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alert_Inspiration_Time_Parameter. This function stores the data from the previous breath. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alert_Inspiration_Time_Parameter. \par
}}
{\xe \v Alert_Task\:Alert.c}
{\xe \v Alert.c\:Alert_Task}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Alert_Task (void *  {\i argument})}}
\par
{\bkmkstart AAAAAAAAYS}
{\bkmkend AAAAAAAAYS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alert_Task. This alert task runs only during inspiration time to check for patient circuit disconnection alerts and proximal sensor reverse direction. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alert_Task. \par
}}
{\xe \v Check_Alert\:Alert.c}
{\xe \v Alert.c\:Check_Alert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Check_Alert ()}}
\par
{\bkmkstart AAAAAAAAYT}
{\bkmkend AAAAAAAAYT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check_Alert. This function calls all alert functions from here. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check_Alert. \par
}}
{\xe \v Clear_All_Alert_Bits\:Alert.c}
{\xe \v Alert.c\:Clear_All_Alert_Bits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Clear_All_Alert_Bits ()}}
\par
{\bkmkstart AAAAAAAAYU}
{\bkmkend AAAAAAAAYU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clear_All_Alert_Bits. This function resets all alert bits when the alert frame is sent. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clear_All_Alert_Bits. \par
}}
{\xe \v Hide_Alert_1\:Alert.c}
{\xe \v Alert.c\:Hide_Alert_1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Hide_Alert_1 ()}}
\par
{\bkmkstart AAAAAAAAYV}
{\bkmkend AAAAAAAAYV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hide_Alert_1. This function resets the alert bits when an alert occurs due to the patient circuit being disconnected from the device. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hide_Alert_1. \par
}}
{\xe \v Hide_Alert_2\:Alert.c}
{\xe \v Alert.c\:Hide_Alert_2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Hide_Alert_2 ()}}
\par
{\bkmkstart AAAAAAAAYW}
{\bkmkend AAAAAAAAYW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hide_Alert_2. This function resets the alert bits when an alert occurs due to the proximal flow sensor is connected in the reverse direction. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hide_Alert_2. \par
}}
{\xe \v Leak_Alert\:Alert.c}
{\xe \v Alert.c\:Leak_Alert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Leak_Alert ()}}
\par
{\bkmkstart AAAAAAAAYX}
{\bkmkend AAAAAAAAYX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Leak_Alert. This function Checks for any leaks in the breathing circuit. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Leak_Alert.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None.} \cell }{\cell }
{\row }
}
}}
{\xe \v LED_Alert\:Alert.c}
{\xe \v Alert.c\:LED_Alert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LED_Alert ()}}
\par
{\bkmkstart AAAAAAAAYY}
{\bkmkend AAAAAAAAYY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LED_Alert. This function controls the alert indication LED. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LED_Alert.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None.} \cell }{\cell }
{\row }
}
}}
{\xe \v Minite_Volume_Alert\:Alert.c}
{\xe \v Alert.c\:Minite_Volume_Alert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Minite_Volume_Alert (int  {\i Achieved_Minite_Volume})}}
\par
{\bkmkstart AAAAAAAAYZ}
{\bkmkend AAAAAAAAYZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Minite_Volume_Alert. This function checks whether the minite volume value exceeds the alert limit. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Minite_Volume_Alert.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Achieved_Minite_Volume} \cell }{achieved minite volume in the last one minute. \cell }
{\row }
}
}}
{\xe \v Oxygen_Blending_Alert\:Alert.c}
{\xe \v Alert.c\:Oxygen_Blending_Alert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Oxygen_Blending_Alert (uint8_t  {\i FIO2_Val}, uint8_t  {\i Achieved_Oxygen})}}
\par
{\bkmkstart AAAAAAAAZA}
{\bkmkend AAAAAAAAZA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Oxygen_Blending_Alert. his function Checks whether Achieved_Oxygen value exceeds the alert limit. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Oxygen_Blending_Alert.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i FIO2_Val} \cell }{mode set FIO2_Val. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Maximum_oxygen_flow} \cell }{maximum oxygen flow achieved in last breath. \cell }
{\row }
}
}}
{\xe \v Oxygen_Supply_Alert\:Alert.c}
{\xe \v Alert.c\:Oxygen_Supply_Alert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Oxygen_Supply_Alert (uint8_t  {\i FIO2_Val}, uint8_t  {\i Maximum_oxygen_flow})}}
\par
{\bkmkstart AAAAAAAAZB}
{\bkmkend AAAAAAAAZB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Oxygen_Supply_Alert. This function checks whether any abnormal condition has occurred in the oxygen inlet section. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Oxygen_Supply_Alert.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i FIO2_Val} \cell }{mode set FIO2_Val. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Maximum_oxygen_flow} \cell }{maximum oxygen flow achieved in last breath. \cell }
{\row }
}
}}
{\xe \v Patient_Circuit_Disconnected_Alert\:Alert.c}
{\xe \v Alert.c\:Patient_Circuit_Disconnected_Alert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Patient_Circuit_Disconnected_Alert ()}}
\par
{\bkmkstart AAAAAAAAZC}
{\bkmkend AAAAAAAAZC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Patient_Circuit_Disconnected_Alert. This function checks if the breathing circuit is disconnected from the device. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Patient_Circuit_Disconnected_Alert.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None.} \cell }{\cell }
{\row }
}
}}
{\xe \v Peep_Alert\:Alert.c}
{\xe \v Alert.c\:Peep_Alert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Peep_Alert (uint8_t  {\i PEEP})}}
\par
{\bkmkstart AAAAAAAAZD}
{\bkmkend AAAAAAAAZD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Peep_Alert. This function checks whether the PEEP value exceeds the alert limit. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Peep_Alert.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i PEEP} \cell }{minimum PEEP value achieved in the last breath cycle from the mode \cell }
{\row }
}
}}
{\xe \v Pip_Alert\:Alert.c}
{\xe \v Alert.c\:Pip_Alert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Pip_Alert (uint8_t  {\i PIP})}}
\par
{\bkmkstart AAAAAAAAZE}
{\bkmkend AAAAAAAAZE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pip_Alert. This function checks whether the PIP value exceeds the alert limit. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pip_Alert.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i PIP} \cell }{Maximum PIP value achieved in the last breath cycle from the mode \cell }
{\row }
}
}}
{\xe \v Proximal_Flow_Sensor_Reverse_Direction\:Alert.c}
{\xe \v Alert.c\:Proximal_Flow_Sensor_Reverse_Direction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Proximal_Flow_Sensor_Reverse_Direction ()}}
\par
{\bkmkstart AAAAAAAAZF}
{\bkmkend AAAAAAAAZF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Proximal_Flow_Sensor_Reverse_Direction. This function checks if the proximal flow sensor is connected in the reverse direction. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Proximal_Flow_Sensor_Reverse_Direction.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None.} \cell }{\cell }
{\row }
}
}}
{\xe \v Read_Battery_Voltage\:Alert.c}
{\xe \v Alert.c\:Read_Battery_Voltage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Read_Battery_Voltage ()}}
\par
{\bkmkstart AAAAAAAAZG}
{\bkmkend AAAAAAAAZG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert_Battery_Percentage. This function calculate the analog value of battery percentage in device. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read_Battery_Voltage. \par
}}
{\xe \v Respiratory_Rate_Alert\:Alert.c}
{\xe \v Alert.c\:Respiratory_Rate_Alert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Respiratory_Rate_Alert ()}}
\par
{\bkmkstart AAAAAAAAZH}
{\bkmkend AAAAAAAAZH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Respiratory_Rate_Alert. This function checks whether the Respiratory rate value exceeds the alert limit. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Respiratory_Rate_Alert.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None.} \cell }{\cell }
{\row }
}
}}
{\xe \v SEND_ALERT_PACKET\:Alert.c}
{\xe \v Alert.c\:SEND_ALERT_PACKET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SEND_ALERT_PACKET ()}}
\par
{\bkmkstart AAAAAAAAZI}
{\bkmkend AAAAAAAAZI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SEND_ALERT_PACKET. This function send the alert frame from the {\b Bluetooth_Data_Send()} function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SEND_ALERT_PACKET. \par
}}
{\xe \v Split_Alert_Parameter_Packets\:Alert.c}
{\xe \v Alert.c\:Split_Alert_Parameter_Packets}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Split_Alert_Parameter_Packets (ALERT_RANGE_PACKET *  {\i Receive_Graph_Packet})}}
\par
{\bkmkstart AAAAAAAAZJ}
{\bkmkend AAAAAAAAZJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SEND_ALERT_PACKET. This function store the alert range data using alert_Range structure. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Split_Alert_Parameter_Packets. \par
}}
{\xe \v Tidal_Volume_Alert\:Alert.c}
{\xe \v Alert.c\:Tidal_Volume_Alert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Tidal_Volume_Alert (int  {\i Maximum_Volume_Achieved})}}
\par
{\bkmkstart AAAAAAAAZK}
{\bkmkend AAAAAAAAZK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tidal_Volume_Alert. This function checks whether the Tidal volume value exceeds the alert limit. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tidal_Volume_Alert.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Maximum_Volume_Achieved} \cell }{achieved tidal volume in the last breath cycle from the mode \cell }
{\row }
}
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/Bluetooth/Bluetooth_Data_Split.c File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/Bluetooth/Bluetooth_Data_Split.c}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/Bluetooth/Bluetooth_Data_Split.c}
{\bkmkstart AAAAAAAAZL}
{\bkmkend AAAAAAAAZL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of split Blue-tooth data. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Bluetooth_Data_Split.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Rearrange_Bluetooth_Data} (){\bkmkstart AAAAAAAAZM}
{\bkmkend AAAAAAAAZM}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Split_Mode_Parameter_Packets} ({\b RECEIVE_GRAPH_PACKET} *Receive_Graph_Packet){\bkmkstart AAAAAAAAZN}
{\bkmkend AAAAAAAAZN}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b chksum8_2} (const unsigned char *buff, size_t len){\bkmkstart AAAAAAAAZO}
{\bkmkend AAAAAAAAZO}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
chksum8. This function is used to identify a data error. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Bluetooth_Packet_Data_Split} ({\b RECEIVE_GRAPH_PACKET} *Receive_Graph_Packet){\bkmkstart AAAAAAAAZP}
{\bkmkend AAAAAAAAZP}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
split bluetooth received data function. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b SENSOR} {\b MPX7002}{\bkmkstart AAAAAAAAZQ}
{\bkmkend AAAAAAAAZQ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of split Blue-tooth data. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sarath Kumar \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
27/03/24 \par
}}This file contains the implementation split Blue-tooth data. and pause and resume a device. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/Bluetooth/Bluetooth_Graph.c File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/Bluetooth/Bluetooth_Graph.c}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/Bluetooth/Bluetooth_Graph.c}
{\bkmkstart AAAAAAAAZR}
{\bkmkend AAAAAAAAZR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of Blue-tooth data reception and transmission. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Bluetooth_Graph.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Bluetooth_Task} (void *argument)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bluetooth_Task. This task control whole uart control function. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b UART6_Init} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UART6_Init. This Function initialise the uart 6 peripheral. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b chksum8} (const unsigned char *buff, size_t len)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
chksum8. This function is used to identify a data error. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Bluetooth_Graph_Data_Send} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bluetooth_Graph_Data_Send. This Function send the mode graph data. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Bluetooth_Data_Send} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bluetooth_Data_Send. This function controls the type of Bluetooth data that needs to be sent at a time. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b BlueTooth_Receiver_Task} (void *argument)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BlueTooth_Receiver_Task. This function controls the type of Bluetooth data that needs to be send at a time. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Bluetooth_data_split_Task} (void *argument)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bluetooth_data_split_Task. This function calls from the BlueTooth_Receiver_Task. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b HAL_UART_RxCpltCallback} (UART_HandleTypeDef *huart)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HAL_UART_RxCpltCallback. This is an interrupt function call from UART6.. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of Blue-tooth data reception and transmission. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sarath Kumar \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
27/03/24 \par
}}This file contains the implementation Blue-tooth data reception and transmission using interrupts,task and function \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v Bluetooth_Data_Send\:Bluetooth_Graph.c}
{\xe \v Bluetooth_Graph.c\:Bluetooth_Data_Send}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Bluetooth_Data_Send ()}}
\par
{\bkmkstart AAAAAAAAZS}
{\bkmkend AAAAAAAAZS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bluetooth_Data_Send. This function controls the type of Bluetooth data that needs to be sent at a time. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
whole Bluetooth_Data_Send.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None.} \cell }{\cell }
{\row }
}
}}
{\xe \v Bluetooth_data_split_Task\:Bluetooth_Graph.c}
{\xe \v Bluetooth_Graph.c\:Bluetooth_data_split_Task}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Bluetooth_data_split_Task (void *  {\i argument})}}
\par
{\bkmkstart AAAAAAAAZT}
{\bkmkend AAAAAAAAZT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bluetooth_data_split_Task. This function calls from the BlueTooth_Receiver_Task. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
split bluetooth received data task.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Postcondition\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
it split the data after the function call. \par
}}}}
{\xe \v Bluetooth_Graph_Data_Send\:Bluetooth_Graph.c}
{\xe \v Bluetooth_Graph.c\:Bluetooth_Graph_Data_Send}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Bluetooth_Graph_Data_Send ()}}
\par
{\bkmkstart AAAAAAAAZU}
{\bkmkend AAAAAAAAZU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bluetooth_Graph_Data_Send. This Function send the mode graph data. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bluetooth_Graph_Data_Send.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None.} \cell }{\cell }
{\row }
}
}}
{\xe \v BlueTooth_Receiver_Task\:Bluetooth_Graph.c}
{\xe \v Bluetooth_Graph.c\:BlueTooth_Receiver_Task}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BlueTooth_Receiver_Task (void *  {\i argument})}}
\par
{\bkmkstart AAAAAAAAZV}
{\bkmkend AAAAAAAAZV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BlueTooth_Receiver_Task. This function controls the type of Bluetooth data that needs to be send at a time. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Receive bluetooth data task.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Postcondition\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
this function resume the Bluetooth_data_split_Task. \par
}}}}
{\xe \v Bluetooth_Task\:Bluetooth_Graph.c}
{\xe \v Bluetooth_Graph.c\:Bluetooth_Task}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Bluetooth_Task (void *  {\i argument})}}
\par
{\bkmkstart AAAAAAAAZW}
{\bkmkend AAAAAAAAZW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bluetooth_Task. This task control whole uart control function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bluetooth task.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None.} \cell }{\cell }
{\row }
}
}}
{\xe \v chksum8\:Bluetooth_Graph.c}
{\xe \v Bluetooth_Graph.c\:chksum8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t chksum8 (const unsigned char *  {\i buff}, size_t  {\i len})}}
\par
{\bkmkstart AAAAAAAAZX}
{\bkmkend AAAAAAAAZX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
chksum8. This function is used to identify a data error. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
check sum function. \par
}}
{\xe \v HAL_UART_RxCpltCallback\:Bluetooth_Graph.c}
{\xe \v Bluetooth_Graph.c\:HAL_UART_RxCpltCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HAL_UART_RxCpltCallback (UART_HandleTypeDef *  {\i huart})}}
\par
{\bkmkstart AAAAAAAAZY}
{\bkmkend AAAAAAAAZY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HAL_UART_RxCpltCallback. This is an interrupt function call from UART6.. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i uart6.} \cell }{\cell }
{\row }
}
}}
{\xe \v UART6_Init\:Bluetooth_Graph.c}
{\xe \v Bluetooth_Graph.c\:UART6_Init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void UART6_Init ()}}
\par
{\bkmkstart AAAAAAAAZZ}
{\bkmkend AAAAAAAAZZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UART6_Init. This Function initialise the uart 6 peripheral. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UART6 initialization.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None.} \cell }{\cell }
{\row }
}
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/Expiratory_Valve_Control/Expiratory_Valve_Control_Pressure_Mode.c File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/Expiratory_Valve_Control/Expiratory_Valve_Control_Pressure_Mode.c}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/Expiratory_Valve_Control/Expiratory_Valve_Control_Pressure_Mode.c}
{\bkmkstart AAAAAAABAA}
{\bkmkend AAAAAAABAA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of Expiratory_Valve_Control_Pressure_Mode Concept. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Expiratory_Valve_Control_Pressure_Mode.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static uint16_t {\b Below_30_RR_Control} (uint8_t Achieved_PEEP, uint8_t Set_Respiratory_Rate, uint32_t Inspiration_Time_in_MS, uint8_t Set_PEEP, uint16_t Valve_Open_Time)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Below_30_RR_Control. This function control valve open time and temp peep control. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static uint16_t {\b Above_30_RR_Control} (uint8_t Achieved_PEEP, uint8_t Set_Respiratory_Rate, uint32_t Inspiration_Time_in_MS, uint8_t Set_PEEP, uint16_t Valve_Open_Time)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Above_30_RR_Control. This function control valve open time and temp peep control. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b PEEP_Control_For_Expiratory_Valve_Open_Time_In_Pressure_Mode} (uint8_t Achieved_PEEP, uint8_t Set_Respiratory_Rate, uint32_t Inspiration_Time_in_MS, uint8_t Set_PEEP, uint16_t Valve_Open_Time)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PEEP_Control_For_Expiratory_Valve_Open_Time_In_Pressure_Mode. This function call the any one function based upon set value. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of Expiratory_Valve_Control_Pressure_Mode Concept. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sarath Kumar \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
27/03/24 \par
}}This file contains the implementation of Expiratory_Valve_Control_Pressure_Mode Concept within a mode, including the initialization \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v Above_30_RR_Control\:Expiratory_Valve_Control_Pressure_Mode.c}
{\xe \v Expiratory_Valve_Control_Pressure_Mode.c\:Above_30_RR_Control}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static uint16_t Above_30_RR_Control (uint8_t  {\i Achieved_PEEP}, uint8_t  {\i Set_Respiratory_Rate}, uint32_t  {\i Inspiration_Time_in_MS}, uint8_t  {\i Set_PEEP}, uint16_t  {\i Valve_Open_Time}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABAB}
{\bkmkend AAAAAAABAB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Above_30_RR_Control. This function control valve open time and temp peep control. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Achieved_PEEP} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Set_Respiratory_Rate} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Inspiration_Time_in_MS} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Set_PEEP} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Valve_Open_Time} \cell }{\cell }
{\row }
}
}}
{\xe \v Below_30_RR_Control\:Expiratory_Valve_Control_Pressure_Mode.c}
{\xe \v Expiratory_Valve_Control_Pressure_Mode.c\:Below_30_RR_Control}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static uint16_t Below_30_RR_Control (uint8_t  {\i Achieved_PEEP}, uint8_t  {\i Set_Respiratory_Rate}, uint32_t  {\i Inspiration_Time_in_MS}, uint8_t  {\i Set_PEEP}, uint16_t  {\i Valve_Open_Time}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABAC}
{\bkmkend AAAAAAABAC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Below_30_RR_Control. This function control valve open time and temp peep control. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Achieved_PEEP} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Set_Respiratory_Rate} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Inspiration_Time_in_MS} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Set_PEEP} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Valve_Open_Time} \cell }{\cell }
{\row }
}
}}
{\xe \v PEEP_Control_For_Expiratory_Valve_Open_Time_In_Pressure_Mode\:Expiratory_Valve_Control_Pressure_Mode.c}
{\xe \v Expiratory_Valve_Control_Pressure_Mode.c\:PEEP_Control_For_Expiratory_Valve_Open_Time_In_Pressure_Mode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t PEEP_Control_For_Expiratory_Valve_Open_Time_In_Pressure_Mode (uint8_t  {\i Achieved_PEEP}, uint8_t  {\i Set_Respiratory_Rate}, uint32_t  {\i Inspiration_Time_in_MS}, uint8_t  {\i Set_PEEP}, uint16_t  {\i Valve_Open_Time})}}
\par
{\bkmkstart AAAAAAABAD}
{\bkmkend AAAAAAABAD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PEEP_Control_For_Expiratory_Valve_Open_Time_In_Pressure_Mode. This function call the any one function based upon set value. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
control PEEP_Control_For_Expiratory_Valve_Open_Time_In_Pressure_Modee.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Achieved_PEEP} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Set_Respiratory_Rate} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Inspiration_Time_in_MS} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Set_PEEP} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Valve_Open_Time} \cell }{\cell }
{\row }
}
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/HFNC/HFNC.c File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/HFNC/HFNC.c}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/HFNC/HFNC.c}
{\bkmkstart AAAAAAABAE}
{\bkmkend AAAAAAABAE}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of HFNC Feature. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "HFNC.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Check_O2_Supply} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
O2 Supply Alert. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static uint16_t {\b HFNC_TUNE_DAC_VALUE} (uint16_t *, uint8_t)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tune a blower dac value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b HFNC_Task} (void *argument)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HFNC_Task. This Task Control blower value to reach a Required Flow rate with maintain a Required Oxygen. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b HFNC_Packet_Data} ({\b RECEIVE_GRAPH_PACKET} *Receive_Graph_Packet)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HFNC data Split. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b O2_supply_error_count}{\bkmkstart AAAAAAABAF}
{\bkmkend AAAAAAABAF}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b HFNC_DAC_VALUE_TEMP}{\bkmkstart AAAAAAABAG}
{\bkmkend AAAAAAABAG}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b Cummulative_Flow_Value}{\bkmkstart AAAAAAABAH}
{\bkmkend AAAAAAABAH}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cummulative_Flow_Value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b Flow_count}{\bkmkstart AAAAAAABAI}
{\bkmkend AAAAAAABAI}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flow_count. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b LAST_HFNC_BLOWER_DAC_VALUE} = 400{\bkmkstart AAAAAAABAJ}
{\bkmkend AAAAAAABAJ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
last hfnc blower dac value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b HFNC_BLOWER_DAC_VALUE}{\bkmkstart AAAAAAABAK}
{\bkmkend AAAAAAABAK}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
current blower dac value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b Check_O2} = 3000{\bkmkstart AAAAAAABAL}
{\bkmkend AAAAAAABAL}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
check O2. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of HFNC Feature. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sarath Kumar \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
27/03/24 \par
}}This file contains the implementation of HFNC control Function, Including HFNC Data Split and Alert Control. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v Check_O2_Supply\:HFNC.c}
{\xe \v HFNC.c\:Check_O2_Supply}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Check_O2_Supply (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABAM}
{\bkmkend AAAAAAABAM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
O2 Supply Alert. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check_O2_Supply This function checks for disconnection of the O2 supply.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i none} \cell }{\cell }
{\row }
}
}}
{\xe \v HFNC_Packet_Data\:HFNC.c}
{\xe \v HFNC.c\:HFNC_Packet_Data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HFNC_Packet_Data ({\b RECEIVE_GRAPH_PACKET} *  {\i Receive_Graph_Packet})}}
\par
{\bkmkstart AAAAAAABAN}
{\bkmkend AAAAAAABAN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HFNC data Split. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
split HFNC buffer from bluetooth received data .\par
This function Split HFNC MODE Data from Blue-tooth. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i {\b RECEIVE_GRAPH_PACKET}} \cell }{data from blue-tooth. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Postcondition\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
HFNC mode data is Separated. \par
}}}}
{\xe \v HFNC_Task\:HFNC.c}
{\xe \v HFNC.c\:HFNC_Task}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HFNC_Task (void *  {\i argument})}}
\par
{\bkmkstart AAAAAAABAO}
{\bkmkend AAAAAAABAO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HFNC_Task. This Task Control blower value to reach a Required Flow rate with maintain a Required Oxygen. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HFNC_Task.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i none.} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Postcondition\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
none. \par
}}}}
{\xe \v HFNC_TUNE_DAC_VALUE\:HFNC.c}
{\xe \v HFNC.c\:HFNC_TUNE_DAC_VALUE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static uint16_t HFNC_TUNE_DAC_VALUE (uint16_t *  {\i Last_Blower_DAC_Val}, uint8_t  {\i Set_Flow}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABAP}
{\bkmkend AAAAAAABAP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tune a blower dac value. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i *Last_Blower_DAC_Val} \cell }{last used blower value. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Set_Flow} \cell }{set flow. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
uint16_t Blower dac value is passed.\par
}}This function alters the blower value to achieve the required flow rate. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i *Last_Blower_DAC_Val} \cell }{last used blower value. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Set_Flow} \cell }{set flow. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
uint16_t Blower dac value is passed. \par
}}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/OTHERS/Mode_Initial_Flag_Set.c File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/OTHERS/Mode_Initial_Flag_Set.c}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/OTHERS/Mode_Initial_Flag_Set.c}
{\bkmkstart AAAAAAABAQ}
{\bkmkend AAAAAAABAQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of Initial setup before starting the mode. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Mode_Initial_Flag_Set.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b PSV_Mask_Mode_initial_flags_sets} (){\bkmkstart AAAAAAABAR}
{\bkmkend AAAAAAABAR}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PSV_Initial_Flags_SET. This function resets flags for PSV MASK mode and also starts PSV MASK mode. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b PSV_ET_TUBE_Mode_initial_flags_sets} (){\bkmkstart AAAAAAABAS}
{\bkmkend AAAAAAABAS}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PSV_Initial_Flags_SET. This function resets flags for PSV ET TUBE mode and also starts PSV ET TUBE mode. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Mode_Initial_Flag_Set_Task} (void *argument)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mode_Initial_Flag_Set_Task. This task determines the initialization of flags in the specified mode. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PC_CMV_Initial_Flags_SET} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_CMV_Initial_Flags_SET. This function resets flags for PCCMV mode and also starts PCCMV mode. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b VC_CMV_Initial_Flags_SET} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_CMV_Initial_Flags_SET. This function resets flags for VCCMV mode and also starts VCCMV mode. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PC_SIMV_Initial_Flags_SET} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_SIMV_Initial_Flags_SET. This function resets flags for PC SIMV mode and also starts PC SIMV mode. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b VC_SIMV_Initial_Flags_SET} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_SIMV_Initial_Flags_SET. This function resets flags for VC SIMV mode and also starts VC SIMV mode. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PSV_Initial_Flags_SET} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PSV_Initial_Flags_SET. This function resets flags for PSV mode and also starts PSV mode. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CPAP_Initial_Flags_SET} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CPAP_Initial_Flags_SET. This function resets flags for CPAP mode and also starts CPAP mode. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b BIBAP_Initial_Flags_SET} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BIBAP_Initial_Flags_SET. This function resets flags for BIPAP mode and also starts BIPAP mode. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b APRV_Initial_Flags_SET} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
APRV_Initial_Flags_SET. This function resets flags for APRV mode and also starts APRV mode. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Backup_PC_CMV_Initial_Flags_SET} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Backup_PC_CMV_Initial_Flags_SET. This function resets flags for Backup PCCMV mode and also starts Backup PC CMV mode. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Reset_PC_CMV_Old_Flags_Reset} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset_PC_CMV_Old_Flags_Reset. This function Reset old reset flags for PC CMV.. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Reset_VC_CMV_Old_Flags_Reset} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset_VC_CMV_Old_Flags_Reset. This function Reset old reset flags for VCCMV. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Reset_PC_SIMV_Old_Flags_Reset} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset_PC_SIMV_Old_Flags_Reset. This function resets old flags for PC SIMV. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Reset_VC_SIMV_Old_Flags_Reset} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset_PC_CMV_Old_Flags_Reset. This function Reset old reset flags for VC SIMV.. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Reset_PC_CMV_BACKUP_Old_Flags_Reset} (){\bkmkstart AAAAAAABAT}
{\bkmkend AAAAAAABAT}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset_PC_CMV_BACKUP_Old_Flags_Reset. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Reset_Patient_Circuit_Diconnceted_Alert_Flags} (){\bkmkstart AAAAAAABAU}
{\bkmkend AAAAAAABAU}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset_Patient_Circuit_Diconnceted_Alert_Flags. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Reset_Flow_Offset} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PSV_Initial_Flags_SET. This function get offset values of sensor. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b DEC_DAC} =200{\bkmkstart AAAAAAABAV}
{\bkmkend AAAAAAABAV}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Valve_Condition}{\bkmkstart AAAAAAABAW}
{\bkmkend AAAAAAABAW}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b O2_max_Control}{\bkmkstart AAAAAAABAX}
{\bkmkend AAAAAAABAX}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Dummy}{\bkmkstart AAAAAAABAY}
{\bkmkend AAAAAAABAY}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b SENSOR} {\b MPX7002}{\bkmkstart AAAAAAABAZ}
{\bkmkend AAAAAAABAZ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b SENSOR} {\b MPX5010}{\bkmkstart AAAAAAABBA}
{\bkmkend AAAAAAABBA}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MPX5010 Sensor - Defined as a generic sensor. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of Initial setup before starting the mode. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sarath Kumar \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
27/03/24 \par
}}This file contains the implementation of Initial setup before starting the mode. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v APRV_Initial_Flags_SET\:Mode_Initial_Flag_Set.c}
{\xe \v Mode_Initial_Flag_Set.c\:APRV_Initial_Flags_SET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void APRV_Initial_Flags_SET ()}}
\par
{\bkmkstart AAAAAAABBB}
{\bkmkend AAAAAAABBB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
APRV_Initial_Flags_SET. This function resets flags for APRV mode and also starts APRV mode. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
APRV_Initial_Flags_SET. \par
}}
{\xe \v Backup_PC_CMV_Initial_Flags_SET\:Mode_Initial_Flag_Set.c}
{\xe \v Mode_Initial_Flag_Set.c\:Backup_PC_CMV_Initial_Flags_SET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Backup_PC_CMV_Initial_Flags_SET ()}}
\par
{\bkmkstart AAAAAAABBC}
{\bkmkend AAAAAAABBC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Backup_PC_CMV_Initial_Flags_SET. This function resets flags for Backup PCCMV mode and also starts Backup PC CMV mode. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Backup_PC_CMV_Initial_Flags_SET. \par
}}
{\xe \v BIBAP_Initial_Flags_SET\:Mode_Initial_Flag_Set.c}
{\xe \v Mode_Initial_Flag_Set.c\:BIBAP_Initial_Flags_SET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BIBAP_Initial_Flags_SET ()}}
\par
{\bkmkstart AAAAAAABBD}
{\bkmkend AAAAAAABBD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BIBAP_Initial_Flags_SET. This function resets flags for BIPAP mode and also starts BIPAP mode. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BIBAP_Initial_Flags_SET. \par
}}
{\xe \v CPAP_Initial_Flags_SET\:Mode_Initial_Flag_Set.c}
{\xe \v Mode_Initial_Flag_Set.c\:CPAP_Initial_Flags_SET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CPAP_Initial_Flags_SET ()}}
\par
{\bkmkstart AAAAAAABBE}
{\bkmkend AAAAAAABBE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CPAP_Initial_Flags_SET. This function resets flags for CPAP mode and also starts CPAP mode. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CPAP_Initial_Flags_SET. \par
}}
{\xe \v Mode_Initial_Flag_Set_Task\:Mode_Initial_Flag_Set.c}
{\xe \v Mode_Initial_Flag_Set.c\:Mode_Initial_Flag_Set_Task}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Mode_Initial_Flag_Set_Task (void *  {\i argument})}}
\par
{\bkmkstart AAAAAAABBF}
{\bkmkend AAAAAAABBF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mode_Initial_Flag_Set_Task. This task determines the initialization of flags in the specified mode. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mode_Initial_Flag_Set_Task. \par
}}
{\xe \v PC_CMV_Initial_Flags_SET\:Mode_Initial_Flag_Set.c}
{\xe \v Mode_Initial_Flag_Set.c\:PC_CMV_Initial_Flags_SET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PC_CMV_Initial_Flags_SET ()}}
\par
{\bkmkstart AAAAAAABBG}
{\bkmkend AAAAAAABBG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_CMV_Initial_Flags_SET. This function resets flags for PCCMV mode and also starts PCCMV mode. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_CMV_Initial_Flags_SET. \par
}}
{\xe \v PC_SIMV_Initial_Flags_SET\:Mode_Initial_Flag_Set.c}
{\xe \v Mode_Initial_Flag_Set.c\:PC_SIMV_Initial_Flags_SET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PC_SIMV_Initial_Flags_SET ()}}
\par
{\bkmkstart AAAAAAABBH}
{\bkmkend AAAAAAABBH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_SIMV_Initial_Flags_SET. This function resets flags for PC SIMV mode and also starts PC SIMV mode. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_SIMV_Initial_Flags_SET. \par
}}
{\xe \v PSV_Initial_Flags_SET\:Mode_Initial_Flag_Set.c}
{\xe \v Mode_Initial_Flag_Set.c\:PSV_Initial_Flags_SET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PSV_Initial_Flags_SET ()}}
\par
{\bkmkstart AAAAAAABBI}
{\bkmkend AAAAAAABBI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PSV_Initial_Flags_SET. This function resets flags for PSV mode and also starts PSV mode. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PSV_Initial_Flags_SET. \par
}}
{\xe \v Reset_Flow_Offset\:Mode_Initial_Flag_Set.c}
{\xe \v Mode_Initial_Flag_Set.c\:Reset_Flow_Offset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Reset_Flow_Offset ()}}
\par
{\bkmkstart AAAAAAABBJ}
{\bkmkend AAAAAAABBJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PSV_Initial_Flags_SET. This function get offset values of sensor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset_Flow_Offset. \par
}}
{\xe \v Reset_PC_CMV_Old_Flags_Reset\:Mode_Initial_Flag_Set.c}
{\xe \v Mode_Initial_Flag_Set.c\:Reset_PC_CMV_Old_Flags_Reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Reset_PC_CMV_Old_Flags_Reset ()}}
\par
{\bkmkstart AAAAAAABBK}
{\bkmkend AAAAAAABBK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset_PC_CMV_Old_Flags_Reset. This function Reset old reset flags for PC CMV.. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset_PC_CMV_Old_Flags_Reset. \par
}}
{\xe \v Reset_PC_SIMV_Old_Flags_Reset\:Mode_Initial_Flag_Set.c}
{\xe \v Mode_Initial_Flag_Set.c\:Reset_PC_SIMV_Old_Flags_Reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Reset_PC_SIMV_Old_Flags_Reset ()}}
\par
{\bkmkstart AAAAAAABBL}
{\bkmkend AAAAAAABBL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset_PC_SIMV_Old_Flags_Reset. This function resets old flags for PC SIMV. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset_PC_SIMV_Old_Flags_Reset. \par
}}
{\xe \v Reset_VC_CMV_Old_Flags_Reset\:Mode_Initial_Flag_Set.c}
{\xe \v Mode_Initial_Flag_Set.c\:Reset_VC_CMV_Old_Flags_Reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Reset_VC_CMV_Old_Flags_Reset ()}}
\par
{\bkmkstart AAAAAAABBM}
{\bkmkend AAAAAAABBM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset_VC_CMV_Old_Flags_Reset. This function Reset old reset flags for VCCMV. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset_VC_CMV_Old_Flags_Reset. \par
}}
{\xe \v Reset_VC_SIMV_Old_Flags_Reset\:Mode_Initial_Flag_Set.c}
{\xe \v Mode_Initial_Flag_Set.c\:Reset_VC_SIMV_Old_Flags_Reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Reset_VC_SIMV_Old_Flags_Reset ()}}
\par
{\bkmkstart AAAAAAABBN}
{\bkmkend AAAAAAABBN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset_PC_CMV_Old_Flags_Reset. This function Reset old reset flags for VC SIMV.. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset_VC_SIMV_Old_Flags_Reset. \par
}}
{\xe \v VC_CMV_Initial_Flags_SET\:Mode_Initial_Flag_Set.c}
{\xe \v Mode_Initial_Flag_Set.c\:VC_CMV_Initial_Flags_SET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void VC_CMV_Initial_Flags_SET ()}}
\par
{\bkmkstart AAAAAAABBO}
{\bkmkend AAAAAAABBO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_CMV_Initial_Flags_SET. This function resets flags for VCCMV mode and also starts VCCMV mode. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_CMV_Initial_Flags_SET. \par
}}
{\xe \v VC_SIMV_Initial_Flags_SET\:Mode_Initial_Flag_Set.c}
{\xe \v Mode_Initial_Flag_Set.c\:VC_SIMV_Initial_Flags_SET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void VC_SIMV_Initial_Flags_SET ()}}
\par
{\bkmkstart AAAAAAABBP}
{\bkmkend AAAAAAABBP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_SIMV_Initial_Flags_SET. This function resets flags for VC SIMV mode and also starts VC SIMV mode. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_SIMV_Initial_Flags_SET. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/OTHERS/Two_Milli_Second_Task.c File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/OTHERS/Two_Milli_Second_Task.c}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/OTHERS/Two_Milli_Second_Task.c}
{\bkmkstart AAAAAAABBQ}
{\bkmkend AAAAAAABBQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of time based concept. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Two_Milli_Second_Task.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Time_Trace_Task} (void *argument){\bkmkstart AAAAAAABBR}
{\bkmkend AAAAAAABBR}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Time_Trace_Task. This task controls all time-based functions. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b INSPIRATION_TIME_TRACE} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
INSPIRATION_TIME_TRACE. This function tracks the time achieved during the inspiration phase. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b EXPIRATION_TIME_TRACE} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EXPIRATION_TIME_TRACE. This function tracks the time achieved during the expiration phase. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PC_SIMV_BLOWER_WAIT_TIME_TRACE} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_SIMV_BLOWER_WAIT_TIME_TRACE. This function controls the blower to hold for a few milliseconds to pause operations. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b VC_SIMV_BLOWER_WAIT_TIME_TRACE} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_SIMV_BLOWER_WAIT_TIME_TRACE. This function controls the blower to hold for a few milliseconds to pause operations. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PSV_APNEA_COUNTER_TRACE} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PSV_APNEA_COUNTER_TRACE. This function tracks the time elapsed during the apnea period in PSV mode. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b BIPAP_APNEA_COUNTER_TRACE} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BIPAP_APNEA_COUNTER_TRACE. This function tracks the time elapsed during the apnea period in bipap mode. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CPAP_APNEA_COUNTER_TRACE} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CPAP_APNEA_COUNTER_TRACE. This function tracks the time elapsed during the apnea period in cpap mode. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b APRV_APNEA_COUNTER_TRACE} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
APRV_APNEA_COUNTER_TRACE. This function tracks the time achieved during the aprv inspiration and expiration phase. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b BREATH_COUNT} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BREATH_COUNT. This function calculates the number of breaths delivered by the machine and the number of patient breaths per minute. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Nebuliser_Timing} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Nebuliser_Timing. This function tracks the running time of the nebulizer.". }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b INITIAL_WAIT_TIME} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
INITIAL_WAIT_TIME. This function control initial wait time of PSV and BIPAP. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of time based concept. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sarath Kumar \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
27/03/24 \par
}}This file contains the implementation of time based concept. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v APRV_APNEA_COUNTER_TRACE\:Two_Milli_Second_Task.c}
{\xe \v Two_Milli_Second_Task.c\:APRV_APNEA_COUNTER_TRACE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void APRV_APNEA_COUNTER_TRACE ()}}
\par
{\bkmkstart AAAAAAABBS}
{\bkmkend AAAAAAABBS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
APRV_APNEA_COUNTER_TRACE. This function tracks the time achieved during the aprv inspiration and expiration phase. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
APRV_APNEA_COUNTER_TRACE.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None.} \cell }{\cell }
{\row }
}
}}
{\xe \v BIPAP_APNEA_COUNTER_TRACE\:Two_Milli_Second_Task.c}
{\xe \v Two_Milli_Second_Task.c\:BIPAP_APNEA_COUNTER_TRACE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BIPAP_APNEA_COUNTER_TRACE ()}}
\par
{\bkmkstart AAAAAAABBT}
{\bkmkend AAAAAAABBT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BIPAP_APNEA_COUNTER_TRACE. This function tracks the time elapsed during the apnea period in bipap mode. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BIPAP_APNEA_COUNTER_TRACE.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None.} \cell }{\cell }
{\row }
}
}}
{\xe \v BREATH_COUNT\:Two_Milli_Second_Task.c}
{\xe \v Two_Milli_Second_Task.c\:BREATH_COUNT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BREATH_COUNT ()}}
\par
{\bkmkstart AAAAAAABBU}
{\bkmkend AAAAAAABBU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BREATH_COUNT. This function calculates the number of breaths delivered by the machine and the number of patient breaths per minute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BREATH_COUNT.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None.} \cell }{\cell }
{\row }
}
}}
{\xe \v CPAP_APNEA_COUNTER_TRACE\:Two_Milli_Second_Task.c}
{\xe \v Two_Milli_Second_Task.c\:CPAP_APNEA_COUNTER_TRACE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CPAP_APNEA_COUNTER_TRACE ()}}
\par
{\bkmkstart AAAAAAABBV}
{\bkmkend AAAAAAABBV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CPAP_APNEA_COUNTER_TRACE. This function tracks the time elapsed during the apnea period in cpap mode. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CPAP_APNEA_COUNTER_TRACE.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None.} \cell }{\cell }
{\row }
}
}}
{\xe \v EXPIRATION_TIME_TRACE\:Two_Milli_Second_Task.c}
{\xe \v Two_Milli_Second_Task.c\:EXPIRATION_TIME_TRACE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void EXPIRATION_TIME_TRACE ()}}
\par
{\bkmkstart AAAAAAABBW}
{\bkmkend AAAAAAABBW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EXPIRATION_TIME_TRACE. This function tracks the time achieved during the expiration phase. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EXPIRATION_TIME_TRACE.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None.} \cell }{\cell }
{\row }
}
}}
{\xe \v INITIAL_WAIT_TIME\:Two_Milli_Second_Task.c}
{\xe \v Two_Milli_Second_Task.c\:INITIAL_WAIT_TIME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void INITIAL_WAIT_TIME ()}}
\par
{\bkmkstart AAAAAAABBX}
{\bkmkend AAAAAAABBX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
INITIAL_WAIT_TIME. This function control initial wait time of PSV and BIPAP. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
INITIAL_WAIT_TIME.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None.} \cell }{\cell }
{\row }
}
}}
{\xe \v INSPIRATION_TIME_TRACE\:Two_Milli_Second_Task.c}
{\xe \v Two_Milli_Second_Task.c\:INSPIRATION_TIME_TRACE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void INSPIRATION_TIME_TRACE ()}}
\par
{\bkmkstart AAAAAAABBY}
{\bkmkend AAAAAAABBY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
INSPIRATION_TIME_TRACE. This function tracks the time achieved during the inspiration phase. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
INSPIRATION_TIME_TRACE.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None.} \cell }{\cell }
{\row }
}
}}
{\xe \v Nebuliser_Timing\:Two_Milli_Second_Task.c}
{\xe \v Two_Milli_Second_Task.c\:Nebuliser_Timing}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Nebuliser_Timing ()}}
\par
{\bkmkstart AAAAAAABBZ}
{\bkmkend AAAAAAABBZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Nebuliser_Timing. This function tracks the running time of the nebulizer.". }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None.} \cell }{\cell }
{\row }
}
}}
{\xe \v PC_SIMV_BLOWER_WAIT_TIME_TRACE\:Two_Milli_Second_Task.c}
{\xe \v Two_Milli_Second_Task.c\:PC_SIMV_BLOWER_WAIT_TIME_TRACE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PC_SIMV_BLOWER_WAIT_TIME_TRACE ()}}
\par
{\bkmkstart AAAAAAABCA}
{\bkmkend AAAAAAABCA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_SIMV_BLOWER_WAIT_TIME_TRACE. This function controls the blower to hold for a few milliseconds to pause operations. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_SIMV_BLOWER_WAIT_TIME_TRACE.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None.} \cell }{\cell }
{\row }
}
}}
{\xe \v PSV_APNEA_COUNTER_TRACE\:Two_Milli_Second_Task.c}
{\xe \v Two_Milli_Second_Task.c\:PSV_APNEA_COUNTER_TRACE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PSV_APNEA_COUNTER_TRACE ()}}
\par
{\bkmkstart AAAAAAABCB}
{\bkmkend AAAAAAABCB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PSV_APNEA_COUNTER_TRACE. This function tracks the time elapsed during the apnea period in PSV mode. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PSV_APNEA_COUNTER_TRACE.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None.} \cell }{\cell }
{\row }
}
}}
{\xe \v VC_SIMV_BLOWER_WAIT_TIME_TRACE\:Two_Milli_Second_Task.c}
{\xe \v Two_Milli_Second_Task.c\:VC_SIMV_BLOWER_WAIT_TIME_TRACE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void VC_SIMV_BLOWER_WAIT_TIME_TRACE ()}}
\par
{\bkmkstart AAAAAAABCC}
{\bkmkend AAAAAAABCC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_SIMV_BLOWER_WAIT_TIME_TRACE. This function controls the blower to hold for a few milliseconds to pause operations. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_SIMV_BLOWER_WAIT_TIME_TRACE.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None.} \cell }{\cell }
{\row }
}
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/OXYGEN_BLENDING/Oxygen_Blending.c File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/OXYGEN_BLENDING/Oxygen_Blending.c}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/OXYGEN_BLENDING/Oxygen_Blending.c}
{\bkmkstart AAAAAAABCD}
{\bkmkend AAAAAAABCD}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of Oxygen_Blending Concept. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Oxygen_Blending.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Tune_O2} (uint8_t, uint8_t)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tune_O2. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b Adjust_O2_Flow} (uint8_t)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adjust_O2_Flow. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Oxygen_Blending_Task} (void *argument)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Oxygen_Blending_Task. This Task calls the Oxygen_Blending function. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Oxygen_Blending} (uint8_t FIO2_Val)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Oxygen_Blending. This function mixes the oxygen level in the air during the mode to achieve a set value of FIO2. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Calculate_O2} (uint8_t FIO2_Val)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculate_O2. This function limits the minimum and maximum values of the achieved O2. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b O2_Initial_Parameter} (uint8_t FIO2_Val, uint8_t Flowrate)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculate_O2. This function calculates the required flow rate of O2 based on the set flow rate. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Low_Oxygen_Achieved} (uint8_t FIO2_Val, uint8_t Achieved_Oxygen)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Low_Oxygen_Achieved. This function is used to increase the proportional valve opening when low oxygen levels are detected.". }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b High_Oxygen_Achieved} (uint8_t FIO2_Val, uint8_t Achieved_Oxygen)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
High_Oxygen_Achieved. This function is used to decrease the proportional valve opening when high oxygen levels are detected. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b O2_DAC_Control} (uint8_t FIO2_Val)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
O2 DAC Control. This function is always called when the O2 set value is above 21.". }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b O2_DAC_VALUE} =0{\bkmkstart AAAAAAABCE}
{\bkmkend AAAAAAABCE}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
control proportional valve }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b O2_Flow_Event_Count}{\bkmkstart AAAAAAABCF}
{\bkmkend AAAAAAABCF}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
calculate O2 flow event attempt }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b O2_Flow_Cumulative_Val}{\bkmkstart AAAAAAABCG}
{\bkmkend AAAAAAABCG}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
calculate O2 flow cumulative value }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b O2_Flow_Rate_Need}{\bkmkstart AAAAAAABCH}
{\bkmkend AAAAAAABCH}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
calculate O2 flow rate needed }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b Extra_DAC} =0{\bkmkstart AAAAAAABCI}
{\bkmkend AAAAAAABCI}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
in case need extra opening of proportional valve }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b O2_Maximum_Limit} =5{\bkmkstart AAAAAAABCJ}
{\bkmkend AAAAAAABCJ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Last_Avg_Flow}{\bkmkstart AAAAAAABCK}
{\bkmkend AAAAAAABCK}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Achieved O2 flow rate of last breath. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Additional_O2_DAC} = 40{\bkmkstart AAAAAAABCL}
{\bkmkend AAAAAAABCL}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of Oxygen_Blending Concept. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sarath Kumar \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
27/03/24 \par
}}This file contains the implementation of Oxygen_Blending Concept within a mode, including the initialization \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v Adjust_O2_Flow\:Oxygen_Blending.c}
{\xe \v Oxygen_Blending.c\:Adjust_O2_Flow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Adjust_O2_Flow (uint8_t  {\i FIO2_Val})}}
\par
{\bkmkstart AAAAAAABCM}
{\bkmkend AAAAAAABCM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adjust_O2_Flow. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adjust O2 Flow. This function calculates the flow percentage required to achieve the desired O2 level.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i FIO2_Val} \cell }{Set fio2 value from mode. \cell }
{\row }
}
}}
{\xe \v Calculate_O2\:Oxygen_Blending.c}
{\xe \v Oxygen_Blending.c\:Calculate_O2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Calculate_O2 (uint8_t  {\i FIO2_Val})}}
\par
{\bkmkstart AAAAAAABCN}
{\bkmkend AAAAAAABCN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculate_O2. This function limits the minimum and maximum values of the achieved O2. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculate_O2.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Precondition\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
None. \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Postcondition\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
None. \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i FIO2_Val} \cell }{Set fio2 value from mode. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
None. \par
}}}}
{\xe \v High_Oxygen_Achieved\:Oxygen_Blending.c}
{\xe \v Oxygen_Blending.c\:High_Oxygen_Achieved}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void High_Oxygen_Achieved (uint8_t  {\i FIO2_Val}, uint8_t  {\i Achieved_Oxygen})}}
\par
{\bkmkstart AAAAAAABCO}
{\bkmkend AAAAAAABCO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
High_Oxygen_Achieved. This function is used to decrease the proportional valve opening when high oxygen levels are detected. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
High_Oxygen_Achieved.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i FIO2_Val} \cell }{Set fio2 value from mode. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Achieved_Oxygen} \cell }{Achieved Oxygen from previous breathe. \cell }
{\row }
}
}}
{\xe \v Low_Oxygen_Achieved\:Oxygen_Blending.c}
{\xe \v Oxygen_Blending.c\:Low_Oxygen_Achieved}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Low_Oxygen_Achieved (uint8_t  {\i FIO2_Val}, uint8_t  {\i Achieved_Oxygen})}}
\par
{\bkmkstart AAAAAAABCP}
{\bkmkend AAAAAAABCP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Low_Oxygen_Achieved. This function is used to increase the proportional valve opening when low oxygen levels are detected.". }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculate_O2.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i FIO2_Val} \cell }{Set fio2 value from mode. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Achieved_Oxygen} \cell }{Achieved Oxygen from previous breathe. \cell }
{\row }
}
}}
{\xe \v O2_DAC_Control\:Oxygen_Blending.c}
{\xe \v Oxygen_Blending.c\:O2_DAC_Control}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void O2_DAC_Control (uint8_t  {\i FIO2_Val})}}
\par
{\bkmkstart AAAAAAABCQ}
{\bkmkend AAAAAAABCQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
O2 DAC Control. This function is always called when the O2 set value is above 21.". }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
control O2 DAC value.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i FIO2_Val} \cell }{Set fio2 value from mode. \cell }
{\row }
}
}}
{\xe \v O2_Initial_Parameter\:Oxygen_Blending.c}
{\xe \v Oxygen_Blending.c\:O2_Initial_Parameter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void O2_Initial_Parameter (uint8_t  {\i FIO2_Val}, uint8_t  {\i Flowrate})}}
\par
{\bkmkstart AAAAAAABCR}
{\bkmkend AAAAAAABCR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculate_O2. This function calculates the required flow rate of O2 based on the set flow rate. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculate_O2.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i FIO2_Val} \cell }{Set fio2 value from mode. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Flowrate} \cell }{Set Flow rate to achieve a O2. \cell }
{\row }
}
}}
{\xe \v Oxygen_Blending\:Oxygen_Blending.c}
{\xe \v Oxygen_Blending.c\:Oxygen_Blending}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Oxygen_Blending (uint8_t  {\i FIO2_Val})}}
\par
{\bkmkstart AAAAAAABCS}
{\bkmkend AAAAAAABCS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Oxygen_Blending. This function mixes the oxygen level in the air during the mode to achieve a set value of FIO2. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Oxygen_Blending.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i FIO2_Val} \cell }{Set fio2 value from mode. \cell }
{\row }
}
}}
{\xe \v Oxygen_Blending_Task\:Oxygen_Blending.c}
{\xe \v Oxygen_Blending.c\:Oxygen_Blending_Task}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Oxygen_Blending_Task (void *  {\i argument})}}
\par
{\bkmkstart AAAAAAABCT}
{\bkmkend AAAAAAABCT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Oxygen_Blending_Task. This Task calls the Oxygen_Blending function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Oxygen_Blending_Task. \par
}}
{\xe \v Tune_O2\:Oxygen_Blending.c}
{\xe \v Oxygen_Blending.c\:Tune_O2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Tune_O2 (uint8_t  {\i FIO2_Val}, uint8_t  {\i Achieved_Oxygen}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABCU}
{\bkmkend AAAAAAABCU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tune_O2. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tune_O2. This function checks whether the achieved O2 value is high or low.".\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i FIO2_Val} \cell }{Set fio2 value from mode. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Achieved_Oxygen} \cell }{Achieved Oxygen from previous breathe. \cell }
{\row }
}
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/PC-SIMV/Pc_Simv_Assist_ON.c File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/PC-SIMV/Pc_Simv_Assist_ON.c}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/PC-SIMV/Pc_Simv_Assist_ON.c}
{\bkmkstart AAAAAAABCV}
{\bkmkend AAAAAAABCV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
implementation of Pc_Simv_Assist_ON mode. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Pc_Simv_Assist_ON.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b CHECK_TRIGGER_ASSIST_ON} (uint16_t Trigger_Check_Time){\bkmkstart AAAAAAABCW}
{\bkmkend AAAAAAABCW}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CHECK_TRIGGER_ASSIST_ON. This function senses the type of patient trigger that occurred during breath. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b Switch_TASK_Inspiration_CYCLE} (){\bkmkstart AAAAAAABCX}
{\bkmkend AAAAAAABCX}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Inspiration_Time_Blower_Control_PC_SIMV_ASSIST_ON} (uint16_t Blower_Signal)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inspiration_Time_Blower_Control_PC_SIMV. This function uploads a DAC value to the DAC1 peripheral to control a blower every 2 milliseconds during inspiration time. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Expiration_Time_Blower_Control_PC_SIMV_ASSIST_ON} (uint16_t Blower_Signal, float PEEP, uint16_t Expiratory_Valve_Open_Time)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Expiration_Time_Blower_Control_PC_SIMV. This function uploads a DAC value to the DAC1 peripheral to control a blower every 2 milliseconds during inspiration time. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b CHECK_PRESSURE_TRIGGER} (){\bkmkstart AAAAAAABCY}
{\bkmkend AAAAAAABCY}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CHECK_PRESSURE_TRIGGER. This function checks pressure trigger limit. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b CHECK_FLOW_TRIGGER} (){\bkmkstart AAAAAAABCZ}
{\bkmkend AAAAAAABCZ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CHECK_FLOW_TRIGGER. This function checks the flow trigger limit. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b CHECK_TRIGGER_OFFSET} (){\bkmkstart AAAAAAABDA}
{\bkmkend AAAAAAABDA}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CHECK_FLOW_TRIGGER. This function finds the trigger offset. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b Set_Blower_Val} (){\bkmkstart AAAAAAABDB}
{\bkmkend AAAAAAABDB}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b Smooth_Ramp_Pressure} (){\bkmkstart AAAAAAABDC}
{\bkmkend AAAAAAABDC}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Smooth_Ramp_Pressure. This function is used to provide a pressure value smoothly based on lung characteristics. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b Trigger_Time_Monitor} (){\bkmkstart AAAAAAABDD}
{\bkmkend AAAAAAABDD}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigger_Time_Monitor. This function calculate the trigger time. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Pc_Simv_Mode_Packet_Data} ({\b RECEIVE_GRAPH_PACKET} *Receive_Graph_Packet)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pc_Simv_Mode_Packet_Data. This task is to extract the Simv mode variable from NRF Bluetooth. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Pc_Simv_Assist_ON_Task} (void *argument)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pc_Simv_Task. This Task calls two function based on inspiration and expiration time. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PC_SIMV_Inspiration_Time_Variables_Reset} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_SIMV_Expiration_Time_Variables_Reset. This function decides which function needs to be called based on assist control. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PC_SIMV_Expiration_Time_Variables_Reset} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_SIMV_Expiration_Time_Variables_Reset. This function decides which function needs to be called based on assist control. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PC_SIMV_Assist_ON_Inspiration_Time_Variables_Reset} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_SIMV_Inspiration_Time_Variables_Reset. This function resets variables to start an inspiration cycle. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PC_SIMV_Assist_ON_Expiration_Time_Variables_Reset} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_SIMV_Expiration_Time_Variables_Reset. This function resets variables to start an expiration cycle. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b Expiratory_Valve_Open_Time} =700{\bkmkstart AAAAAAABDE}
{\bkmkend AAAAAAABDE}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
implementation of Pc_Simv_Assist_ON mode. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sarath Kumar \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
27/03/24 \par
}}This file contains the implementation Pc_Simv_Assist_ON mode variables \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v Expiration_Time_Blower_Control_PC_SIMV_ASSIST_ON\:Pc_Simv_Assist_ON.c}
{\xe \v Pc_Simv_Assist_ON.c\:Expiration_Time_Blower_Control_PC_SIMV_ASSIST_ON}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Expiration_Time_Blower_Control_PC_SIMV_ASSIST_ON (uint16_t  {\i Blower_Signal}, float  {\i PEEP}, uint16_t  {\i Expiratory_Valve_Open_Time}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABDF}
{\bkmkend AAAAAAABDF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Expiration_Time_Blower_Control_PC_SIMV. This function uploads a DAC value to the DAC1 peripheral to control a blower every 2 milliseconds during inspiration time. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Blower_Signal} \cell }{as Pressure_Mode_blower_control.BLOWER_DAC_VAL. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i PEEP} \cell }{to lock the expiratory valve in peep area. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Expiratory_Valve_Open_Time} \cell }{to control the expiratory valve lock delay. \cell }
{\row }
}
}}
{\xe \v Inspiration_Time_Blower_Control_PC_SIMV_ASSIST_ON\:Pc_Simv_Assist_ON.c}
{\xe \v Pc_Simv_Assist_ON.c\:Inspiration_Time_Blower_Control_PC_SIMV_ASSIST_ON}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Inspiration_Time_Blower_Control_PC_SIMV_ASSIST_ON (uint16_t  {\i Blower_Signal}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABDG}
{\bkmkend AAAAAAABDG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inspiration_Time_Blower_Control_PC_SIMV. This function uploads a DAC value to the DAC1 peripheral to control a blower every 2 milliseconds during inspiration time. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Blower_Signal} \cell }{as Pressure_Mode_blower_control.BLOWER_DAC_VAL. \cell }
{\row }
}
}}
{\xe \v PC_SIMV_Assist_ON_Expiration_Time_Variables_Reset\:Pc_Simv_Assist_ON.c}
{\xe \v Pc_Simv_Assist_ON.c\:PC_SIMV_Assist_ON_Expiration_Time_Variables_Reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PC_SIMV_Assist_ON_Expiration_Time_Variables_Reset ()}}
\par
{\bkmkstart AAAAAAABDH}
{\bkmkend AAAAAAABDH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_SIMV_Expiration_Time_Variables_Reset. This function resets variables to start an expiration cycle. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_SIMV_Assist_ON_Expiration_Time_Variables_Reset. \par
}}
{\xe \v PC_SIMV_Assist_ON_Inspiration_Time_Variables_Reset\:Pc_Simv_Assist_ON.c}
{\xe \v Pc_Simv_Assist_ON.c\:PC_SIMV_Assist_ON_Inspiration_Time_Variables_Reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PC_SIMV_Assist_ON_Inspiration_Time_Variables_Reset ()}}
\par
{\bkmkstart AAAAAAABDI}
{\bkmkend AAAAAAABDI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_SIMV_Inspiration_Time_Variables_Reset. This function resets variables to start an inspiration cycle. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_SIMV_Assist_ON_Inspiration_Time_Variables_Reset. \par
}}
{\xe \v Pc_Simv_Assist_ON_Task\:Pc_Simv_Assist_ON.c}
{\xe \v Pc_Simv_Assist_ON.c\:Pc_Simv_Assist_ON_Task}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Pc_Simv_Assist_ON_Task (void *  {\i argument})}}
\par
{\bkmkstart AAAAAAABDJ}
{\bkmkend AAAAAAABDJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pc_Simv_Task. This Task calls two function based on inspiration and expiration time. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pc_Simv_Assist_ON_Task. This task is used for control a pc simv mode. \par
}}
{\xe \v PC_SIMV_Expiration_Time_Variables_Reset\:Pc_Simv_Assist_ON.c}
{\xe \v Pc_Simv_Assist_ON.c\:PC_SIMV_Expiration_Time_Variables_Reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PC_SIMV_Expiration_Time_Variables_Reset ()}}
\par
{\bkmkstart AAAAAAABDK}
{\bkmkend AAAAAAABDK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_SIMV_Expiration_Time_Variables_Reset. This function decides which function needs to be called based on assist control. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_SIMV_Expiration_Time_Variables_Reset. \par
}}
{\xe \v PC_SIMV_Inspiration_Time_Variables_Reset\:Pc_Simv_Assist_ON.c}
{\xe \v Pc_Simv_Assist_ON.c\:PC_SIMV_Inspiration_Time_Variables_Reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PC_SIMV_Inspiration_Time_Variables_Reset ()}}
\par
{\bkmkstart AAAAAAABDL}
{\bkmkend AAAAAAABDL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_SIMV_Expiration_Time_Variables_Reset. This function decides which function needs to be called based on assist control. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_SIMV_Inspiration_Time_Variables_Reset. \par
}}
{\xe \v Pc_Simv_Mode_Packet_Data\:Pc_Simv_Assist_ON.c}
{\xe \v Pc_Simv_Assist_ON.c\:Pc_Simv_Mode_Packet_Data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Pc_Simv_Mode_Packet_Data ({\b RECEIVE_GRAPH_PACKET} *  {\i Receive_Graph_Packet})}}
\par
{\bkmkstart AAAAAAABDM}
{\bkmkend AAAAAAABDM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pc_Simv_Mode_Packet_Data. This task is to extract the Simv mode variable from NRF Bluetooth. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
split PC-SIMV buffer from bluetooth received data .\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i {\b RECEIVE_GRAPH_PACKET}} \cell }{structure pointer. \cell }
{\row }
}
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/PC_CMV/Pc_cmv.c File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/PC_CMV/Pc_cmv.c}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/PC_CMV/Pc_cmv.c}
{\bkmkstart AAAAAAABDN}
{\bkmkend AAAAAAABDN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
implementation of PCCMV mode. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Pc_cmv.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Inspiration_Time_Blower_Control_PC_CMV} (uint16_t)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inspiration_Time_Blower_Control_PC_CMV. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Expiration_Time_Blower_Control_PC_CMV} (uint16_t, float, uint16_t)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Expiration_Time_Blower_Control_PC_CMV. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Smooth_Ramp_Pressure} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Smooth_Ramp_Pressure. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Pc_Cmv_Mode_Packet_Data} ({\b RECEIVE_GRAPH_PACKET} *Receive_Graph_Packet)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pc_Cmv_Mode_Packet_Data. This task is to extract the PCCMV mode variable from NRF Bluetooth. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Pc_Cmv_Task} (void *argument)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pc_Cmv_Task. This Task calls two function based on inspiration and expiration time. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PC_CMV_Inspiration_Time_Variables_Reset} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_CMV_Inspiration_Time_Variables_Reset. This function resets variables to start an inspiration cycle. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PC_CMV_Expiration_Time_Variables_Reset} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_CMV_Expiration_Time_Variables_Reset. This function resets variables to start an expiration cycle. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Find_Average_Flow} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Find_Average_Flow. This function is used to find the maximum flow delivered to the lungs in the oxygen blending concept. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PIP_Not_Acheieved} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PIP_Not_Acheieved. This Function used for debugging purpose. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PIP_Acheieved} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PIP_Acheieved. This Function used for debugging purpose. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
implementation of PCCMV mode. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sarath Kumar \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
27/03/24 \par
}}This file contains the implementation PCCMV mode variables \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v Expiration_Time_Blower_Control_PC_CMV\:Pc_cmv.c}
{\xe \v Pc_cmv.c\:Expiration_Time_Blower_Control_PC_CMV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Expiration_Time_Blower_Control_PC_CMV (uint16_t  {\i Blower_Signal}, float  {\i PEEP}, uint16_t  {\i Expiratory_Valve_Open_Time}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABDO}
{\bkmkend AAAAAAABDO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Expiration_Time_Blower_Control_PC_CMV. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Expiration_Time_Blower_Control_PC_CMV. This function uploads a DAC value to the DAC1 peripheral to control a blower every 2 milliseconds during inspiration time.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Blower_Signal} \cell }{as Pressure_Mode_blower_control.BLOWER_DAC_VAL. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i PEEP} \cell }{to lock the expiratory valve in peep area. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Expiratory_Valve_Open_Time} \cell }{to control the expiratory valve lock delay. \cell }
{\row }
}
}}
{\xe \v Find_Average_Flow\:Pc_cmv.c}
{\xe \v Pc_cmv.c\:Find_Average_Flow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Find_Average_Flow ()}}
\par
{\bkmkstart AAAAAAABDP}
{\bkmkend AAAAAAABDP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Find_Average_Flow. This function is used to find the maximum flow delivered to the lungs in the oxygen blending concept. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Find_Average_Flow. \par
}}
{\xe \v Inspiration_Time_Blower_Control_PC_CMV\:Pc_cmv.c}
{\xe \v Pc_cmv.c\:Inspiration_Time_Blower_Control_PC_CMV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Inspiration_Time_Blower_Control_PC_CMV (uint16_t  {\i Blower_Signal}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABDQ}
{\bkmkend AAAAAAABDQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inspiration_Time_Blower_Control_PC_CMV. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inspiration_Time_Blower_Control_PC_CMV. This function uploads a DAC value to the DAC1 peripheral to control a blower every 2 milliseconds during inspiration time.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Blower_Signal} \cell }{as Pressure_Mode_blower_control.BLOWER_DAC_VAL. \cell }
{\row }
}
}}
{\xe \v PC_CMV_Expiration_Time_Variables_Reset\:Pc_cmv.c}
{\xe \v Pc_cmv.c\:PC_CMV_Expiration_Time_Variables_Reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PC_CMV_Expiration_Time_Variables_Reset ()}}
\par
{\bkmkstart AAAAAAABDR}
{\bkmkend AAAAAAABDR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_CMV_Expiration_Time_Variables_Reset. This function resets variables to start an expiration cycle. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_CMV_Expiration_Time_Variables_Reset. \par
}}
{\xe \v PC_CMV_Inspiration_Time_Variables_Reset\:Pc_cmv.c}
{\xe \v Pc_cmv.c\:PC_CMV_Inspiration_Time_Variables_Reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PC_CMV_Inspiration_Time_Variables_Reset ()}}
\par
{\bkmkstart AAAAAAABDS}
{\bkmkend AAAAAAABDS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_CMV_Inspiration_Time_Variables_Reset. This function resets variables to start an inspiration cycle. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC_CMV_Inspiration_Time_Variables_Reset. \par
}}
{\xe \v Pc_Cmv_Mode_Packet_Data\:Pc_cmv.c}
{\xe \v Pc_cmv.c\:Pc_Cmv_Mode_Packet_Data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Pc_Cmv_Mode_Packet_Data ({\b RECEIVE_GRAPH_PACKET} *  {\i Receive_Graph_Packet})}}
\par
{\bkmkstart AAAAAAABDT}
{\bkmkend AAAAAAABDT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pc_Cmv_Mode_Packet_Data. This task is to extract the PCCMV mode variable from NRF Bluetooth. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
split PC-CMV buffer from bluetooth received data .\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i {\b RECEIVE_GRAPH_PACKET}} \cell }{structure pointer. \cell }
{\row }
}
}}
{\xe \v Pc_Cmv_Task\:Pc_cmv.c}
{\xe \v Pc_cmv.c\:Pc_Cmv_Task}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Pc_Cmv_Task (void *  {\i argument})}}
\par
{\bkmkstart AAAAAAABDU}
{\bkmkend AAAAAAABDU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pc_Cmv_Task. This Task calls two function based on inspiration and expiration time. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pc_Cmv_Task. \par
}}
{\xe \v PIP_Acheieved\:Pc_cmv.c}
{\xe \v Pc_cmv.c\:PIP_Acheieved}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PIP_Acheieved ()}}
\par
{\bkmkstart AAAAAAABDV}
{\bkmkend AAAAAAABDV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PIP_Acheieved. This Function used for debugging purpose. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PIP_Acheieved. \par
}}
{\xe \v PIP_Not_Acheieved\:Pc_cmv.c}
{\xe \v Pc_cmv.c\:PIP_Not_Acheieved}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PIP_Not_Acheieved ()}}
\par
{\bkmkstart AAAAAAABDW}
{\bkmkend AAAAAAABDW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PIP_Not_Acheieved. This Function used for debugging purpose. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PIP_Not_Acheieved. \par
}}
{\xe \v Smooth_Ramp_Pressure\:Pc_cmv.c}
{\xe \v Pc_cmv.c\:Smooth_Ramp_Pressure}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Smooth_Ramp_Pressure (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABDX}
{\bkmkend AAAAAAABDX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Smooth_Ramp_Pressure. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Smooth_Ramp_Pressure. This function is used to provide a pressure value smoothly based on lung characteristics. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/PIP_CONTROL/PIP_Control.c File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/PIP_CONTROL/PIP_Control.c}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/PIP_CONTROL/PIP_Control.c}
{\bkmkstart AAAAAAABDY}
{\bkmkend AAAAAAABDY}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation to control a PIP. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "PIP_Control.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PIP_Control_Task} (void *argument)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PIP_Control_Task. This task controls the entire PIP during the inspiration time. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PIP_Control} (uint8_t PIP_VAL)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PIP_Control_Task. This function is the core logic of PIP control. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b INCREASE_EACH_DAC_SET_CONST} (uint8_t PIP_VAL, uint16_t Rise_Time_MS)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
INCREASE_EACH_DAC_SET_CONST. This function controls the ramptime of pip. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PIP_ACHEIVED_EARLY} (uint8_t PIP_VAL, uint16_t Rise_Time_MS)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PIP_ACHEIVED_EARLY. This function controls the ramp time of PIP because the PIP is achieved earlier than the set ramp time. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PIP_ACHEIVED_SLOWLY} (uint16_t Rise_Time_MS)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PIP_ACHEIVED_SLOWLY. This function controls the ramp time of PIP because the PIP is achieved slower than the set ramp time. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PIP_ACHEIVED_NORMALY} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PIP_ACHEIVED_NORMALY. This function works fine when ramp time witin a set value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b _PIP_NOT_ACHEIVED} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
_PIP_NOT_ACHEIVED. This function checks and controls whether the set PIP has been achieved or not. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b BLOWER_ENDING_DAC_SIGNAL_TUNE} (uint8_t PIP_VAL, uint32_t Inspiration_Time, uint8_t Rise_Time_Percent)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BLOWER_ENDING_DAC_SIGNAL_TUNE. This function controls the ending DAC value to maintain the PIP. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Minimum_Inc_Value_1} =30{\bkmkstart AAAAAAABDZ}
{\bkmkend AAAAAAABDZ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Minimum_Inc_Value_2} =100{\bkmkstart AAAAAAABEA}
{\bkmkend AAAAAAABEA}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Maximum_Inc_Value} =140{\bkmkstart AAAAAAABEB}
{\bkmkend AAAAAAABEB}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Deviation} = 5{\bkmkstart AAAAAAABEC}
{\bkmkend AAAAAAABEC}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Maximum_Time_Limit} =200{\bkmkstart AAAAAAABED}
{\bkmkend AAAAAAABED}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation to control a PIP. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sarath Kumar \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
27/03/24 \par
}}This file contains the implementation to control a PIP. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v _PIP_NOT_ACHEIVED\:PIP_Control.c}
{\xe \v PIP_Control.c\:_PIP_NOT_ACHEIVED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void _PIP_NOT_ACHEIVED ()}}
\par
{\bkmkstart AAAAAAABEE}
{\bkmkend AAAAAAABEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
_PIP_NOT_ACHEIVED. This function checks and controls whether the set PIP has been achieved or not. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
_PIP_NOT_ACHEIVED. \par
}}
{\xe \v BLOWER_ENDING_DAC_SIGNAL_TUNE\:PIP_Control.c}
{\xe \v PIP_Control.c\:BLOWER_ENDING_DAC_SIGNAL_TUNE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BLOWER_ENDING_DAC_SIGNAL_TUNE (uint8_t  {\i PIP_VAL}, uint32_t  {\i Inspiration_Time}, uint8_t  {\i Rise_Time_Percent})}}
\par
{\bkmkstart AAAAAAABEF}
{\bkmkend AAAAAAABEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BLOWER_ENDING_DAC_SIGNAL_TUNE. This function controls the ending DAC value to maintain the PIP. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BLOWER_ENDING_DAC_SIGNAL_TUNE. \par
}}
{\xe \v INCREASE_EACH_DAC_SET_CONST\:PIP_Control.c}
{\xe \v PIP_Control.c\:INCREASE_EACH_DAC_SET_CONST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void INCREASE_EACH_DAC_SET_CONST (uint8_t  {\i PIP_VAL}, uint16_t  {\i Rise_Time_MS})}}
\par
{\bkmkstart AAAAAAABEG}
{\bkmkend AAAAAAABEG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
INCREASE_EACH_DAC_SET_CONST. This function controls the ramptime of pip. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
INCREASE_EACH_DAC_SET_CONST. \par
}}
{\xe \v PIP_ACHEIVED_EARLY\:PIP_Control.c}
{\xe \v PIP_Control.c\:PIP_ACHEIVED_EARLY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PIP_ACHEIVED_EARLY (uint8_t  {\i PIP_VAL}, uint16_t  {\i Rise_Time_MS})}}
\par
{\bkmkstart AAAAAAABEH}
{\bkmkend AAAAAAABEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PIP_ACHEIVED_EARLY. This function controls the ramp time of PIP because the PIP is achieved earlier than the set ramp time. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PIP_ACHEIVED_EARLY. \par
}}
{\xe \v PIP_ACHEIVED_NORMALY\:PIP_Control.c}
{\xe \v PIP_Control.c\:PIP_ACHEIVED_NORMALY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PIP_ACHEIVED_NORMALY ()}}
\par
{\bkmkstart AAAAAAABEI}
{\bkmkend AAAAAAABEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PIP_ACHEIVED_NORMALY. This function works fine when ramp time witin a set value. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PIP_ACHEIVED_NORMALY. \par
}}
{\xe \v PIP_ACHEIVED_SLOWLY\:PIP_Control.c}
{\xe \v PIP_Control.c\:PIP_ACHEIVED_SLOWLY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PIP_ACHEIVED_SLOWLY (uint16_t  {\i Rise_Time_MS})}}
\par
{\bkmkstart AAAAAAABEJ}
{\bkmkend AAAAAAABEJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PIP_ACHEIVED_SLOWLY. This function controls the ramp time of PIP because the PIP is achieved slower than the set ramp time. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PIP_ACHEIVED_SLOWLY. \par
}}
{\xe \v PIP_Control\:PIP_Control.c}
{\xe \v PIP_Control.c\:PIP_Control}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PIP_Control (uint8_t  {\i PIP_VAL})}}
\par
{\bkmkstart AAAAAAABEK}
{\bkmkend AAAAAAABEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PIP_Control_Task. This function is the core logic of PIP control. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PIP_Control. \par
}}
{\xe \v PIP_Control_Task\:PIP_Control.c}
{\xe \v PIP_Control.c\:PIP_Control_Task}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PIP_Control_Task (void *  {\i argument})}}
\par
{\bkmkstart AAAAAAABEL}
{\bkmkend AAAAAAABEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PIP_Control_Task. This task controls the entire PIP during the inspiration time. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PIP_Control_Task. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/SENSORS/READ_SENSORS_VALUES/Sensor_Read.c File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/SENSORS/READ_SENSORS_VALUES/Sensor_Read.c}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/SENSORS/READ_SENSORS_VALUES/Sensor_Read.c}
{\bkmkstart AAAAAAABEM}
{\bkmkend AAAAAAABEM}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of All sensor data's reading area. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Sensor_Read.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Sensor_Read_Task} (void *argument)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sensor_Read_Task. This task call READ_SENSOR_TASK function. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b READ_SENSOR_TASK} (){\bkmkstart AAAAAAABEN}
{\bkmkend AAAAAAABEN}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
READ_SENSOR_TASK. This Function calls all sensor Reading functions for every 2 milli-seconds. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b CALIBRATE_SENSOR_TASK} (){\bkmkstart AAAAAAABEO}
{\bkmkend AAAAAAABEO}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CALIBRATE_SENSOR_TASK. This function is called from sensor offset task. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b Blower_Wait_Time_Calib} =0{\bkmkstart AAAAAAABEP}
{\bkmkend AAAAAAABEP}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
never used }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Calibration_Start} =0{\bkmkstart AAAAAAABEQ}
{\bkmkend AAAAAAABEQ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
never used }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b controlsys} {\b Parker_valve_tune} = \{ 10,30, 0, 0.02, 1500, 3000, 1500, 3000, 0.002 \}{\bkmkstart AAAAAAABER}
{\bkmkend AAAAAAABER}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
initialization for pid concept }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of All sensor data's reading area. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sarath Kumar \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
27/03/24 \par
}}This file contains the Implementation of All sensor data's reading area. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v Sensor_Read_Task\:Sensor_Read.c}
{\xe \v Sensor_Read.c\:Sensor_Read_Task}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Sensor_Read_Task (void *  {\i argument})}}
\par
{\bkmkstart AAAAAAABES}
{\bkmkend AAAAAAABES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sensor_Read_Task. This task call READ_SENSOR_TASK function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid \zwjSensor read handler Task \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/SENSORS/SENSORS_INTERFACE/ads1115.c File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/SENSORS/SENSORS_INTERFACE/ads1115.c}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/SENSORS/SENSORS_INTERFACE/ads1115.c}
{\bkmkstart AAAAAAABET}
{\bkmkend AAAAAAABET}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of ADS1115 Module Configuration. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <SENSORS_INTERFACE/ads1115.h>}\par
{\f2 #include <SENSORS_INTERFACE/constants.h>}\par
{\f2 #include "stm32f4xx_hal.h"}\par
{\f2 #include "string.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b ADS1115_Init} (uint8_t ads_reference, I2C_HandleTypeDef *handler)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize the ADS1115 I2C communication. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b ADS1115_Read} (uint16_t muxPort, float *voltage, I2C_HandleTypeDef *handler)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read the ADC value from the ADS1115. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of ADS1115 Module Configuration. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sarath Kumar \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
27/03/24 \par
}}This file contains the Implementation of ADS1115 Module Configuration, including the initialization \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v ADS1115_Init\:ads1115.c}
{\xe \v ads1115.c\:ADS1115_Init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HAL_StatusTypeDef ADS1115_Init (uint8_t  {\i ads_reference}, I2C_HandleTypeDef *  {\i handler})}}
\par
{\bkmkstart AAAAAAABEU}
{\bkmkend AAAAAAABEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize the ADS1115 I2C communication. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize the ADS1115 ADC.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i handler} \cell }{Pointer to the I2C handler structure. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Return values\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i HAL} \cell }{status. \cell }
{\row }
}
}}
{\xe \v ADS1115_Read\:ads1115.c}
{\xe \v ads1115.c\:ADS1115_Read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HAL_StatusTypeDef ADS1115_Read (uint16_t  {\i muxPort}, float *  {\i voltage}, I2C_HandleTypeDef *  {\i handler})}}
\par
{\bkmkstart AAAAAAABEV}
{\bkmkend AAAAAAABEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read the ADC value from the ADS1115. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read analog voltage from the ADS1115.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i muxPort} \cell }{Multiplexer configuration for the ADC. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i voltage} \cell }{Pointer to store the converted voltage. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Return values\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i HAL} \cell }{status. \cell }
{\row }
}
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/SENSORS/SENSORS_INTERFACE/controlsys.c File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/SENSORS/SENSORS_INTERFACE/controlsys.c}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/SENSORS/SENSORS_INTERFACE/controlsys.c}
{\bkmkstart AAAAAAABEW}
{\bkmkend AAAAAAABEW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PID control is used to regulate the oxygen blending process effectively.. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <SENSORS_INTERFACE/controlsys.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b controlsys_Init} ({\b controlsys} *cs)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize the control system. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b controlsys_Update} ({\b controlsys} *cs, float set, float mea)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
controlsys_Update. This function controls the oxygen flow rate as needed. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PID control is used to regulate the oxygen blending process effectively.. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sarath Kumar \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
27/03/24  \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v controlsys_Init\:controlsys.c}
{\xe \v controlsys.c\:controlsys_Init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void controlsys_Init ({\b controlsys} *  {\i cs})}}
\par
{\bkmkstart AAAAAAABEX}
{\bkmkend AAAAAAABEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize the control system. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
controlsys_Init. \par
}}
{\xe \v controlsys_Update\:controlsys.c}
{\xe \v controlsys.c\:controlsys_Update}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float controlsys_Update ({\b controlsys} *  {\i cs}, float  {\i set}, float  {\i mea})}}
\par
{\bkmkstart AAAAAAABEY}
{\bkmkend AAAAAAABEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
controlsys_Update. This function controls the oxygen flow rate as needed. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
controlsys_Update. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/SENSORS/SENSORS_INTERFACE/database.c File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/SENSORS/SENSORS_INTERFACE/database.c}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/SENSORS/SENSORS_INTERFACE/database.c}
{\bkmkstart AAAAAAABEZ}
{\bkmkend AAAAAAABEZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialization of graph values. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <SENSORS_INTERFACE/database.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b init_database} (){\bkmkstart AAAAAAABFA}
{\bkmkend AAAAAAABFA}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize the graph data. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialization of graph values. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sarath Kumar \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
27/03/24  \par
}}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/SENSORS/SENSORS_INTERFACE/digital_filters.c File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/SENSORS/SENSORS_INTERFACE/digital_filters.c}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/SENSORS/SENSORS_INTERFACE/digital_filters.c}
{\bkmkstart AAAAAAABFB}
{\bkmkend AAAAAAABFB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of Sensor Filter. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <SENSORS_INTERFACE/utilities.h>}\par
{\f2 #include "stdint.h"}\par
{\f2 #include "math.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b kalman_filter} (float mea, float *err_estimate, float err_measure, float q, int8_t last_estimate)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
kalman_filter function neglects the noise in the sensor. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of Sensor Filter. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sarath Kumar \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
27/03/24 \par
}}This file contains the Implementation of Filter for Sensor values. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v kalman_filter\:digital_filters.c}
{\xe \v digital_filters.c\:kalman_filter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float kalman_filter (float  {\i mea}, float *  {\i err_estimate}, float  {\i err_measure}, float  {\i q}, int8_t  {\i last_estimate})}}
\par
{\bkmkstart AAAAAAABFC}
{\bkmkend AAAAAAABFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
kalman_filter function neglects the noise in the sensor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kalman Filter. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/SENSORS/SENSORS_INTERFACE/mpx5010.c File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/SENSORS/SENSORS_INTERFACE/mpx5010.c}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/SENSORS/SENSORS_INTERFACE/mpx5010.c}
{\bkmkstart AAAAAAABFD}
{\bkmkend AAAAAAABFD}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of 5010 Pressure sensor Configuration. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <SENSORS_INTERFACE/constants.h>}\par
{\f2 #include <SENSORS_INTERFACE/database.h>}\par
{\f2 #include <SENSORS_INTERFACE/mpx5010.h>}\par
{\f2 #include "math.h"}\par
{\f2 #include "main.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MPX5010_init} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize the MPX5010 sensor. This function sets initial values for the sensor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MPX5010_calibrate} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calibrate the MPX5010 sensor. This function takes multiple readings to determine the sensor offset. It checks if the offset is within the allowable range. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MPX5010_read} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read data from the MPX5010 sensor. This function uses Exponentially Weighted Moving Average filter and calculates the sensor value. References: }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b MPX5010_read_adc} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Perform analog-to-digital value to voltage conversion for the MPX5010 sensor. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of 5010 Pressure sensor Configuration. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sarath Kumar \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
27/03/24 \par
}}This file contains the Implementation of 5010 Pressure sensor, including the initialization \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v MPX5010_calibrate\:mpx5010.c}
{\xe \v mpx5010.c\:MPX5010_calibrate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MPX5010_calibrate ()}}
\par
{\bkmkstart AAAAAAABFE}
{\bkmkend AAAAAAABFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calibrate the MPX5010 sensor. This function takes multiple readings to determine the sensor offset. It checks if the offset is within the allowable range. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calibrate the MPX5010 sensor. \par
}}
{\xe \v MPX5010_init\:mpx5010.c}
{\xe \v mpx5010.c\:MPX5010_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MPX5010_init ()}}
\par
{\bkmkstart AAAAAAABFF}
{\bkmkend AAAAAAABFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize the MPX5010 sensor. This function sets initial values for the sensor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize the MPX5010 sensor.\par
MPX5010_init. This function is initialize pressure sensor. \par
}}
{\xe \v MPX5010_read\:mpx5010.c}
{\xe \v mpx5010.c\:MPX5010_read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MPX5010_read ()}}
\par
{\bkmkstart AAAAAAABFG}
{\bkmkend AAAAAAABFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read data from the MPX5010 sensor. This function uses Exponentially Weighted Moving Average filter and calculates the sensor value. References: }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read data from the MPX5010 sensor.\par
MPX5010_read. This function is Calculate the runtime pressure value in cmh20.\par
{
\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab {\f2 https://hackaday.com/2019/09/06/sensor-filters-for-coders/}\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab {\f2 https://electronics.stackexchange.com/questions/30370/fast-and-memory-efficient-moving-average-calculation}\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab {\f2 https://stackoverflow.com/questions/12636613/how-to-calculate-moving-average-without-keeping-the-count-and-data-total} \par}
}}
{\xe \v MPX5010_read_adc\:mpx5010.c}
{\xe \v mpx5010.c\:MPX5010_read_adc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float MPX5010_read_adc ()}}
\par
{\bkmkstart AAAAAAABFH}
{\bkmkend AAAAAAABFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Perform analog-to-digital value to voltage conversion for the MPX5010 sensor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Perform analog-to-digital conversion for the MPX5010 sensor.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Return values\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Vout} \cell }{(in mV) \cell }
{\row }
}
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/SENSORS/SENSORS_INTERFACE/mpx5010dp.c File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/SENSORS/SENSORS_INTERFACE/mpx5010dp.c}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/SENSORS/SENSORS_INTERFACE/mpx5010dp.c}
{\bkmkstart AAAAAAABFI}
{\bkmkend AAAAAAABFI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
implementation of mpx5010dp O2 pressure sensor integration. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <SENSORS_INTERFACE/ads1115.h>}\par
{\f2 #include <SENSORS_INTERFACE/constants.h>}\par
{\f2 #include <SENSORS_INTERFACE/database.h>}\par
{\f2 #include <SENSORS_INTERFACE/mpx5010dp.h>}\par
{\f2 #include "math.h"}\par
{\f2 #include "main.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b dp_to_oxygen_flow} (float dp)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
dp_to_oxygen_flow. This function Converting differential pressure to O2 flow from mpx5010 milli volt. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b compute_oxygen_flow} (){\bkmkstart AAAAAAABFJ}
{\bkmkend AAAAAAABFJ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
compute_oxygen_flow. This function Calculate flow crossing in O2 manifold. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MPX5010DP_init} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize the MPX5010DP sensor. This function sets initial values for the sensor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MPX5010DP_calibrate} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calibrate the MPX5010DP sensor. This function takes multiple readings to determine the sensor offset. It checks if the offset is within the allowable range. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MPX5010DP_read} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read data from the MPX5010DP sensor. This function uses Exponentially Weighted Moving Average filter and calculates the sensor value. References: }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b MPX5010DP_read_adc} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Perform analog-to-digital value to voltage conversion for the MPX5010DP sensor. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
implementation of mpx5010dp O2 pressure sensor integration. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sarath Kumar \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
27/03/24 \par
}}This file contains the implementation of mpx5010dp O2 pressure sensor integration, including the initialization. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v dp_to_oxygen_flow\:mpx5010dp.c}
{\xe \v mpx5010dp.c\:dp_to_oxygen_flow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double dp_to_oxygen_flow (float  {\i dp})}}
\par
{\bkmkstart AAAAAAABFK}
{\bkmkend AAAAAAABFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
dp_to_oxygen_flow. This function Converting differential pressure to O2 flow from mpx5010 milli volt. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Return values\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i double} \cell }{O2 flow value. \cell }
{\row }
}
}}
{\xe \v MPX5010DP_calibrate\:mpx5010dp.c}
{\xe \v mpx5010dp.c\:MPX5010DP_calibrate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MPX5010DP_calibrate ()}}
\par
{\bkmkstart AAAAAAABFL}
{\bkmkend AAAAAAABFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calibrate the MPX5010DP sensor. This function takes multiple readings to determine the sensor offset. It checks if the offset is within the allowable range. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calibrate the MPX5010DP sensor. \par
}}
{\xe \v MPX5010DP_init\:mpx5010dp.c}
{\xe \v mpx5010dp.c\:MPX5010DP_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MPX5010DP_init ()}}
\par
{\bkmkstart AAAAAAABFM}
{\bkmkend AAAAAAABFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize the MPX5010DP sensor. This function sets initial values for the sensor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize the MPX5010DP sensor.\par
MPX5010DP_init. This function is initialize O2 flow sensor. \par
}}
{\xe \v MPX5010DP_read\:mpx5010dp.c}
{\xe \v mpx5010dp.c\:MPX5010DP_read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MPX5010DP_read ()}}
\par
{\bkmkstart AAAAAAABFN}
{\bkmkend AAAAAAABFN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read data from the MPX5010DP sensor. This function uses Exponentially Weighted Moving Average filter and calculates the sensor value. References: }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read data from the MPX5010DP sensor.\par
MPX5010DP_read. This function is Calculate the runtime O2 Flow value in L/min.\par
{
\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab {\f2 https://hackaday.com/2019/09/06/sensor-filters-for-coders/}\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab {\f2 https://electronics.stackexchange.com/questions/30370/fast-and-memory-efficient-moving-average-calculation}\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab {\f2 https://stackoverflow.com/questions/12636613/how-to-calculate-moving-average-without-keeping-the-count-and-data-total} \par}
}}
{\xe \v MPX5010DP_read_adc\:mpx5010dp.c}
{\xe \v mpx5010dp.c\:MPX5010DP_read_adc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float MPX5010DP_read_adc ()}}
\par
{\bkmkstart AAAAAAABFO}
{\bkmkend AAAAAAABFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Perform analog-to-digital value to voltage conversion for the MPX5010DP sensor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Perform analog-to-digital conversion for the MPX5010DP sensor.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Return values\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Vout} \cell }{(in mV) \cell }
{\row }
}
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/SENSORS/SENSORS_INTERFACE/mpx7002.c File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/SENSORS/SENSORS_INTERFACE/mpx7002.c}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/SENSORS/SENSORS_INTERFACE/mpx7002.c}
{\bkmkstart AAAAAAABFP}
{\bkmkend AAAAAAABFP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of mpx7002 Sensor integration. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <SENSORS_INTERFACE/ads1115.h>}\par
{\f2 #include <SENSORS_INTERFACE/constants.h>}\par
{\f2 #include <SENSORS_INTERFACE/database.h>}\par
{\f2 #include <SENSORS_INTERFACE/mpx7002.h>}\par
{\f2 #include "math.h"}\par
{\f2 #include "main.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Get_AW_Flow_ADS1115_OFFSET} (){\bkmkstart AAAAAAABFQ}
{\bkmkend AAAAAAABFQ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get_AW_Flow_ADS1115_OFFSET. This function is used for ADS1115 RAW volt offset. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Trigger_Flow} (){\bkmkstart AAAAAAABFR}
{\bkmkend AAAAAAABFR}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigger_Flow. this function is used for find flow trigger accuracy. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

double {\b dp_to_flow} (float dp){\bkmkstart AAAAAAABFS}
{\bkmkend AAAAAAABFS}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
compute_flow. This function is used calculate dp to flow of 2002 sensor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b compute_flow} (){\bkmkstart AAAAAAABFT}
{\bkmkend AAAAAAABFT}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
compute_flow. This function is used for finally calculate Proximal sensor flow and volume. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MPX7002_init} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize the MPX7002 sensor. This function sets initial values for the sensor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MPX7002_calibrate} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calibrate the MPX7002 sensor. This function takes multiple readings to determine the sensor offset. It checks if the offset is within the allowable range. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MPX7002_read} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read data from the MPX7002 sensor. This function uses Exponentially Weighted Moving Average filter and calculates the sensor value. References: }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b MPX7002_read_adc} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Perform analog-to-digital value to voltage conversion for the MPX7002 sensor. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b ADS1115_7002_FLOW_SENSOR_OFFSET}{\bkmkstart AAAAAAABFU}
{\bkmkend AAAAAAABFU}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of mpx7002 Sensor integration. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sarath Kumar \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
27/03/24 \par
}}This file contains the Implementation of mpx7002 Sensor integration, including the initialization. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v MPX7002_calibrate\:mpx7002.c}
{\xe \v mpx7002.c\:MPX7002_calibrate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MPX7002_calibrate ()}}
\par
{\bkmkstart AAAAAAABFV}
{\bkmkend AAAAAAABFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calibrate the MPX7002 sensor. This function takes multiple readings to determine the sensor offset. It checks if the offset is within the allowable range. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calibrate the MPX7002 sensor. \par
}}
{\xe \v MPX7002_init\:mpx7002.c}
{\xe \v mpx7002.c\:MPX7002_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MPX7002_init ()}}
\par
{\bkmkstart AAAAAAABFW}
{\bkmkend AAAAAAABFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize the MPX7002 sensor. This function sets initial values for the sensor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize the MPX7002 sensor.\par
MPX7002_init. This function is initialize flow sensor. \par
}}
{\xe \v MPX7002_read\:mpx7002.c}
{\xe \v mpx7002.c\:MPX7002_read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MPX7002_read ()}}
\par
{\bkmkstart AAAAAAABFX}
{\bkmkend AAAAAAABFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read data from the MPX7002 sensor. This function uses Exponentially Weighted Moving Average filter and calculates the sensor value. References: }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read data from the MPX7002 sensor.\par
MPX7002_read. This function is Calculate the runtime Flow value in L/min.\par
{
\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab {\f2 https://hackaday.com/2019/09/06/sensor-filters-for-coders/}\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab {\f2 https://electronics.stackexchange.com/questions/30370/fast-and-memory-efficient-moving-average-calculation}\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab {\f2 https://stackoverflow.com/questions/12636613/how-to-calculate-moving-average-without-keeping-the-count-and-data-total} \par}
}}
{\xe \v MPX7002_read_adc\:mpx7002.c}
{\xe \v mpx7002.c\:MPX7002_read_adc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float MPX7002_read_adc ()}}
\par
{\bkmkstart AAAAAAABFY}
{\bkmkend AAAAAAABFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Perform analog-to-digital value to voltage conversion for the MPX7002 sensor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Perform analog-to-digital conversion for the MPX7002 sensor.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Return values\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Vout} \cell }{(in mV) \cell }
{\row }
}
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/SENSORS/SENSORS_INTERFACE/OOM202.c File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/SENSORS/SENSORS_INTERFACE/OOM202.c}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/SENSORS/SENSORS_INTERFACE/OOM202.c}
{\bkmkstart AAAAAAABFZ}
{\bkmkend AAAAAAABFZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of Envitec O2 sensor integration. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <SENSORS_INTERFACE/ads1115.h>}\par
{\f2 #include <SENSORS_INTERFACE/constants.h>}\par
{\f2 #include <SENSORS_INTERFACE/database.h>}\par
{\f2 #include <SENSORS_INTERFACE/oom202.h>}\par
{\f2 #include "math.h"}\par
{\f2 #include "main.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b compute_fio} (uint16_t voltage){\bkmkstart AAAAAAABGA}
{\bkmkend AAAAAAABGA}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compute FiO2 Percentage Function maps Sensor voltage and FiO2 percentage. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OOM202_init} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize the OOM202 sensor. This function sets initial values for the sensor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OOM202_calibrate} (uint8_t level)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calibrate the OOM202 sensor. This function takes multiple readings to determine the sensor offset. It checks if the offset is within the allowable range. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OOM202_calculate_efficiency} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculate Efficiency of the OOM202 sensor.. The function uses the minimum and maximum offset to calculate the Efficiency of the sensor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OOM202_read} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read data from the OOM202 sensor. This function uses Exponentially Weighted Moving Average filter and calculates the sensor value. References: }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b OOM202_read_adc} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Perform analog-to-digital value to voltage conversion for the OOM202 sensor. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of Envitec O2 sensor integration. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sarath Kumar \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
27/03/24 \par
}}This file contains the Implementation of Oxygen_Blending Concept within a mode, including the initialization \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v OOM202_calculate_efficiency\:OOM202.c}
{\xe \v OOM202.c\:OOM202_calculate_efficiency}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void OOM202_calculate_efficiency ()}}
\par
{\bkmkstart AAAAAAABGB}
{\bkmkend AAAAAAABGB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculate Efficiency of the OOM202 sensor.. The function uses the minimum and maximum offset to calculate the Efficiency of the sensor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculate the efficiency of the OOM202 sensor. \par
}}
{\xe \v OOM202_calibrate\:OOM202.c}
{\xe \v OOM202.c\:OOM202_calibrate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void OOM202_calibrate (uint8_t  {\i level})}}
\par
{\bkmkstart AAAAAAABGC}
{\bkmkend AAAAAAABGC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calibrate the OOM202 sensor. This function takes multiple readings to determine the sensor offset. It checks if the offset is within the allowable range. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calibrate the OOM202 sensor. \par
}}
{\xe \v OOM202_init\:OOM202.c}
{\xe \v OOM202.c\:OOM202_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void OOM202_init ()}}
\par
{\bkmkstart AAAAAAABGD}
{\bkmkend AAAAAAABGD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize the OOM202 sensor. This function sets initial values for the sensor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize the OOM202 sensor. \par
}}
{\xe \v OOM202_read\:OOM202.c}
{\xe \v OOM202.c\:OOM202_read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void OOM202_read ()}}
\par
{\bkmkstart AAAAAAABGE}
{\bkmkend AAAAAAABGE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read data from the OOM202 sensor. This function uses Exponentially Weighted Moving Average filter and calculates the sensor value. References: }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read data from the OOM202 sensor.\par
{
\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab {\f2 https://hackaday.com/2019/09/06/sensor-filters-for-coders/}\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab {\f2 https://electronics.stackexchange.com/questions/30370/fast-and-memory-efficient-moving-average-calculation}\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab {\f2 https://stackoverflow.com/questions/12636613/how-to-calculate-moving-average-without-keeping-the-count-and-data-total} \par}
}}
{\xe \v OOM202_read_adc\:OOM202.c}
{\xe \v OOM202.c\:OOM202_read_adc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float OOM202_read_adc ()}}
\par
{\bkmkstart AAAAAAABGF}
{\bkmkend AAAAAAABGF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Perform analog-to-digital value to voltage conversion for the OOM202 sensor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Perform analog-to-digital conversion for the OOM202 sensor.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Return values\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Vout} \cell }{(in mV) \cell }
{\row }
}
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/SENSORS/SENSORS_INTERFACE/wsen10101.c File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/SENSORS/SENSORS_INTERFACE/wsen10101.c}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/SENSORS/SENSORS_INTERFACE/wsen10101.c}
{\bkmkstart AAAAAAABGG}
{\bkmkend AAAAAAABGG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of Worth sensor integration. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <SENSORS_INTERFACE/ads1115.h>}\par
{\f2 #include <SENSORS_INTERFACE/constants.h>}\par
{\f2 #include <SENSORS_INTERFACE/database.h>}\par
{\f2 #include <SENSORS_INTERFACE/wsen10101.h>}\par
{\f2 #include "math.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

double {\b dp_to_flow_wsen} (float dp){\bkmkstart AAAAAAABGH}
{\bkmkend AAAAAAABGH}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

double {\b dp_to_flow_wsen_1} (float dp){\bkmkstart AAAAAAABGI}
{\bkmkend AAAAAAABGI}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
dp_to_flow_wsen_1 WSEN10101 sensor. This function calculates the differential pressure value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b compute_flow_wsen} (){\bkmkstart AAAAAAABGJ}
{\bkmkend AAAAAAABGJ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
compute_flow_wsen WSEN10101 sensor. This function converts the differential pressure (dp) value into flow rate. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b WSEN10101_init} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize the WSEN10101 sensor. This function sets initial values for the sensor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b WSEN10101_calibrate} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calibrate the WSEN10101 sensor. This function takes multiple readings to determine the sensor offset. It checks if the offset is within the allowable range. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b WSEN10101_read} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read data from the WSEN10101 sensor. This function uses Exponentially Weighted Moving Average filter and calculates the sensor value. References: }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b WSEN10101_read_adc} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Perform analog-to-digital value to voltage conversion for the WSEN10101 sensor. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of Worth sensor integration. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sarath Kumar \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
27/03/24 \par
}}This file contains the Declaration of Worth sensor integration, including the initialization \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v WSEN10101_calibrate\:wsen10101.c}
{\xe \v wsen10101.c\:WSEN10101_calibrate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void WSEN10101_calibrate ()}}
\par
{\bkmkstart AAAAAAABGK}
{\bkmkend AAAAAAABGK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calibrate the WSEN10101 sensor. This function takes multiple readings to determine the sensor offset. It checks if the offset is within the allowable range. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calibrate the WSEN10101 sensor. \par
}}
{\xe \v WSEN10101_init\:wsen10101.c}
{\xe \v wsen10101.c\:WSEN10101_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void WSEN10101_init ()}}
\par
{\bkmkstart AAAAAAABGL}
{\bkmkend AAAAAAABGL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize the WSEN10101 sensor. This function sets initial values for the sensor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize the WSEN10101 sensor. \par
}}
{\xe \v WSEN10101_read\:wsen10101.c}
{\xe \v wsen10101.c\:WSEN10101_read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void WSEN10101_read ()}}
\par
{\bkmkstart AAAAAAABGM}
{\bkmkend AAAAAAABGM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read data from the WSEN10101 sensor. This function uses Exponentially Weighted Moving Average filter and calculates the sensor value. References: }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read data from the WSEN10101 sensor.\par
{
\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab {\f2 https://hackaday.com/2019/09/06/sensor-filters-for-coders/}\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab {\f2 https://electronics.stackexchange.com/questions/30370/fast-and-memory-efficient-moving-average-calculation}\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab {\f2 https://stackoverflow.com/questions/12636613/how-to-calculate-moving-average-without-keeping-the-count-and-data-total} \par}
}}
{\xe \v WSEN10101_read_adc\:wsen10101.c}
{\xe \v wsen10101.c\:WSEN10101_read_adc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float WSEN10101_read_adc ()}}
\par
{\bkmkstart AAAAAAABGN}
{\bkmkend AAAAAAABGN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Perform analog-to-digital value to voltage conversion for the WSEN10101 sensor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Perform analog-to-digital conversion for the WSEN10101 sensor.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Return values\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Vout} \cell }{(in mV) \cell }
{\row }
}
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/SENSORS/SENSORS_OFFSET/Sensor_Offset.c File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/SENSORS/SENSORS_OFFSET/Sensor_Offset.c}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/SENSORS/SENSORS_OFFSET/Sensor_Offset.c}
{\bkmkstart AAAAAAABGO}
{\bkmkend AAAAAAABGO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of Sensor offset calculation. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Sensor_Offset.h"}\par
{\f2 #include "stdio.h"}\par
{\f2 #include "stm32f4xx_hal.h"}\par
{\f2 #include "main.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Sensor_Offset_Task} (void *argument){\bkmkstart AAAAAAABGP}
{\bkmkend AAAAAAABGP}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sensor_Offset_Task. It is used to call the sensor offset function from within this task. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b One_Time_Task} (void *argument){\bkmkstart AAAAAAABGQ}
{\bkmkend AAAAAAABGQ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
One_Time_Task. It interchanges the phase of the breath cycle. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Declaration of Sensor offset calculation. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sarath Kumar \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
27/03/24 \par
}}This file contains the Declaration of Sensor offset calculation, including the initialization. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/VC-SIMV/Vc_Simv_Assist_ON.c File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/VC-SIMV/Vc_Simv_Assist_ON.c}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/VC-SIMV/Vc_Simv_Assist_ON.c}
{\bkmkstart AAAAAAABGR}
{\bkmkend AAAAAAABGR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
implementation of VC SIMV ASSSIT ON mode. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Vc_Simv_Assist_ON.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Inspiration_Time_Blower_Control_VC_SIMV_ASSIST_ON} (uint16_t Blower_Signal)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inspiration_Time_Blower_Control_VC_SIMV. This function uploads a DAC value to the DAC1 peripheral to control a blower every 2 milliseconds during inspiration time. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Expiration_Time_Blower_Control_VC_SIMV_ASSIST_ON} (uint16_t Blower_Signal, float PEEP, uint16_t Expiratory_Valve_Open_Time)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Expiration_Time_Blower_Control_VC_SIMV. This function uploads a DAC value to the DAC1 peripheral to control a blower every 2 milliseconds during inspiration time. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b CHECK_TRIGGER_ASSIST_ON} (uint16_t Trigger_Check_Time){\bkmkstart AAAAAAABGS}
{\bkmkend AAAAAAABGS}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CHECK_TRIGGER_ASSIST_ON. This function senses the type of patient trigger that occurred during breath. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b Switch_TASK_Inspiration_CYCLE} (){\bkmkstart AAAAAAABGT}
{\bkmkend AAAAAAABGT}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Switch_TASK_Inspiration_CYCLE. This function deletes and creates a one-time task to deliver a breath. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b CHECK_PRESSURE_TRIGGER} (){\bkmkstart AAAAAAABGU}
{\bkmkend AAAAAAABGU}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CHECK_PRESSURE_TRIGGER. This function checks pressure trigger limit. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b CHECK_FLOW_TRIGGER} (){\bkmkstart AAAAAAABGV}
{\bkmkend AAAAAAABGV}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CHECK_FLOW_TRIGGER. This function checks the flow trigger limit. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b CHECK_TRIGGER_OFFSET} (){\bkmkstart AAAAAAABGW}
{\bkmkend AAAAAAABGW}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CHECK_FLOW_TRIGGER. This function finds the trigger offset. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b CHECK_Flow_Increment} (){\bkmkstart AAAAAAABGX}
{\bkmkend AAAAAAABGX}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CHECK_Flow_Increment. This function identifies the flow achieved in the last breath cycle. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b Check_Flow_Graph} (int8_t flow_rate){\bkmkstart AAAAAAABGY}
{\bkmkend AAAAAAABGY}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check_Flow_Graph. This function identifies the flow achieved in the last breath cycle using array element. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b Trigger_Time_Monitor} (){\bkmkstart AAAAAAABGZ}
{\bkmkend AAAAAAABGZ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigger_Time_Monitor. This function calculate the trigger time. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Vc_Simv_Mode_Packet_Data} ({\b RECEIVE_GRAPH_PACKET} *Receive_Graph_Packet)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vc_Simv_Mode_Packet_Data. This task is to extract the VC-SIMV mode variable from NRF Bluetooth. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Vc_Simv_Assist_ON_Task} (void *argument)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vc_Simv_Task. This Task calls two function based on inspiration and expiration time. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b VC_SIMV_Inspiration_Time_Variables_Reset} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_SIMV_Inspiration_Time_Variables_Reset. This function decides which function needs to be called based on assist control. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b VC_SIMV_Expiration_Time_Variables_Reset} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_SIMV_Expiration_Time_Variables_Reset. This function decides which function needs to be called based on assist control. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b VC_SIMV_Assist_ON_Inspiration_Time_Variables_Reset} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_SIMV_Inspiration_Time_Variables_Reset. This function resets variables to start an inspiration cycle. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b VC_SIMV_Assist_ON_Expiration_Time_Variables_Reset} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_SIMV_Expiration_Time_Variables_Reset. This function resets variables to start an expiration cycle. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b Expiratory_Valve_Open_Time}{\bkmkstart AAAAAAABHA}
{\bkmkend AAAAAAABHA}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Stop_blower_Performance_Value}{\bkmkstart AAAAAAABHB}
{\bkmkend AAAAAAABHB}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
stop incrementing dac value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Minimum_Increment_Limit}{\bkmkstart AAAAAAABHC}
{\bkmkend AAAAAAABHC}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
minimum value of increment dac value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Maximum_Increment_Limit}{\bkmkstart AAAAAAABHD}
{\bkmkend AAAAAAABHD}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
maximum value of increment dac value. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
implementation of VC SIMV ASSSIT ON mode. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sarath Kumar \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
27/03/24 \par
}}This file contains the implementation VCCMV ASSSIT ON mode variables \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v Expiration_Time_Blower_Control_VC_SIMV_ASSIST_ON\:Vc_Simv_Assist_ON.c}
{\xe \v Vc_Simv_Assist_ON.c\:Expiration_Time_Blower_Control_VC_SIMV_ASSIST_ON}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Expiration_Time_Blower_Control_VC_SIMV_ASSIST_ON (uint16_t  {\i Blower_Signal}, float  {\i PEEP}, uint16_t  {\i Expiratory_Valve_Open_Time}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABHE}
{\bkmkend AAAAAAABHE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Expiration_Time_Blower_Control_VC_SIMV. This function uploads a DAC value to the DAC1 peripheral to control a blower every 2 milliseconds during inspiration time. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Blower_Signal} \cell }{as Pressure_Mode_blower_control.BLOWER_DAC_VAL. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i PEEP} \cell }{to lock the expiratory valve in peep area. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Expiratory_Valve_Open_Time} \cell }{to control the expiratory valve lock delay. \cell }
{\row }
}
}}
{\xe \v Inspiration_Time_Blower_Control_VC_SIMV_ASSIST_ON\:Vc_Simv_Assist_ON.c}
{\xe \v Vc_Simv_Assist_ON.c\:Inspiration_Time_Blower_Control_VC_SIMV_ASSIST_ON}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Inspiration_Time_Blower_Control_VC_SIMV_ASSIST_ON (uint16_t  {\i Blower_Signal}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABHF}
{\bkmkend AAAAAAABHF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inspiration_Time_Blower_Control_VC_SIMV. This function uploads a DAC value to the DAC1 peripheral to control a blower every 2 milliseconds during inspiration time. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Blower_Signal} \cell }{as Pressure_Mode_blower_control.BLOWER_DAC_VAL. \cell }
{\row }
}
}}
{\xe \v VC_SIMV_Assist_ON_Expiration_Time_Variables_Reset\:Vc_Simv_Assist_ON.c}
{\xe \v Vc_Simv_Assist_ON.c\:VC_SIMV_Assist_ON_Expiration_Time_Variables_Reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void VC_SIMV_Assist_ON_Expiration_Time_Variables_Reset ()}}
\par
{\bkmkstart AAAAAAABHG}
{\bkmkend AAAAAAABHG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_SIMV_Expiration_Time_Variables_Reset. This function resets variables to start an expiration cycle. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_SIMV_Assist_ON_Expiration_Time_Variables_Reset. \par
}}
{\xe \v VC_SIMV_Assist_ON_Inspiration_Time_Variables_Reset\:Vc_Simv_Assist_ON.c}
{\xe \v Vc_Simv_Assist_ON.c\:VC_SIMV_Assist_ON_Inspiration_Time_Variables_Reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void VC_SIMV_Assist_ON_Inspiration_Time_Variables_Reset ()}}
\par
{\bkmkstart AAAAAAABHH}
{\bkmkend AAAAAAABHH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_SIMV_Inspiration_Time_Variables_Reset. This function resets variables to start an inspiration cycle. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_SIMV_Assist_ON_Inspiration_Time_Variables_Reset. \par
}}
{\xe \v Vc_Simv_Assist_ON_Task\:Vc_Simv_Assist_ON.c}
{\xe \v Vc_Simv_Assist_ON.c\:Vc_Simv_Assist_ON_Task}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Vc_Simv_Assist_ON_Task (void *  {\i argument})}}
\par
{\bkmkstart AAAAAAABHI}
{\bkmkend AAAAAAABHI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vc_Simv_Task. This Task calls two function based on inspiration and expiration time. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vc_Simv_Assist_ON_Task. \par
}}
{\xe \v VC_SIMV_Expiration_Time_Variables_Reset\:Vc_Simv_Assist_ON.c}
{\xe \v Vc_Simv_Assist_ON.c\:VC_SIMV_Expiration_Time_Variables_Reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void VC_SIMV_Expiration_Time_Variables_Reset ()}}
\par
{\bkmkstart AAAAAAABHJ}
{\bkmkend AAAAAAABHJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_SIMV_Expiration_Time_Variables_Reset. This function decides which function needs to be called based on assist control. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_SIMV_Expiration_Time_Variables_Reset. \par
}}
{\xe \v VC_SIMV_Inspiration_Time_Variables_Reset\:Vc_Simv_Assist_ON.c}
{\xe \v Vc_Simv_Assist_ON.c\:VC_SIMV_Inspiration_Time_Variables_Reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void VC_SIMV_Inspiration_Time_Variables_Reset ()}}
\par
{\bkmkstart AAAAAAABHK}
{\bkmkend AAAAAAABHK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_SIMV_Inspiration_Time_Variables_Reset. This function decides which function needs to be called based on assist control. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_SIMV_Inspiration_Time_Variables_Reset. \par
}}
{\xe \v Vc_Simv_Mode_Packet_Data\:Vc_Simv_Assist_ON.c}
{\xe \v Vc_Simv_Assist_ON.c\:Vc_Simv_Mode_Packet_Data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Vc_Simv_Mode_Packet_Data ({\b RECEIVE_GRAPH_PACKET} *  {\i Receive_Graph_Packet})}}
\par
{\bkmkstart AAAAAAABHL}
{\bkmkend AAAAAAABHL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vc_Simv_Mode_Packet_Data. This task is to extract the VC-SIMV mode variable from NRF Bluetooth. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
split VC-SIMV buffer from bluetooth received data .\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i {\b RECEIVE_GRAPH_PACKET}} \cell }{structure pointer. \cell }
{\row }
}
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/VC_CMV/Vc_Cmv.c File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/VC_CMV/Vc_Cmv.c}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/VC_CMV/Vc_Cmv.c}
{\bkmkstart AAAAAAABHM}
{\bkmkend AAAAAAABHM}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
implementation of VCCMV mode. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Vc_Cmv.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Inspiration_Time_Blower_Control_VC_CMV} (uint16_t Blower_Signal)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inspiration_Time_Blower_Control_VC_CMV. This function uploads a DAC value to the DAC1 peripheral to control a blower every 2 milliseconds during inspiration time. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Expiration_Time_Blower_Control_VC_CMV} (uint16_t Blower_Signal, float PEEP, uint16_t Expiratory_Valve_Open_Time)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Expiration_Time_Blower_Control_VC_CMV. This function uploads a DAC value to the DAC1 peripheral to control a blower every 2 milliseconds during inspiration time. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b CHECK_Flow_Increment} (){\bkmkstart AAAAAAABHN}
{\bkmkend AAAAAAABHN}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CHECK_Flow_Increment. This function identifies the flow achieved in the last breath cycle. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b Check_Flow_Graph} (int8_t flow_rate){\bkmkstart AAAAAAABHO}
{\bkmkend AAAAAAABHO}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check_Flow_Graph. This function identifies the flow achieved in the last breath cycle using array element. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Vc_Cmv_Mode_Packet_Data} ({\b RECEIVE_GRAPH_PACKET} *Receive_Graph_Packet)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vc_Cmv_Mode_Packet_Data. This task is to extract the VCCMV mode variable from NRF Bluetooth. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Vc_Cmv_Task} (void *argument)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vc_Cmv_Task. This Task calls two function based on inspiration and expiration time. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b VC_CMV_Inspiration_Time_Variables_Reset} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_CMV_Inspiration_Time_Variables_Reset. This function resets variables to start an inspiration cycle. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b VC_CMV_Expiration_Time_Variables_Reset} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_CMV_Expiration_Time_Variables_Reset. This function resets variables to start an expiration cycle. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Reset_Blower_Status} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset_Blower_Status. This function Reset the blower from abnormal breath. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Volume_Not_Acheieved} (){\bkmkstart AAAAAAABHP}
{\bkmkend AAAAAAABHP}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Volume_Not_Acheieved. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Volume_Acheieved} (){\bkmkstart AAAAAAABHQ}
{\bkmkend AAAAAAABHQ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Volume_Acheieved. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Minimum_Increment_Limit} =3{\bkmkstart AAAAAAABHR}
{\bkmkend AAAAAAABHR}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
minimum value of increment dac value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Maximum_Increment_Limit} =20{\bkmkstart AAAAAAABHS}
{\bkmkend AAAAAAABHS}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
maximum value of increment dac value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Stop_blower_Performance_Value} = 15{\bkmkstart AAAAAAABHT}
{\bkmkend AAAAAAABHT}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
stop incrementing dac value. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
implementation of VCCMV mode. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sarath Kumar \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
27/03/24 \par
}}This file contains the implementation VCCMV mode variables \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v Expiration_Time_Blower_Control_VC_CMV\:Vc_Cmv.c}
{\xe \v Vc_Cmv.c\:Expiration_Time_Blower_Control_VC_CMV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Expiration_Time_Blower_Control_VC_CMV (uint16_t  {\i Blower_Signal}, float  {\i PEEP}, uint16_t  {\i Expiratory_Valve_Open_Time}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABHU}
{\bkmkend AAAAAAABHU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Expiration_Time_Blower_Control_VC_CMV. This function uploads a DAC value to the DAC1 peripheral to control a blower every 2 milliseconds during inspiration time. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Blower_Signal} \cell }{as Pressure_Mode_blower_control.BLOWER_DAC_VAL. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i PEEP} \cell }{to lock the expiratory valve in peep area. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Expiratory_Valve_Open_Time} \cell }{to control the expiratory valve lock delay. \cell }
{\row }
}
}}
{\xe \v Inspiration_Time_Blower_Control_VC_CMV\:Vc_Cmv.c}
{\xe \v Vc_Cmv.c\:Inspiration_Time_Blower_Control_VC_CMV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Inspiration_Time_Blower_Control_VC_CMV (uint16_t  {\i Blower_Signal}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABHV}
{\bkmkend AAAAAAABHV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inspiration_Time_Blower_Control_VC_CMV. This function uploads a DAC value to the DAC1 peripheral to control a blower every 2 milliseconds during inspiration time. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Blower_Signal} \cell }{as Pressure_Mode_blower_control.BLOWER_DAC_VAL. \cell }
{\row }
}
}}
{\xe \v Reset_Blower_Status\:Vc_Cmv.c}
{\xe \v Vc_Cmv.c\:Reset_Blower_Status}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Reset_Blower_Status ()}}
\par
{\bkmkstart AAAAAAABHW}
{\bkmkend AAAAAAABHW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset_Blower_Status. This function Reset the blower from abnormal breath. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset_Blower_Status. \par
}}
{\xe \v VC_CMV_Expiration_Time_Variables_Reset\:Vc_Cmv.c}
{\xe \v Vc_Cmv.c\:VC_CMV_Expiration_Time_Variables_Reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void VC_CMV_Expiration_Time_Variables_Reset ()}}
\par
{\bkmkstart AAAAAAABHX}
{\bkmkend AAAAAAABHX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_CMV_Expiration_Time_Variables_Reset. This function resets variables to start an expiration cycle. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_CMV_Expiration_Time_Variables_Reset. \par
}}
{\xe \v VC_CMV_Inspiration_Time_Variables_Reset\:Vc_Cmv.c}
{\xe \v Vc_Cmv.c\:VC_CMV_Inspiration_Time_Variables_Reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void VC_CMV_Inspiration_Time_Variables_Reset ()}}
\par
{\bkmkstart AAAAAAABHY}
{\bkmkend AAAAAAABHY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_CMV_Inspiration_Time_Variables_Reset. This function resets variables to start an inspiration cycle. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VC_CMV_Inspiration_Time_Variables_Reset. \par
}}
{\xe \v Vc_Cmv_Mode_Packet_Data\:Vc_Cmv.c}
{\xe \v Vc_Cmv.c\:Vc_Cmv_Mode_Packet_Data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Vc_Cmv_Mode_Packet_Data ({\b RECEIVE_GRAPH_PACKET} *  {\i Receive_Graph_Packet})}}
\par
{\bkmkstart AAAAAAABHZ}
{\bkmkend AAAAAAABHZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vc_Cmv_Mode_Packet_Data. This task is to extract the VCCMV mode variable from NRF Bluetooth. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
split VC-CMV buffer from bluetooth received data .\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i {\b RECEIVE_GRAPH_PACKET}} \cell }{structure pointer. \cell }
{\row }
}
}}
{\xe \v Vc_Cmv_Task\:Vc_Cmv.c}
{\xe \v Vc_Cmv.c\:Vc_Cmv_Task}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Vc_Cmv_Task (void *  {\i argument})}}
\par
{\bkmkstart AAAAAAABIA}
{\bkmkend AAAAAAABIA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vc_Cmv_Task. This Task calls two function based on inspiration and expiration time. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Task variable. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/VOLUME_CONTROL/Volume_Control.c File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/VOLUME_CONTROL/Volume_Control.c}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/Aero_Src/VOLUME_CONTROL/Volume_Control.c}
{\bkmkstart AAAAAAABIB}
{\bkmkend AAAAAAABIB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
implementation of inspiration time Volume control mode. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Volume_control.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Volume_Control_Task} (void *argument)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Volume_Control_Task. This Task control the inspiration and expiration blower dac control. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Volume_Control} (uint16_t Set_Volume_Val, uint8_t Set_Flow_Rate, uint8_t Volume_Stop_Value)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Volume_Control_Task. This function control flow upto to set tidal volume to be achieved. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b VOLUME_STOP_POINT} (uint16_t Set_Volume, uint16_t Achieved_Volume)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VOLUME_STOP_POINT. This function control stop the blower before volume reach. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b TUNE_INITIAL_DAC_VAL} (uint16_t Previous_Dac_Val, uint8_t Flow_Rate, uint8_t Flow_Max)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TUNE_INITIAL_DAC_VAL. function selects the initial DAC value based on the last breath achieved flow rate. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b LOW_Compliance_DAC_value} (uint8_t Flow_Rate)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LOW_Compliance_DAC_value. This function selects the initial DAC value based on the flow rate when the mode start condition is met. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Cut_Off_Region} (uint8_t Set_Flow_Rate)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cut_Off_Region. This function checks if any abnormal flow occurs during the inspiration time and stops the blower if detected. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Flow_Restriction_Control} (uint16_t Set_Volume_Val, uint8_t Set_Flow_Rate, uint8_t Volume_Stop_Value)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flow_Restriction_Control. This function didnt have above function. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b Blower_Cut_Off_Time} =300{\bkmkstart AAAAAAABIC}
{\bkmkend AAAAAAABIC}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int8_t {\b Cut_Off_flow_Rate_Level} =20{\bkmkstart AAAAAAABID}
{\bkmkend AAAAAAABID}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int8_t {\b Cut_Off_flow_Rate_Val}{\bkmkstart AAAAAAABIE}
{\bkmkend AAAAAAABIE}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int8_t {\b Cut_Off_flow_Rate_Val_high}{\bkmkstart AAAAAAABIF}
{\bkmkend AAAAAAABIF}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int8_t {\b Cut_Off_flow_Rate_Val_high_limit} = 15{\bkmkstart AAAAAAABIG}
{\bkmkend AAAAAAABIG}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b Time_Limit} =400{\bkmkstart AAAAAAABIH}
{\bkmkend AAAAAAABIH}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b Stop_Value} = 8{\bkmkstart AAAAAAABII}
{\bkmkend AAAAAAABII}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b Flow_Detect_Time} =800{\bkmkstart AAAAAAABIJ}
{\bkmkend AAAAAAABIJ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
implementation of inspiration time Volume control mode. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sarath Kumar \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
27/03/24 \par
}}This file contains the implementation inspiration time Volume control mode. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v Cut_Off_Region\:Volume_Control.c}
{\xe \v Volume_Control.c\:Cut_Off_Region}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Cut_Off_Region (uint8_t  {\i Set_Flow_Rate})}}
\par
{\bkmkstart AAAAAAABIK}
{\bkmkend AAAAAAABIK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cut_Off_Region. This function checks if any abnormal flow occurs during the inspiration time and stops the blower if detected. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cut_Off_Region. \par
}}
{\xe \v Flow_Restriction_Control\:Volume_Control.c}
{\xe \v Volume_Control.c\:Flow_Restriction_Control}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Flow_Restriction_Control (uint16_t  {\i Set_Volume_Val}, uint8_t  {\i Set_Flow_Rate}, uint8_t  {\i Volume_Stop_Value})}}
\par
{\bkmkstart AAAAAAABIL}
{\bkmkend AAAAAAABIL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flow_Restriction_Control. This function didnt have above function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flow_Restriction_Control. \par
}}
{\xe \v LOW_Compliance_DAC_value\:Volume_Control.c}
{\xe \v Volume_Control.c\:LOW_Compliance_DAC_value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LOW_Compliance_DAC_value (uint8_t  {\i Flow_Rate})}}
\par
{\bkmkstart AAAAAAABIM}
{\bkmkend AAAAAAABIM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LOW_Compliance_DAC_value. This function selects the initial DAC value based on the flow rate when the mode start condition is met. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LOW_Compliance_DAC_value. \par
}}
{\xe \v TUNE_INITIAL_DAC_VAL\:Volume_Control.c}
{\xe \v Volume_Control.c\:TUNE_INITIAL_DAC_VAL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t TUNE_INITIAL_DAC_VAL (uint16_t  {\i Previous_Dac_Val}, uint8_t  {\i Flow_Rate}, uint8_t  {\i Flow_Max})}}
\par
{\bkmkstart AAAAAAABIN}
{\bkmkend AAAAAAABIN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TUNE_INITIAL_DAC_VAL. function selects the initial DAC value based on the last breath achieved flow rate. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TUNE_INITIAL_DAC_VAL. \par
}}
{\xe \v Volume_Control\:Volume_Control.c}
{\xe \v Volume_Control.c\:Volume_Control}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Volume_Control (uint16_t  {\i Set_Volume_Val}, uint8_t  {\i Set_Flow_Rate}, uint8_t  {\i Volume_Stop_Value})}}
\par
{\bkmkstart AAAAAAABIO}
{\bkmkend AAAAAAABIO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Volume_Control_Task. This function control flow upto to set tidal volume to be achieved. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Volume_Control. \par
}}
{\xe \v Volume_Control_Task\:Volume_Control.c}
{\xe \v Volume_Control.c\:Volume_Control_Task}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Volume_Control_Task (void *  {\i argument})}}
\par
{\bkmkstart AAAAAAABIP}
{\bkmkend AAAAAAABIP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Volume_Control_Task. This Task control the inspiration and expiration blower dac control. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
volume control task \par
}}
{\xe \v VOLUME_STOP_POINT\:Volume_Control.c}
{\xe \v Volume_Control.c\:VOLUME_STOP_POINT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void VOLUME_STOP_POINT (uint16_t  {\i Set_Volume}, uint16_t  {\i Achieved_Volume})}}
\par
{\bkmkstart AAAAAAABIQ}
{\bkmkend AAAAAAABIQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VOLUME_STOP_POINT. This function control stop the blower before volume reach. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VOLUME_STOP_POINT. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/stm32f4xx_hal_msp.c File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/stm32f4xx_hal_msp.c}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/stm32f4xx_hal_msp.c}
{\bkmkstart AAAAAAABIR}
{\bkmkend AAAAAAABIR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file provides code for the MSP Initialization and de-Initialization codes. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "main.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b HAL_MspInit} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b HAL_ADC_MspInit} (ADC_HandleTypeDef *hadc)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ADC MSP Initialization This function configures the hardware resources used in this example. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b HAL_ADC_MspDeInit} (ADC_HandleTypeDef *hadc)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ADC MSP De-Initialization This function freeze the hardware resources used in this example. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b HAL_DAC_MspInit} (DAC_HandleTypeDef *hdac)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DAC MSP Initialization This function configures the hardware resources used in this example. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b HAL_DAC_MspDeInit} (DAC_HandleTypeDef *hdac)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DAC MSP De-Initialization This function freeze the hardware resources used in this example. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b HAL_I2C_MspInit} (I2C_HandleTypeDef *hi2c)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
I2C MSP Initialization This function configures the hardware resources used in this example. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b HAL_I2C_MspDeInit} (I2C_HandleTypeDef *hi2c)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
I2C MSP De-Initialization This function freeze the hardware resources used in this example. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b HAL_UART_MspInit} (UART_HandleTypeDef *huart)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UART MSP Initialization This function configures the hardware resources used in this example. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b HAL_UART_MspDeInit} (UART_HandleTypeDef *huart)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UART MSP De-Initialization This function freeze the hardware resources used in this example. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

DMA_HandleTypeDef {\b hdma_adc1}{\bkmkstart AAAAAAABIS}
{\bkmkend AAAAAAABIS}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file provides code for the MSP Initialization and de-Initialization codes. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Attention\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}Copyright (c) 2023 STMicroelectronics. All rights reserved.\par
This software is licensed under terms that can be found in the LICENSE file in the root directory of this software component. If no LICENSE file comes with this software, it is provided AS-IS. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v HAL_ADC_MspDeInit\:stm32f4xx_hal_msp.c}
{\xe \v stm32f4xx_hal_msp.c\:HAL_ADC_MspDeInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HAL_ADC_MspDeInit (ADC_HandleTypeDef *  {\i hadc})}}
\par
{\bkmkstart AAAAAAABIT}
{\bkmkend AAAAAAABIT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ADC MSP De-Initialization This function freeze the hardware resources used in this example. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hadc} \cell }{ADC handle pointer \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Return values\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None} \cell }{\cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ADC1 GPIO Configuration PA3 ---\'97> ADC1_IN3 PA6 ---\'97> ADC1_IN6 PC5 ---\'97> ADC1_IN15\par
}}
{\xe \v HAL_ADC_MspInit\:stm32f4xx_hal_msp.c}
{\xe \v stm32f4xx_hal_msp.c\:HAL_ADC_MspInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HAL_ADC_MspInit (ADC_HandleTypeDef *  {\i hadc})}}
\par
{\bkmkstart AAAAAAABIU}
{\bkmkend AAAAAAABIU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ADC MSP Initialization This function configures the hardware resources used in this example. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hadc} \cell }{ADC handle pointer \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Return values\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None} \cell }{\cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ADC1 GPIO Configuration PA3 ---\'97> ADC1_IN3 PA6 ---\'97> ADC1_IN6 PC5 ---\'97> ADC1_IN15\par
}}
{\xe \v HAL_DAC_MspDeInit\:stm32f4xx_hal_msp.c}
{\xe \v stm32f4xx_hal_msp.c\:HAL_DAC_MspDeInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HAL_DAC_MspDeInit (DAC_HandleTypeDef *  {\i hdac})}}
\par
{\bkmkstart AAAAAAABIV}
{\bkmkend AAAAAAABIV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DAC MSP De-Initialization This function freeze the hardware resources used in this example. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hdac} \cell }{DAC handle pointer \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Return values\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None} \cell }{\cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DAC GPIO Configuration PA4 ---\'97> DAC_OUT1 PA5 ---\'97> DAC_OUT2\par
}}
{\xe \v HAL_DAC_MspInit\:stm32f4xx_hal_msp.c}
{\xe \v stm32f4xx_hal_msp.c\:HAL_DAC_MspInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HAL_DAC_MspInit (DAC_HandleTypeDef *  {\i hdac})}}
\par
{\bkmkstart AAAAAAABIW}
{\bkmkend AAAAAAABIW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DAC MSP Initialization This function configures the hardware resources used in this example. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hdac} \cell }{DAC handle pointer \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Return values\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None} \cell }{\cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DAC GPIO Configuration PA4 ---\'97> DAC_OUT1 PA5 ---\'97> DAC_OUT2\par
}}
{\xe \v HAL_I2C_MspDeInit\:stm32f4xx_hal_msp.c}
{\xe \v stm32f4xx_hal_msp.c\:HAL_I2C_MspDeInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HAL_I2C_MspDeInit (I2C_HandleTypeDef *  {\i hi2c})}}
\par
{\bkmkstart AAAAAAABIX}
{\bkmkend AAAAAAABIX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
I2C MSP De-Initialization This function freeze the hardware resources used in this example. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hi2c} \cell }{I2C handle pointer \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Return values\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None} \cell }{\cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
I2C1 GPIO Configuration PB6 ---\'97> I2C1_SCL PB7 ---\'97> I2C1_SDA\par
I2C2 GPIO Configuration PB10 ---\'97> I2C2_SCL PB11 ---\'97> I2C2_SDA\par
I2C3 GPIO Configuration PC9 ---\'97> I2C3_SDA PA8 ---\'97> I2C3_SCL\par
}}
{\xe \v HAL_I2C_MspInit\:stm32f4xx_hal_msp.c}
{\xe \v stm32f4xx_hal_msp.c\:HAL_I2C_MspInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HAL_I2C_MspInit (I2C_HandleTypeDef *  {\i hi2c})}}
\par
{\bkmkstart AAAAAAABIY}
{\bkmkend AAAAAAABIY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
I2C MSP Initialization This function configures the hardware resources used in this example. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hi2c} \cell }{I2C handle pointer \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Return values\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None} \cell }{\cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
I2C1 GPIO Configuration PB6 ---\'97> I2C1_SCL PB7 ---\'97> I2C1_SDA\par
I2C2 GPIO Configuration PB10 ---\'97> I2C2_SCL PB11 ---\'97> I2C2_SDA\par
I2C3 GPIO Configuration PC9 ---\'97> I2C3_SDA PA8 ---\'97> I2C3_SCL\par
}}
{\xe \v HAL_MspInit\:stm32f4xx_hal_msp.c}
{\xe \v stm32f4xx_hal_msp.c\:HAL_MspInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HAL_MspInit (void )}}
\par
{\bkmkstart AAAAAAABIZ}
{\bkmkend AAAAAAABIZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the Global MSP. \par
}}
{\xe \v HAL_UART_MspDeInit\:stm32f4xx_hal_msp.c}
{\xe \v stm32f4xx_hal_msp.c\:HAL_UART_MspDeInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HAL_UART_MspDeInit (UART_HandleTypeDef *  {\i huart})}}
\par
{\bkmkstart AAAAAAABJA}
{\bkmkend AAAAAAABJA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UART MSP De-Initialization This function freeze the hardware resources used in this example. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i huart} \cell }{UART handle pointer \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Return values\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None} \cell }{\cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
USART6 GPIO Configuration PC6 ---\'97> USART6_TX PC7 ---\'97> USART6_RX\par
}}
{\xe \v HAL_UART_MspInit\:stm32f4xx_hal_msp.c}
{\xe \v stm32f4xx_hal_msp.c\:HAL_UART_MspInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HAL_UART_MspInit (UART_HandleTypeDef *  {\i huart})}}
\par
{\bkmkstart AAAAAAABJB}
{\bkmkend AAAAAAABJB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UART MSP Initialization This function configures the hardware resources used in this example. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i huart} \cell }{UART handle pointer \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Return values\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None} \cell }{\cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
USART6 GPIO Configuration PC6 ---\'97> USART6_TX PC7 ---\'97> USART6_RX\par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/stm32f4xx_hal_timebase_tim.c File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/stm32f4xx_hal_timebase_tim.c}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/stm32f4xx_hal_timebase_tim.c}
{\bkmkstart AAAAAAABJC}
{\bkmkend AAAAAAABJC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HAL time base based on the hardware TIM. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "stm32f4xx_hal.h"}\par
{\f2 #include "stm32f4xx_hal_tim.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b HAL_InitTick} (uint32_t TickPriority)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function configures the TIM6 as a time base source. The time source is configured to have 1ms time base with a dedicated Tick interrupt priority. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b HAL_SuspendTick} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Suspend Tick increment. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b HAL_ResumeTick} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resume Tick increment. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

TIM_HandleTypeDef {\b htim6}{\bkmkstart AAAAAAABJD}
{\bkmkend AAAAAAABJD}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HAL time base based on the hardware TIM. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Attention\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}Copyright (c) 2023 STMicroelectronics. All rights reserved.\par
This software is licensed under terms that can be found in the LICENSE file in the root directory of this software component. If no LICENSE file comes with this software, it is provided AS-IS. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v HAL_InitTick\:stm32f4xx_hal_timebase_tim.c}
{\xe \v stm32f4xx_hal_timebase_tim.c\:HAL_InitTick}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HAL_StatusTypeDef HAL_InitTick (uint32_t  {\i TickPriority})}}
\par
{\bkmkstart AAAAAAABJE}
{\bkmkend AAAAAAABJE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function configures the TIM6 as a time base source. The time source is configured to have 1ms time base with a dedicated Tick interrupt priority. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This function is called automatically at the beginning of program after reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig(). \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i TickPriority} \cell }{Tick interrupt priority. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Return values\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i HAL} \cell }{status \cell }
{\row }
}
}}
{\xe \v HAL_ResumeTick\:stm32f4xx_hal_timebase_tim.c}
{\xe \v stm32f4xx_hal_timebase_tim.c\:HAL_ResumeTick}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HAL_ResumeTick (void )}}
\par
{\bkmkstart AAAAAAABJF}
{\bkmkend AAAAAAABJF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resume Tick increment. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Enable the tick increment by Enabling TIM6 update interrupt. \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Return values\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None} \cell }{\cell }
{\row }
}
}}
{\xe \v HAL_SuspendTick\:stm32f4xx_hal_timebase_tim.c}
{\xe \v stm32f4xx_hal_timebase_tim.c\:HAL_SuspendTick}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HAL_SuspendTick (void )}}
\par
{\bkmkstart AAAAAAABJG}
{\bkmkend AAAAAAABJG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Suspend Tick increment. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Disable the tick increment by disabling TIM6 update interrupt. \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Return values\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None} \cell }{\cell }
{\row }
}
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/stm32f4xx_it.c File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/stm32f4xx_it.c}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/stm32f4xx_it.c}
{\bkmkstart AAAAAAABJH}
{\bkmkend AAAAAAABJH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interrupt {\b Service} Routines. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "main.h"}\par
{\f2 #include "stm32f4xx_it.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b NMI_Handler} (void){\bkmkstart AAAAAAABJI}
{\bkmkend AAAAAAABJI}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function handles Non maskable interrupt. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b HardFault_Handler} (void){\bkmkstart AAAAAAABJJ}
{\bkmkend AAAAAAABJJ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function handles Hard fault interrupt. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b MemManage_Handler} (void){\bkmkstart AAAAAAABJK}
{\bkmkend AAAAAAABJK}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function handles Memory management fault. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b BusFault_Handler} (void){\bkmkstart AAAAAAABJL}
{\bkmkend AAAAAAABJL}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function handles Pre-fetch fault, memory access fault. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b UsageFault_Handler} (void){\bkmkstart AAAAAAABJM}
{\bkmkend AAAAAAABJM}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function handles Undefined instruction or illegal state. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b DebugMon_Handler} (void){\bkmkstart AAAAAAABJN}
{\bkmkend AAAAAAABJN}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function handles Debug monitor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b EXTI2_IRQHandler} (void){\bkmkstart AAAAAAABJO}
{\bkmkend AAAAAAABJO}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function handles EXTI line2 interrupt. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b EXTI9_5_IRQHandler} (void){\bkmkstart AAAAAAABJP}
{\bkmkend AAAAAAABJP}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function handles EXTI line[9:5] interrupts. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b TIM6_DAC_IRQHandler} (void){\bkmkstart AAAAAAABJQ}
{\bkmkend AAAAAAABJQ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function handles TIM6 global interrupt, DAC1 and DAC2 underrun error interrupts. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b DMA2_Stream0_IRQHandler} (void){\bkmkstart AAAAAAABJR}
{\bkmkend AAAAAAABJR}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function handles DMA2 stream0 global interrupt. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b USART6_IRQHandler} (void){\bkmkstart AAAAAAABJS}
{\bkmkend AAAAAAABJS}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function handles USART6 global interrupt. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

DMA_HandleTypeDef {\b hdma_adc1}{\bkmkstart AAAAAAABJT}
{\bkmkend AAAAAAABJT}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

DAC_HandleTypeDef {\b hdac}{\bkmkstart AAAAAAABJU}
{\bkmkend AAAAAAABJU}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

UART_HandleTypeDef {\b huart6}{\bkmkstart AAAAAAABJV}
{\bkmkend AAAAAAABJV}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

TIM_HandleTypeDef {\b htim6}{\bkmkstart AAAAAAABJW}
{\bkmkend AAAAAAABJW}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interrupt {\b Service} Routines. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Attention\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}Copyright (c) 2023 STMicroelectronics. All rights reserved.\par
This software is licensed under terms that can be found in the LICENSE file in the root directory of this software component. If no LICENSE file comes with this software, it is provided AS-IS. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/syscalls.c File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/syscalls.c}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/syscalls.c}
{\bkmkstart AAAAAAABJX}
{\bkmkend AAAAAAABJX}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
STM32CubeIDE Minimal System calls file. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <sys/stat.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <errno.h>}\par
{\f2 #include <stdio.h>}\par
{\f2 #include <signal.h>}\par
{\f2 #include <time.h>}\par
{\f2 #include <sys/time.h>}\par
{\f2 #include <sys/times.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b __io_putchar} (int ch) {\b __attribute__}((weak)){\bkmkstart AAAAAAABJY}
{\bkmkend AAAAAAABJY}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b __io_getchar} (void){\bkmkstart AAAAAAABJZ}
{\bkmkend AAAAAAABJZ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b initialise_monitor_handles} (){\bkmkstart AAAAAAABKA}
{\bkmkend AAAAAAABKA}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b _getpid} (void){\bkmkstart AAAAAAABKB}
{\bkmkend AAAAAAABKB}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b _kill} (int pid, int sig){\bkmkstart AAAAAAABKC}
{\bkmkend AAAAAAABKC}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b _exit} (int status){\bkmkstart AAAAAAABKD}
{\bkmkend AAAAAAABKD}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b __attribute__} ((weak)){\bkmkstart AAAAAAABKE}
{\bkmkend AAAAAAABKE}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b _close} (int file){\bkmkstart AAAAAAABKF}
{\bkmkend AAAAAAABKF}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b _fstat} (int file, struct stat *st){\bkmkstart AAAAAAABKG}
{\bkmkend AAAAAAABKG}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b _isatty} (int file){\bkmkstart AAAAAAABKH}
{\bkmkend AAAAAAABKH}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b _lseek} (int file, int ptr, int dir){\bkmkstart AAAAAAABKI}
{\bkmkend AAAAAAABKI}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b _open} (char *path, int flags,...){\bkmkstart AAAAAAABKJ}
{\bkmkend AAAAAAABKJ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b _wait} (int *status){\bkmkstart AAAAAAABKK}
{\bkmkend AAAAAAABKK}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b _unlink} (char *name){\bkmkstart AAAAAAABKL}
{\bkmkend AAAAAAABKL}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b _times} (struct tms *buf){\bkmkstart AAAAAAABKM}
{\bkmkend AAAAAAABKM}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b _stat} (char *file, struct stat *st){\bkmkstart AAAAAAABKN}
{\bkmkend AAAAAAABKN}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b _link} (char *old, char *new){\bkmkstart AAAAAAABKO}
{\bkmkend AAAAAAABKO}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b _fork} (void){\bkmkstart AAAAAAABKP}
{\bkmkend AAAAAAABKP}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b _execve} (char *name, char **argv, char **env){\bkmkstart AAAAAAABKQ}
{\bkmkend AAAAAAABKQ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char ** {\b environ} = __env{\bkmkstart AAAAAAABKR}
{\bkmkend AAAAAAABKR}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
STM32CubeIDE Minimal System calls file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Auto-generated by STM32CubeIDE {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid        For more information about which c-functions\par
       need which of these lowlevel functions\par
       please consult the Newlib libc-manual\par
}
 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Attention\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}Copyright (c) 2021 STMicroelectronics. All rights reserved.\par
This software is licensed under terms that can be found in the LICENSE file in the root directory of this software component. If no LICENSE file comes with this software, it is provided AS-IS. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/sysmem.c File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/sysmem.c}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/sysmem.c}
{\bkmkstart AAAAAAABKS}
{\bkmkend AAAAAAABKS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
STM32CubeIDE System Memory calls file. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <errno.h>}\par
{\f2 #include <stdint.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void * {\b _sbrk} (ptrdiff_t incr)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b _sbrk()} allocates memory to the newlib heap and is used by malloc and others from the C library }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static uint8_t * {\b __sbrk_heap_end} = NULL\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
STM32CubeIDE System Memory calls file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Generated by STM32CubeIDE {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid        For more information about which C functions\par
       need which of these lowlevel functions\par
       please consult the newlib libc manual\par
}
 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Attention\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}Copyright (c) 2021 STMicroelectronics. All rights reserved.\par
This software is licensed under terms that can be found in the LICENSE file in the root directory of this software component. If no LICENSE file comes with this software, it is provided AS-IS. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v _sbrk\:sysmem.c}
{\xe \v sysmem.c\:_sbrk}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void * _sbrk (ptrdiff_t  {\i incr})}}
\par
{\bkmkstart AAAAAAABKT}
{\bkmkend AAAAAAABKT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b _sbrk()} allocates memory to the newlib heap and is used by malloc and others from the C library }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid * ############################################################################\par
* #  .data  #  .bss  #       newlib heap       #          MSP stack          #\par
* #         #        #                         # Reserved by _Min_Stack_Size #\par
* ############################################################################\par
* ^-- RAM start      ^-- _end                             _estack, RAM end --^\par
* }
\par
This implementation starts allocating at the '_end' linker symbol The '_Min_Stack_Size' linker symbol reserves a memory for the MSP stack The implementation considers '_estack' linker symbol to be RAM end NOTE: If the MSP stack, at any point during execution, grows larger than the reserved size, please increase the '_Min_Stack_Size'.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i incr} \cell }{Memory size \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Pointer to allocated memory \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v __sbrk_heap_end\:sysmem.c}
{\xe \v sysmem.c\:__sbrk_heap_end}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t* __sbrk_heap_end = NULL{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABKU}
{\bkmkend AAAAAAABKU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer to the current high watermark of the heap usage \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/system_stm32f4xx.c File Reference\par \pard\plain 
{\tc\tcl2 \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/system_stm32f4xx.c}
{\xe \v D:/Embedded/Codings/STM32/Aero_Embedded/Jeevan_Lite/Core/Src/system_stm32f4xx.c}
{\bkmkstart AAAAAAABKV}
{\bkmkend AAAAAAABKV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CMSIS Cortex-M4 Device Peripheral Access Layer System Source File. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "stm32f4xx.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HSE_VALUE}\~ ((uint32_t)25000000)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HSI_VALUE}\~ ((uint32_t)16000000)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SystemInit} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setup the microcontroller system Initialize the FPU setting, vector table location and External memory configuration. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SystemCoreClockUpdate} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update SystemCoreClock variable according to Clock Register Values. The SystemCoreClock variable contains the core clock (HCLK), it can be used by the user application to setup the SysTick timer or configure other parameters. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b SystemCoreClock} = 16000000\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const uint8_t {\b AHBPrescTable} [16] = \{0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9\}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const uint8_t {\b APBPrescTable} [8] = \{0, 0, 0, 0, 1, 2, 3, 4\}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CMSIS Cortex-M4 Device Peripheral Access Layer System Source File. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
MCD Application Team \par
}}This file provides two functions and one global variable to be called from user application:{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SystemInit()}: This function is called at startup just after reset and before branch to main program. This call is made inside the "startup_stm32f4xx.s" file.\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SystemCoreClock variable: Contains the core clock (HCLK), it can be used by the user application to setup the SysTick timer or configure other parameters.\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SystemCoreClockUpdate()}: Updates the variable SystemCoreClock and must be called whenever the core clock is changed during program execution.\par}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Attention\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid {\tc\tcl2 {\qc \'A9 Copyright (c) 2017 STMicroelectronics. All rights reserved.} } \par}
This software component is licensed by ST under BSD 3-Clause license, the "License"; You may not use this file except in compliance with the License. You may obtain a copy of the License at: opensource.org/licenses/BSD-3-Clause \par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
